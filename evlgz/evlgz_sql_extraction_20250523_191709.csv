文件全路径,方法名,行号,方法内容
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getBondJQJQ,94,"    public List<BondInfo> getBondJQJQ(String kmType, String bondType, Date monDate, String prdCode, String subjectType, Date chDate)
            throws Exception {
        List<BondInfo> bondInfos = new ArrayList<>();
        StringBuilder sql = new StringBuilder();
        sql.append(""with GZZQ as ( select KMMKET GZMKET,GZZQDM, nvl(SUM(GZSZZE),0) GZSZZE  from TGCORE.EVLGZ,TGCORE.MONKM "" +
                ""where GZCPDM= ? and GZDATE= ?  and GZKMDM=KMCODE  and KMCPLX= ?  and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS <> 'FZ'  "");
        if (""QJ"".equals(kmType)) {
            // 全价
            sql.append("" and KMTYPE in ("" + ZQ_KM_TYPE_QJ + "") "");
        } else {
            // 净价
            sql.append("" and KMTYPE in ("" + ZQ_KM_TYPE_JJ + "") "");
        }
        sql.append("" GROUP BY GZZQDM,kmmket)"");
        sql.append("" select GZZQDM,GZMKET,NVL(ZQXZJQ,0) ZQXZJQ,ZQSYQX,GZSZZE,ZQNAME,ZQZQLB from GZZQ "");
        sql.append("" inner join TGCORE.MONZQ on GZMKET=ZQMKET and GZZQDM=ZQCODE and ZQDATE=? and ZQSYFW='P' and ZQSTAT='A'"");
        if (!StringUtils.isEmpty(bondType)) {
            sql.append("" and ZQZQLB in ("").append(bondType).append("")"");
        }

        Object[] args = {prdCode, monDate, subjectType, chDate};
        try {
            JdbcTemplate jdbcTemplate = new JdbcTemplate();
            bondInfos = jdbcTemplate.queryForList(sql.toString(), args, new RowMapper<BondInfo>() {
                @Override
                public BondInfo mapRow(ResultSet rs, int rowNum) throws Exception {
                    BondInfo bond = new BondInfo();
                    //债券代码
                    bond.setZqcode(rs.getString(""GZZQDM"").trim());
                    //债券市场
                    bond.setZqmket(rs.getString(""GZMKET"").trim());
                    //债券名称
                    bond.setZqname(rs.getString(""ZQNAME"").trim());
                    //债券类别
                    bond.setZqlb(rs.getString(""ZQZQLB"").trim());
                    //修正久期
                    bond.setZqxzjq(rs.getBigDecimal(""ZQXZJQ""));
                    //债券市值，临时存放到票面金额中
                    bond.setZqpmje(rs.getBigDecimal(""GZSZZE""));
                    //债券剩余期限
                    bond.setZqsyqx(rs.getInt(""ZQSYQX""));
                    return bond;
                }
            });
        } catch (Exception e) {
            throw new Exception(""计算债券加权久期失败"");
        }
        return bondInfos;
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getBondAmountAndLimit,153,"    public List<BondInfo> getBondAmountAndLimit(String kmType, Date monDate, String prdCode, String subjectType, boolean existPenetrate)
            throws Exception {
        List<BondInfo> bondInfos;
        StringBuilder sql = new StringBuilder();
        sql.append(""with GZZQ as ( select KMMKET GZMKET,GZZQDM, nvl(SUM(GZSZZE),0) GZSZZE  from "");
        if (existPenetrate) {
            sql.append(ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", monDate) + "", "");
        } else {
            sql.append(""TGCORE.EVLGZ, "");
        }
        sql.append(
                ""TGCORE.MONKM where GZCPDM= ? and GZDATE= ?  and GZKMDM=KMCODE  and KMCPLX= ?  and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS <> 'FZ'  "");
        if (""QJ"".equals(kmType)) {
            // 全价
            sql.append("" and KMTYPE in ("" + ZQ_KM_TYPE_QJ + "") "");
        } else {
            // 净价
            sql.append("" and KMTYPE in ("" + ZQ_KM_TYPE_JJ + "") "");
        }
        sql.append("" GROUP BY GZZQDM,kmmket)"");
        sql.append("" select GZZQDM,GZMKET,XJLCSYQX AS ZQSYQX,ZQSYCX,ZQNAME,GZSZZE from GZZQ "");
        sql.append("" inner join TGCORE.MONZQ on GZMKET=ZQMKET and GZZQDM=ZQCODE and ZQDATE=? and ZQSYFW='P' and ZQSTAT='A'"");

        Object[] args = {prdCode, monDate, subjectType, monDate};
        try {
            JdbcTemplate jdbcTemplate = new JdbcTemplate();
            bondInfos = jdbcTemplate.queryForList(sql.toString(), args, (rs, rowNum) -> {
                BondInfo bond = new BondInfo();
                //债券代码
                bond.setZqcode(rs.getString(""GZZQDM"").trim());
                //债券市场
                bond.setZqmket(rs.getString(""GZMKET"").trim());
                //债券市值，临时存放到票面金额中
                bond.setZqpmje(rs.getBigDecimal(""GZSZZE""));
                //债券剩余期限
                bond.setZqsyqx(rs.getInt(""ZQSYQX""));
                //债券剩余存续期
                bond.setZqsycx(rs.getInt(""ZQSYCX""));
                //债券名称
                bond.setZqname(rs.getString(""ZQNAME""));
                //日期
                bond.setZqdate(monDate);
                return bond;
            });
        } catch (Exception e) {
            throw new Exception(""查询债券持仓信息失败"");
        }
        return bondInfos;
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getHoldNumList,420,"    public List<Map<String, Object>> getHoldNumList(String prdCode, Date busDate, String subjectPrdType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        sbSql.append(""WITH fz as("");
        sbSql.append(""SELECT ZQCPDM,BDZQDM,SUM( ZQDCSL )AS FZSL,BDZQMC FROM TGCORE.EVLZQDC e WHERE STRDAT <= ? and ENDDAT > ? "" +
                ""AND ZQCPDM = ? AND JYDIRT ='D' AND ZQSTAT='A' GROUP BY BDZQDM,ZQCPDM,BDZQMC ),"");
        sbSql.append("" fm as( "");
        sbSql.append(
                ""SELECT KMMKET AS GZMKET,GZZQDM,GZDATE,sum(GZGZSL) AS FMSL FROM TGCORE.MONKM m ,TGCORE.EVLGZ e WHERE GZCPDM= ? AND GZDATE= ? and KMCPLX=?  AND KMCODE =GZKMDM ""
                        +
                        ""AND KMZQLX in('ZQ','ZCZQ') AND KMTYPE ='CB' AND ISFINAL ='Y' AND KMZQLS <>'FZ' AND KMMKET='Y' GROUP BY GZCPDM,KMMKET,GZDATE,GZZQDM) "");
        sbSql.append(
                "" SELECT ZQCPDM ,BDZQDM ,nvl(FZSL,0) as FZSL ,GZZQDM,GZDATE,NVL( FMSL,0) as FMSL ,NVL(GZMKET,'Y')AS GZMKET,NVL(BDZQMC,' ') as BDZQMC  FROM fz LEFT JOIN fm ON FZ.BDZQDM=FM.GZZQDM"");

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), busDate, busDate, prdCode, prdCode, busDate, subjectPrdType);
        } catch (Exception e) {
            throw new MonitorSystException(""获取借贷数量、持仓数量失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getHoldNumListFromHsDb,446,"    public List<Map<String, Object>> getHoldNumListFromHsDb(String prdCode, Date busDate, String subjectPrdType)
            throws MonitorBussException, MonitorSystException {
        //访问备库查询分子
        StringBuilder sbSql = new StringBuilder();
        sbSql.append("" WITH fz as("");
        sbSql.append("" SELECT ZQCPDM,BDZQDM,SUM( ZQDCSL )AS FZSL,BDZQMC FROM TGCORE.EVLZQDC e ""
                + "" WHERE STRDAT <= ? and ENDDAT > ? AND ZQCPDM = ? AND JYDIRT ='D' AND ZQSTAT='A' ""
                + "" GROUP BY BDZQDM,ZQCPDM,BDZQMC )"");
        sbSql.append("" SELECT ZQCPDM ,BDZQDM ,nvl(FZSL,0) as FZSL ,NVL(BDZQMC,' ') as BDZQMC FROM fz "");
        Object[] fzargs = {busDate, busDate, prdCode};
        List<Map<String, Object>> fzList;
        try {
            final HsDbHandler hsDbHandler = SpringContextUtil.getBean(HsDbHandler.class);
            fzList = hsDbHandler.queryForList(sbSql.toString(), fzargs);
        } catch (Exception e) {
            throw new MonitorSystException(""获取借贷数量失败"", e);
        }

        //访问主库查询分母
        sbSql.setLength(0);
        sbSql.append("" WITH fm as( "");
        sbSql.append("" SELECT KMMKET AS GZMKET,GZZQDM,GZDATE,sum(GZGZSL) AS FMSL FROM TGCORE.MONKM m ,TGCORE.EVLGZ e ""
                + "" WHERE GZCPDM= ? AND GZDATE= ? and KMCPLX=?  AND KMCODE =GZKMDM ""
                + "" AND KMZQLX in('ZQ','ZCZQ') AND KMTYPE ='CB' AND ISFINAL ='Y' AND KMZQLS <>'FZ' AND KMMKET='Y' ""
                + "" GROUP BY GZCPDM,KMMKET,GZDATE,GZZQDM) "");
        sbSql.append("" SELECT GZZQDM,GZDATE,NVL( FMSL,0) as FMSL ,NVL(GZMKET,'Y')AS GZMKET FROM fm "");
        Object[] fmargs = {prdCode, busDate, subjectPrdType};
        List<Map<String, Object>> fmList;
        try {
            JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
            fmList = jdbc.queryForList(sbSql.toString(), fmargs);
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓数量失败"", e);
        }
        final Map<String, List<Map<String, Object>>> fmMap =
                fmList.stream().collect(Collectors.groupingBy(fm -> Objects.isNull(fm.get(""GZZQDM"")) ? """" : (String)fm.get(""GZZQDM"")));

        //LEFT JOIN处理
        for (Map<String, Object> fz : fzList) {
            String bdzqdm = (String)fz.get(""BDZQDM"");
            if (fmMap.containsKey(bdzqdm)) {
                final List<Map<String, Object>> subFmList = fmMap.get(bdzqdm);
                if (!CollectionUtils.isEmpty(subFmList)) {
                    final Map<String, Object> fm = subFmList.get(0);
                    fz.put(""GZZQDM"", fm.get(""GZZQDM""));
                    fz.put(""GZDATE"", fm.get(""GZDATE""));
                    fz.put(""FMSL"", fm.get(""FMSL""));
                    fz.put(""GZMKET"", fm.get(""GZMKET""));
                }
            } else {
                fz.put(""GZZQDM"", null);
                fz.put(""GZDATE"", null);
                fz.put(""FMSL"", BigDecimal.ZERO);
                fz.put(""GZMKET"", ""Y"");
            }
        }
        return fzList;
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getHoldBonds,704,"    public List<BondGlfEntity> getHoldBonds(Date busDate, String prdCode, String subjectPrdType, String prdType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        Object[] params;
        if (ZbConstants.CPLX_BX.equals(prdType) || ZbConstants.CPLX_QD.equals(prdType)) {
            sbSql.append(""with gz as ( "");
            sbSql.append(""select BIZDATE GZDATE, PRDCODE GZCPDM, KMMKET GZMKET, SECCODE GZZQDM, SUM(STADCOST) GZCBZE, SUM(STADVAL) GZSZZE "");
            sbSql.append(""from tgcore.evaluation,tgcore.monkm "");
            sbSql.append(""where BIZDATE=? and PRDCODE=? and kmcplx=? and coacode=kmcode "");
            sbSql.append(""AND KMZQLX = 'ZQ' and kmtype in('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y' and KMZQLS <> 'FZ' "");
            sbSql.append(""GROUP BY BIZDATE, PRDCODE, KMMKET, SECCODE), "");
            sbSql.append(ZQ_QD_JW);
            sbSql.append(""jnZqResult AS ( "");
            sbSql.append(""select gz.GZMKET || ':' || gz.GZZQDM AS ZQKEY, gz.*, NVL(ZQNAME,' ') AS ZQNAME, NVL(ZQFXRN,' ') AS ZQFXRN "");
            sbSql.append(""FROM gz "");
            sbSql.append(""LEFT JOIN TGCORE.MONZQ ON zqdate = ? and zqmket = GZMKET and zqcode = GZZQDM  "");
            sbSql.append(""WHERE zqstat = 'A' and ZQSYFW='P' AND ZQZQLB NOT IN ('GZ','YP','ZCJR','DFZ','ZCZQ')  "");
            sbSql.append("") "");
            sbSql.append(""SELECT * FROM jwzqResult UNION SELECT * FROM jnZqResult "");
            params = new Object[]{busDate, prdCode, subjectPrdType, busDate, busDate, busDate, busDate};
        } else {
            sbSql.append(""WITH cczq as( "");
            sbSql.append(""select GZDATE, GZCPDM, KMMKET AS GZMKET, GZZQDM, SUM(GZCBZE) AS GZCBZE, SUM(GZSZZE) AS GZSZZE "");
            sbSql.append(""from TGCORE.EVLGZ,TGCORE.MONKM "");
            sbSql.append(""where GZDATE=? and GZCPDM=? and KMCPLX=? and KMCODE=GZKMDM "");
            sbSql.append(""and KMZQLX = 'ZQ' and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y' and KMZQLS <> 'FZ' "");
            sbSql.append(""GROUP BY GZDATE, GZCPDM, KMMKET, GZZQDM) "");
            sbSql.append(""select cczq.GZMKET || ':' || cczq.GZZQDM AS ZQKEY, cczq.*, NVL(ZQNAME,' ') ZQNAME,NVL(ZQFXRN,' ') ZQFXRN FROM cczq "");
            sbSql.append(""LEFT JOIN TGCORE.MONZQ ON zqdate = GZDATE and zqmket = GZMKET and zqcode = GZZQDM "");
            sbSql.append(""WHERE zqstat = 'A' and ZQSYFW='P' AND ZQZQLB NOT IN ('GZ','YP','ZCJR','DFZ','ZCZQ') "");
            params = new Object[]{busDate, prdCode, subjectPrdType};
        }
        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), params, new RowMapper<BondGlfEntity>() {
                @Override
                public BondGlfEntity mapRow(ResultSet rs, int rowNum) throws Exception {
                    BondGlfEntity res = new BondGlfEntity();
                    res.setZqKey(rs.getString(""ZQKEY""));
                    res.setGzDate(rs.getDate(""GZDATE""));
                    res.setGzCpdm(rs.getString(""GZCPDM""));
                    res.setGzMket(rs.getString(""GZMKET""));
                    res.setGzZqdm(rs.getString(""GZZQDM""));
                    res.setGzCbze(rs.getBigDecimal(""GZCBZE""));
                    res.setGzSzze(rs.getBigDecimal(""GZSZZE""));
                    res.setZqName(rs.getString(""ZQNAME""));
                    res.setZqFxrn(rs.getString(""ZQFXRN""));
                    return res;
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓债券失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getHoldBondsGlf,769,"    public List<BondGlfEntity> getHoldBondsGlf(Date busDate, String prdCode, String subjectPrdType, String prdType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        Object[] params;
        if (ZbConstants.CPLX_BX.equals(prdType) || ZbConstants.CPLX_QD.equals(prdType)) {
            sbSql.append(""WITH gz as( "");
            sbSql.append(""SELECT BIZDATE GZDATE, PRDCODE GZCPDM, KMMKET GZMKET, SECCODE GZZQDM, SUM(STADCOST) GZCBZE, SUM(STADVAL) GZSZZE "");
            sbSql.append(""from TGCORE.EVALUATION ,TGCORE.MONKM "");
            sbSql.append(""where BIZDATE=? and PRDCODE=? and KMCPLX=? and KMCODE=COACODE "");
            sbSql.append(""and KMZQLX = 'ZQ' and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y' and KMZQLS <> 'FZ' "");
            sbSql.append(""GROUP BY BIZDATE, PRDCODE, KMMKET, SECCODE ),"");
            sbSql.append(ZQ_QD_JW);
            sbSql.append(""jnZqResult AS ( "");
            sbSql.append(""select gz.GZMKET || ':' || gz.GZZQDM AS ZQKEY, gz.*, NVL(ZQNAME,' ') AS ZQNAME, NVL(ZQFXRN,' ') AS ZQFXRN "");
            sbSql.append(""FROM gz "");
            sbSql.append(""LEFT JOIN TGCORE.MONZQ ON zqdate = ? and zqmket = GZMKET and zqcode = GZZQDM  "");
            sbSql.append(""WHERE zqstat = 'A' and ZQSYFW='P' AND ZQZQLB NOT IN ('GZ','YP','ZCJR','DFZ','ZCZQ')  "");
            sbSql.append(""), "");
            sbSql.append(""cczqResult AS (SELECT * FROM jwzqResult UNION SELECT * FROM jnZqResult)"");
            sbSql.append(""SELECT cczqResult.*,NVL(RELATED_PARTY_NAME,' ') AS GLFRN FROM cczqResult "");
            sbSql.append(""LEFT JOIN TGCORE.MON_RELATED_PARTY ON BUSDATE = gzdate AND ZQFXRN = ISSUER_FULLNAME "");
            sbSql.append(""ORDER BY GZZQDM,GZMKET "");
            params = new Object[]{busDate, prdCode, subjectPrdType, busDate, busDate, busDate, busDate};
        } else {
            sbSql.append(""WITH cczq as( "");
            sbSql.append(""SELECT GZDATE, GZCPDM, KMMKET AS GZMKET, GZZQDM, SUM(GZCBZE) AS GZCBZE, SUM(GZSZZE) AS GZSZZE "");
            sbSql.append(""from TGCORE.EVLGZ,TGCORE.MONKM "");
            sbSql.append(""where GZDATE=? and GZCPDM=? and KMCPLX=? and KMCODE=GZKMDM "");
            sbSql.append(""and KMZQLX = 'ZQ' and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y'  and KMZQLS <> 'FZ' "");
            sbSql.append(""GROUP BY GZDATE, GZCPDM, KMMKET, GZZQDM ), "");
            sbSql.append(""cczqResult AS ( "");
            sbSql.append(""SELECT cczq.GZMKET || ':' || cczq.GZZQDM AS ZQKEY, cczq.*, NVL(ZQNAME,' ') ZQNAME, NVL(ZQFXRN,' ') ZQFXRN FROM cczq "");
            sbSql.append(""LEFT JOIN TGCORE.MONZQ ON zqdate = GZDATE and zqmket = GZMKET and zqcode = GZZQDM  "");
            sbSql.append(""where zqstat = 'A' and ZQSYFW='P' AND ZQZQLB NOT IN ('GZ','YP','ZCJR','DFZ','ZCZQ') ) "");
            sbSql.append(""SELECT cczqResult.*,NVL(RELATED_PARTY_NAME,' ') AS GLFRN FROM cczqResult "");
            sbSql.append(""LEFT JOIN TGCORE.MON_RELATED_PARTY ON BUSDATE = gzdate AND ZQFXRN = ISSUER_FULLNAME "");
            sbSql.append(""ORDER BY GZZQDM,GZMKET "");
            params = new Object[]{busDate, prdCode, subjectPrdType};
        }
        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), params, new RowMapper<BondGlfEntity>() {
                @Override
                public BondGlfEntity mapRow(ResultSet rs, int rowNum) throws Exception {
                    BondGlfEntity res = new BondGlfEntity();
                    res.setZqKey(rs.getString(""ZQKEY""));
                    res.setGzDate(rs.getDate(""GZDATE""));
                    res.setGzCpdm(rs.getString(""GZCPDM""));
                    res.setGzMket(rs.getString(""GZMKET""));
                    res.setGzZqdm(rs.getString(""GZZQDM""));
                    res.setGzCbze(rs.getBigDecimal(""GZCBZE""));
                    res.setGzSzze(rs.getBigDecimal(""GZSZZE""));
                    res.setZqFxrn(rs.getString(""ZQFXRN""));
                    res.setZqGlf(rs.getString(""GLFRN""));
                    return res;
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓债券对应的关联方失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getHoldBondsGlfDetail,842,"    getHoldBondsGlfDetail(Date busDate, String prdCode, String subjectPrdType, String zqFxrn, String prdType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        Object[] params;
        if (ZbConstants.CPLX_BX.equals(prdType) || ZbConstants.CPLX_QD.equals(prdType)) {
            sbSql.append(""WITH gz as( "");
            sbSql.append(""SELECT BIZDATE AS GZDATE,PRDCODE AS GZCPDM, "");
            sbSql.append(""ACCCODE AS GZZHDM,COACODE AS GZKMDM,KMMKET AS GZMKET, SECCODE AS GZZQDM,STADCOST AS GZCBZE,STADVAL AS GZSZZE "");
            sbSql.append(""from TGCORE.EVALUATION ,TGCORE.MONKM "");
            sbSql.append(""where BIZDATE=? and PRDCODE=? and KMCPLX=? and KMCODE=COACODE "");
            sbSql.append(""and KMZQLX = 'ZQ' and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y' and KMZQLS <> 'FZ' "");
            sbSql.append(""),"");
            sbSql.append(ZQ_QD_JW);
            sbSql.append(""jnZqResult AS ( "");
            sbSql.append(""select gz.GZMKET || ':' || gz.GZZQDM AS ZQKEY, gz.*, NVL(ZQNAME,' ') AS ZQNAME, NVL(ZQFXRN,' ') AS ZQFXRN "");
            sbSql.append(""FROM gz "");
            sbSql.append(""LEFT JOIN TGCORE.MONZQ ON zqdate = ? and zqmket = GZMKET and zqcode = GZZQDM  "");
            sbSql.append(""WHERE zqstat = 'A' and ZQSYFW='P' AND ZQZQLB NOT IN ('GZ','YP','ZCJR','DFZ','ZCZQ')  "");
            sbSql.append(""), "");
            sbSql.append(""cczqResult AS (SELECT * FROM jwzqResult UNION SELECT * FROM jnZqResult) "");
            sbSql.append(""select * from cczqResult where 1 = 1 "");
            if (StringUtil.isNotEmpty(zqFxrn)) {
                sbSql.append(""AND ZQFXRN in('"" + zqFxrn + ""') "");
            }
            sbSql.append(""ORDER BY GZZQDM,GZMKET "");
            params = new Object[]{busDate, prdCode, subjectPrdType, busDate, busDate, busDate, busDate};
        } else {
            sbSql.append(""WITH cczq as( "");
            sbSql.append(""SELECT GZDATE, GZCPDM, GZZHDM, GZKMDM, KMMKET AS GZMKET, GZZQDM,GZCBZE, GZSZZE from TGCORE.EVLGZ,TGCORE.MONKM "");
            sbSql.append(""where GZDATE=? and GZCPDM=? and KMCPLX=? and KMCODE=GZKMDM "");
            sbSql.append(""and KMZQLX = 'ZQ' and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y'  and KMZQLS <> 'FZ' "");
            sbSql.append(""), "");
            sbSql.append(""cczqResult AS ( "");
            sbSql.append(""SELECT cczq.GZMKET || ':' || cczq.GZZQDM AS ZQKEY, cczq.*, NVL(ZQNAME,' ') ZQNAME, NVL(ZQFXRN,' ') ZQFXRN FROM cczq "");
            sbSql.append(""LEFT JOIN TGCORE.MONZQ ON zqdate = GZDATE and zqmket = GZMKET and zqcode = GZZQDM "");
            sbSql.append(""where zqstat = 'A' and ZQSYFW='P' AND ZQZQLB NOT IN ('GZ','YP','ZCJR','DFZ','ZCZQ') "");
            if (StringUtil.isNotEmpty(zqFxrn)) {
                sbSql.append(""AND ZQFXRN in('"" + zqFxrn + ""') "");
            }
            sbSql.append("") "");
            sbSql.append(""SELECT cczqResult.* FROM cczqResult "");
            sbSql.append(""ORDER BY GZZQDM,GZMKET "");
            params = new Object[]{busDate, prdCode, subjectPrdType};
        }
        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), params, new RowMapper<BondGlfDetail>() {
                @Override
                public BondGlfDetail mapRow(ResultSet rs, int rowNum) throws Exception {
                    BondGlfDetail res = new BondGlfDetail();
                    res.setGzZhdm(rs.getString(""GZZHDM""));
                    res.setGzKmdm(rs.getString(""GZKMDM""));
                    res.setGzMket(rs.getString(""GZMKET""));
                    res.setGzZqdm(rs.getString(""GZZQDM""));
                    res.setZqName(rs.getString(""ZQNAME""));
                    res.setGzCbze(rs.getBigDecimal(""GZCBZE""));
                    res.setGzSzze(rs.getBigDecimal(""GZSZZE""));
                    res.setZqFxrn(rs.getString(""ZQFXRN""));
                    return res;
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓债券发行人及其关联方详细信息失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getBondCC,958,"    public List<BondInfo> getBondCC(Date monDate, String prdCode, String subjectType, Date chDate) throws Exception {
        List<BondInfo> bondInfos = new ArrayList<>();
        StringBuilder sql = new StringBuilder();
        sql.append(""with GZZQ as ( select KMMKET GZMKET,GZZQDM,GZZHMC, nvl(SUM(GZSZZE),0) GZSZZE  from TGCORE.EVLGZ,TGCORE.MONKM "" +
                ""where GZCPDM= ? and GZDATE= ?  and GZKMDM=KMCODE  and KMCPLX= ?  and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS <> 'FZ'  "");
        // 净价
        sql.append("" and KMTYPE in ("" + ZQ_KM_TYPE_JJ + "") "");
        sql.append("" GROUP BY GZZQDM,KMMKET,GZZHMC)"");
        sql.append("" select GZZQDM,GZZHMC,GZMKET,GZSZZE,nvl(ZQZQLB, ' ') ZQZQLB,nvl(ZQPJJB, ' ') ZQPJJB,nvl(ZQPJNZ, ' ') ZQPJNZ from GZZQ "");
        sql.append("" left join TGCORE.MONZQ on GZMKET=ZQMKET and GZZQDM=ZQCODE and ZQDATE=? and ZQSYFW='P' and ZQSTAT='A'"");

        Object[] args = {prdCode, monDate, subjectType, chDate};
        try {
            JdbcTemplate jdbcTemplate = new JdbcTemplate();
            bondInfos = jdbcTemplate.queryForList(sql.toString(), args, new RowMapper<BondInfo>() {
                @Override
                public BondInfo mapRow(ResultSet rs, int rowNum) throws Exception {
                    BondInfo bond = new BondInfo();
                    //债券代码
                    bond.setZqcode(rs.getString(""GZZQDM"").trim());
                    // 债券名称
                    bond.setZqname(rs.getString(""GZZHMC""));
                    //债券市场
                    bond.setZqmket(rs.getString(""GZMKET"").trim());
                    //债券市值，临时存放到票面金额中
                    bond.setZqpmje(rs.getBigDecimal(""GZSZZE""));
                    // 债券类别
                    bond.setZqlb(rs.getString(""ZQZQLB""));
                    // 债券评级级别
                    bond.setZqpjjb(rs.getString(""ZQPJJB""));
                    // 债券发行主体评级（中债除外）
                    bond.setZqpjnz(rs.getString(""ZQPJNZ""));

                    return bond;
                }
            });
        } catch (Exception e) {
            throw new Exception(""查询债券持仓失败！"");
        }
        return bondInfos;
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getBondHoldingInfo,1055,"    public List<Map<String, Object>> getBondHoldingInfo(final Date monDate, final String prdCode, final String subjectType, final boolean isFullPrice)
            throws SQLException {
        StringBuilder sql = new StringBuilder();
        //估值表债券、资产支持证券持仓
        sql.append(""with cczq as ( "");
        sql.append(""  select GZZHDM ACCOUNT, GZZQDM as SECCODE, KMMKET as MARKET, GZSZZE, KMTZFL,KMZQLX "");
        sql.append(""  from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM=? and GZDATE=?  and  GZKMDM=KMCODE "");
        sql.append(""  and KMCPLX=? and KMZQLX in ('ZQ', 'ZCZQ') and "");
        if (isFullPrice) {
            sql.append("" KMTYPE in ('CB','LX','YJLX') "");
        } else {
            sql.append("" KMTYPE in ('CB') "");
        }
        sql.append("" and KMZQLS<>'FZ' and ISFINAL='Y' ),"");
        //关联账户重分类表，取出调整后的投资分类,并提出除资产支持证券外的持有到期债券
        sql.append(""cczqfl as (select SECCODE,MARKET,GZSZZE, NVL(INVEST_CLASSIFY, KMTZFL) as TZFL,KMZQLX from cczq "");
        sql.append(""  left join (select ACCOUNT_CODE, INVEST_CLASSIFY from TGCORE.MON_INVEST_RECLASSIFY where PRD_CODE=?"" +
                "" and ? between START_DATE and END_DATE "" +
                "" and STATUS='A') cfl"");
        sql.append(""  on cfl.ACCOUNT_CODE=cczq.ACCOUNT ),"");

        sql.append("" cczqhz as (select SECCODE,MARKET,TZFL,sum(GZSZZE) AMOUNT from cczqfl where KMZQLX='ZCZQ' or TZFL<>'F' ""
                + ""group by SECCODE,MARKET,TZFL), "");

        sql.append(""chzq as (select ZQCODE,ZQMKET,ZQNAME,ZQSILB,ZQYXZQ,ZQFXRN, ZQSTRD ,ZQENDD,ZQLVLX,ZQFXCS,ZQQLTK,ZQHSRQ,ZQFXFS,ZQSYQX  "")
                .append(""from TGCORE.MONZQ where ZQDATE = ? and ZQSYFW='P' and ZQSTAT='A' ),"");

        sql.append("" zzq as ( select SECCODE, MARKET, AMOUNT,TZFL,ZQNAME as SECNAME, ZQSILB, ZQYXZQ,ZQFXRN, ZQSTRD ,""
                + ""ZQENDD,ZQLVLX,ZQFXCS ,ZQQLTK,ZQHSRQ,ZQFXFS,ZQSYQX "");
        sql.append("" from cczqhz left join chzq on ZQCODE = SECCODE and ZQMKET = MARKET ) "");
        //剔除交易类政府性银行发行的二级资本债（以及次级债）
        sql.append("" select SECCODE, MARKET, SECNAME, TZFL,AMOUNT, ZQSILB as SILB, ZQSTRD ,ZQENDD,ZQLVLX ,ZQFXCS ,""
                + ""ZQQLTK,ZQHSRQ,ZQFXFS,ZQSYQX ,'债券' as SECTYPE ""
                + ""from  zzq A where not exists(select 1 from zzq B where B.TZFL='C' and (B.zqsilb in ('ZBZ','CJZ') or B.ZQYXZQ = 'Y') ""
                + ""and B.ZQFXRN in ('国家开发银行','中国进出口银行','中国农业发展银行') AND A.SECCODE=B.SECCODE AND A.MARKET=B.MARKET)"");

        Object[] args = {prdCode, monDate, subjectType, prdCode, monDate, monDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getBondHoldingInfo4PreMon,1108,"    public List<Map<String, Object>> getBondHoldingInfo4PreMon(final java.util.Date zlDate,
                                                               final java.util.Date evlDate,
                                                               final java.util.Date chDate,
                                                               final String prdCode,
                                                               final String subjectType,
                                                               final boolean isFullPrice)
            throws SQLException {
        StringBuilder sql = new StringBuilder();
        //估值表债券、资产支持证券持仓
        sql.append(""with "");
        sql.append(""cczq as ( "");
        sql.append(""  select GZZHDM as ACCOUNT, GZZQDM as SECCODE, KMMKET as MARKET, GZSZZE, KMTZFL,KMZQLX "");
        sql.append(""  from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM=? and GZDATE=?  and  GZKMDM=KMCODE "");
        sql.append(""  and KMCPLX=? and KMZQLX in ('ZQ', 'ZCZQ') and "");
        if (isFullPrice) {
            sql.append("" KMTYPE in ('CB','LX','YJLX') "");
        } else {
            sql.append("" KMTYPE in ('CB') "");
        }
        sql.append("" and KMZQLS<>'FZ' and ISFINAL='Y' "");
        sql.append("" union all"");
        //当天所有的银行间交易指令，卖债金额为负
        sql.append("" select ACCCODE as ACCOUNT, zlzqdm  as SECCODE ,'Y' as MARKET, "");
        if (isFullPrice) {
            sql.append(""(case zljylx when 'S' then -ZLQJJE else ZLQJJE end) as GZSZZE,"");
        } else {
            sql.append(""(case zljylx when 'S' then -zljjje else zljjje end) as GZSZZE,"");
        }
        sql.append("" zltzfl as KMTZFL, 'X' as KMZQLX from tgcore.MON_ZL_YHJZQZL "");
        sql.append("" where zlcpdm = ? and zldate = ?  "");
        sql.append("" union all "");
        //网下申购的 ,用的是期望日期为今天的
        sql.append("" select ACCCODE as ACCOUNT, zlzqdm as SECCODE,zlmket as MARKET,zljyje as GZSZZE,zltzfl as KMTZFL,'X' as KMZQLX from tgcore""
                + "".MON_ZL_WXXZZL where ""
                + ""zlcpdm = ? and zldate = ? "");
        sql.append("" union all "");
        //T+0的，用的是期望日期为今天的
        sql.append("" select ACCCODE as ACCOUNT, zlzqdm as SECCODE,zlmket as MARKET,zljyje as GZSZZE,zltzfl as KMTZFL,'X' as KMZQLX from tgcore""
                + "".MON_ZL_HSTLZL ""
                + ""where zlcpdm ""
                + ""= ? and zlqwrq = ? "");
        sql.append("" ),"");
        //关联账户重分类表，取出调整后的投资分类,并提出除资产支持证券外的持有到期债券
        sql.append(""cczqfl as (select SECCODE,MARKET,GZSZZE, NVL(INVEST_CLASSIFY, KMTZFL) as TZFL from cczq "");
        sql.append(""  left join (select ACCOUNT_CODE, INVEST_CLASSIFY from TGCORE.MON_INVEST_RECLASSIFY where PRD_CODE=? "" +
                "" and ? between START_DATE and END_DATE "" +
                ""and STATUS='A') cfl"");
        sql.append(""  on cfl.ACCOUNT_CODE=cczq.ACCOUNT where KMZQLX in ('ZCZQ','X') or KMTZFL<>'F'),"");
        //按证券代码、市场、投资分类汇总
        sql.append(""zqflhz as (select SECCODE,MARKET,TZFL,sum(GZSZZE) as AMOUNT from cczqfl group by SECCODE,MARKET,TZFL), "");

        sql.append(""chzq as (select ZQCODE,ZQMKET,ZQNAME,ZQSILB,ZQYXZQ,ZQFXRN,ZQSYQX,ZQSTRD,ZQENDD,ZQFXFS,ZQLVLX,ZQFXCS,ZQQLTK,ZQHSRQ "")
                .append(""from TGCORE.MONZQ where ZQDATE = ? and ZQSYFW='P' and ZQSTAT='A' ),"");

        sql.append("" zzq as ( select SECCODE, MARKET, AMOUNT,TZFL,ZQNAME as SECNAME, ZQSILB, ZQFXRN,ZQSYQX,ZQYXZQ,ZQSTRD,ZQENDD,ZQFXFS,ZQLVLX,ZQFXCS,""
                + ""ZQQLTK,ZQHSRQ "");
        sql.append("" from zqflhz left join chzq on ZQCODE = SECCODE and ZQMKET = MARKET where ZQSILB='ZCZQ' or ZQSILB is NULL or TZFL<>'F')"");
        //剔除交易类政府性银行发行的二级资本债（以及次级债）
        sql.append("" select SECCODE, MARKET, SECNAME, TZFL,AMOUNT, ZQSILB as SILB, ZQSTRD ,ZQENDD,ZQFXFS,ZQLVLX,ZQFXCS,ZQQLTK,ZQHSRQ,ZQSYQX,'债券' as ""
                + ""SECTYPE ""
                + ""from  zzq A""
                + "" where not exists(select 1 from zzq B where B.TZFL='C' and (B.zqsilb in ('ZBZ','CJZ') or B.ZQYXZQ = 'Y') and B.ZQFXRN in ""
                + ""('国家开发银行',""
                + ""'中国进出口银行','中国农业发展银行') AND A.SECCODE=B.SECCODE AND A.MARKET=B.MARKET)"");

        Object[] args = {prdCode, evlDate, subjectType,
                prdCode, zlDate,
                prdCode, zlDate,
                prdCode, zlDate,
                prdCode, evlDate,
                chDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getBondHoldingInfo4PreMon4Detail,1193,"    public List<Map<String, Object>> getBondHoldingInfo4PreMon4Detail(final java.util.Date zlDate,
                                                               final java.util.Date evlDate,
                                                               final java.util.Date chDate,
                                                               final String prdCode,
                                                               final String subjectType,
                                                               final boolean isFullPrice)
            throws SQLException {
        StringBuilder sql = new StringBuilder();
        //估值表债券、资产支持证券持仓
        sql.append(""with "");
        sql.append(""cczq as ( "");
        sql.append(""  select GZZHDM as ACCOUNT, GZZQDM as SECCODE, KMMKET as MARKET, GZSZZE, KMTZFL,'T-1' AS SQDATAFROM,KMZQLX "");
        sql.append(""  from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM=? and GZDATE=?  and  GZKMDM=KMCODE "");
        sql.append(""  and KMCPLX=? and KMZQLX in ('ZQ', 'ZCZQ') and "");
        if (isFullPrice){
            sql.append("" KMTYPE in ('CB','LX','YJLX') "");
        } else {
            sql.append("" KMTYPE in ('CB') "");
        }
        sql.append("" and KMZQLS<>'FZ' and ISFINAL='Y' "");
        sql.append("" union all"");
        //当天所有的银行间交易指令，卖债金额为负
        sql.append("" select ACCCODE as ACCOUNT, zlzqdm  as SECCODE ,'Y' as MARKET, "");
        if (isFullPrice){
            sql.append(""(case zljylx when 'S' then -ZLQJJE else ZLQJJE end) as GZSZZE,"");
        } else {
            sql.append(""(case zljylx when 'S' then -zljjje else zljjje end) as GZSZZE,"");
        }
        sql.append("" zltzfl as KMTZFL,'T' AS SQDATAFROM, 'X' as KMZQLX from tgcore.MON_ZL_YHJZQZL "");
        sql.append("" where zlcpdm = ? and zldate = ?  "");
        sql.append("" union all "");
        //网下申购的 ,用的是期望日期为今天的
        sql.append("" select ACCCODE as ACCOUNT, zlzqdm as SECCODE,zlmket as MARKET,zljyje as GZSZZE,zltzfl as KMTZFL,'T' AS SQDATAFROM,'X' as KMZQLX from tgcore""
                + "".MON_ZL_WXXZZL where ""
                + ""zlcpdm = ? and zldate = ? "");
        sql.append("" union all "");
        //T+0的，用的是期望日期为今天的
        sql.append("" select ACCCODE as ACCOUNT, zlzqdm as SECCODE,zlmket as MARKET,zljyje as GZSZZE,zltzfl as KMTZFL,'T' AS SQDATAFROM,'X' as KMZQLX from tgcore""
                + "".MON_ZL_HSTLZL ""
                + ""where zlcpdm ""
                + ""= ? and zlqwrq = ? "");
        sql.append("" ),"");
        //关联账户重分类表，取出调整后的投资分类,并提出除资产支持证券外的持有到期债券
        sql.append(""cczqfl as (select SECCODE,MARKET,GZSZZE, NVL(INVEST_CLASSIFY, KMTZFL) as TZFL,SQDATAFROM from cczq "");
        sql.append(""  left join (select ACCOUNT_CODE, INVEST_CLASSIFY from TGCORE.MON_INVEST_RECLASSIFY where PRD_CODE=? "" +
                "" and ? between START_DATE and END_DATE "" +
                ""and STATUS='A') cfl"");
        sql.append(""  on cfl.ACCOUNT_CODE=cczq.ACCOUNT where KMZQLX in ('ZCZQ','X') or KMTZFL<>'F'),"");
        //按证券代码、市场、投资分类汇总
        sql.append(""zqflhz as (select SECCODE,MARKET,TZFL,SQDATAFROM,GZSZZE as AMOUNT from cczqfl), "");

        sql.append(""chzq as (select ZQCODE,ZQMKET,ZQNAME,ZQSILB,ZQYXZQ,ZQFXRN,ZQSYQX,ZQSTRD,ZQENDD,ZQFXFS,ZQLVLX,ZQFXCS,ZQQLTK,ZQHSRQ "")
                .append(""from TGCORE.MONZQ where ZQDATE = ? and ZQSYFW='P' and ZQSTAT='A' ),"");

        sql.append("" zzq as ( select SECCODE, MARKET, AMOUNT,TZFL,SQDATAFROM,ZQNAME as SECNAME, ZQSILB, ZQFXRN,ZQSYQX,ZQYXZQ,ZQSTRD,ZQENDD,ZQFXFS,ZQLVLX,"" +
                ""ZQFXCS,""
                + ""ZQQLTK,ZQHSRQ "");
        sql.append("" from zqflhz left join chzq on ZQCODE = SECCODE and ZQMKET = MARKET where ZQSILB='ZCZQ' or ZQSILB is NULL or TZFL<>'F')"");
        //剔除交易类政府性银行发行的二级资本债（以及次级债）
        sql.append("" select SECCODE, MARKET, SECNAME, TZFL,SQDATAFROM,AMOUNT, ZQSILB as SILB, ZQSTRD ,ZQENDD,ZQFXFS,ZQLVLX,ZQFXCS,ZQQLTK,ZQHSRQ,ZQSYQX,'债券' as ""
                + ""SECTYPE ""
                + ""from  zzq A""
                + "" where not exists(select 1 from zzq B where B.TZFL='C' and (B.zqsilb in ('ZBZ','CJZ') or B.ZQYXZQ = 'Y') and B.ZQFXRN in ""
                + ""('国家开发银行',""
                + ""'中国进出口银行','中国农业发展银行') AND A.SECCODE=B.SECCODE AND A.MARKET=B.MARKET)"");

        Object[] args = {prdCode, evlDate, subjectType,
                prdCode, zlDate,
                prdCode, zlDate,
                prdCode, zlDate,
                prdCode, evlDate,
                chDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getForbiddenBondHolding,1575,"    public List<SecurityBaseEntity> getForbiddenBondHolding(final String prdCode, final java.util.Date monDate,
                                                            final String subjectType, final String forbiddenType)
            throws SQLException {
        StringBuilder sql = new StringBuilder(128);
        sql.append(""with gz as (select GZZQDM, KMMKET from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM=? and GZDATE=? and KMCPLX=?  and GZKMDM=KMCODE ""
                + ""and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ') "");
        sql.append(""select distinct GZZQDM,KMMKET, nvl(ZQNAME,' ') as ZQNAME, nvl(ZQSILB,' ') as ZQSILB from gz left join ""
                + ""(select ZQCODE,ZQMKET,ZQSILB,ZQNAME from TGCORE.MONZQ ""
                + ""where ZQDATE=? and ZQSTAT='A' and ZQSYFW='P') ""
                + ""on  ZQMKET =KMMKET and ZQCODE = GZZQDM where ZQSILB in ("").append(forbiddenType).append("") or trim(ZQSILB) is null "");
        Object[] args = new Object[]{prdCode, monDate, subjectType, monDate};

        JdbcTemplate jdbcTemplate = JdbcTemplate.getJdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args, new RowMapper<SecurityBaseEntity>() {
            @Override
            public SecurityBaseEntity mapRow(final ResultSet rs, final int rowNum) throws Exception {
                SecurityBaseEntity e = new SecurityBaseEntity();
                e.setSecCode(rs.getString(""GZZQDM"").trim());
                e.setSecType(rs.getString(""ZQSILB"").trim());
                e.setSecMarket(rs.getString(""KMMKET"").trim());
                e.setSecName(rs.getString(""ZQNAME"").trim());
                return e;
            }
        });
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao.java,getHoldingBondIncludeZyq,1601,"    public List<TyglrtyzqblEntity> getHoldingBondIncludeZyq(MonObject monObject, java.util.Date monDate, boolean isShowDetail)
            throws MonitorBussException {
        //科目产品类型
        SubjectConfig subjectConfig = SpringContextUtil.getBean(SubjectConfig.class);
        String subjectType = subjectConfig.getSubjectType(monObject.getPrdEntity(), monDate);
        StringBuilder sql = new StringBuilder(512);
        sql.append(""with zq as (select ZQCODE, ZQMKET,ZQNAME, ZQCLGM,ZQZQLB from tgcore.MONZQ where ZQDATE=? and ZQSTAT='A' and ZQSYFW='P'),"");
        //本产品持仓债券
        if (ProductTypeUtil.isBXorQD(monObject.getPrdType())) {
            sql.append(
                            ""cczq as (select SECCODE as GZZQDM, KMMKET from tgcore.EVALUATION, tgcore.MONKM where PRDCODE=? and BIZDATE=? and KMCPLX=? and "")
                    .append(""COACODE=KMCODE and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ'),"");
        } else {
            sql.append(""cczq as (select GZZQDM, KMMKET from tgcore.EVLGZ, tgcore.MONKM where GZCPDM=? and GZDATE=? and KMCPLX=? and "")
                    .append(""GZKMDM=KMCODE and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ'),"");
        }


        sql.append(""cczqgm as (select GZZQDM, KMMKET, ZQNAME, ZQCLGM,ZQZQLB from cczq left join zq "")
                .append(""on ZQMKET =KMMKET and ZQCODE = GZZQDM where ZQZQLB not in ('GZ','YP','ZCJR','DFZ','KZZ','JHGS') or ZQZQLB is null),"");
        //本产品持仓质押债券
        sql.append(""zyq as (select ZYZYDM as GZZQDM,ZYMKET as KMMKET from tgcore.JYSQTQS, TGCORE.JYSNHGZY where ZYCPDM=QSCPDM and "")
                .append(""ZYDATE=QSQTRQ and ZYMKET=QSMKET and QSCJBH=ZYCJBH and ZYCRTD<? and ZYSTAT='A' "")
                .append(""and QSCPDM=? and QSMMBZ='S' AND qsstat ='A' and qsywbz = 'ZQLQ'  AND qsqtrq <= ?  AND qsqtrq + TO_NUMBER(qszqdm) > ? "")
                .append(""group by ZYZYDM, ZYMKET having sum(ZYCJSL) > 0),"");
        sql.append(""zyqgm as (select GZZQDM, KMMKET, ZQNAME, ZQCLGM,ZQZQLB from zyq, zq where ZQMKET =KMMKET and ZQCODE = GZZQDM "")
                .append(""and ZQZQLB not in ('GZ','YP','ZCJR','DFZ','KZZ','JHGS')),"");
        //本产品持仓的债券和质押券
        sql.append(""cpcc as (select GZZQDM, KMMKET, ZQNAME, ZQCLGM,ZQZQLB from cczqgm "")
                .append(""union "")
                .append(""select GZZQDM, KMMKET, ZQNAME, ZQCLGM,ZQZQLB from zyqgm),"");
        //本产品的管理人下的所有产品
        sql.append(""glrcp as (select CPCODE,CPCPLX from tgcore.MONPR, (select CPMNAM as MANAGER from tgcore.MONPR where CPCODE=?) "")
                .append(""where upper(REGEXP_REPLACE(trim(CPMNAM), '[()（）]', '')) = upper(REGEXP_REPLACE(trim(MANAGER), '[()（）]', ''))),"");
        sql.append(""glrcpkm as( select CPCODE,CPCPLX,SUBJECT_TYPE from glrcp join (select PRD_TYPE,SUBJECT_TYPE,"")
                .append(""ROW_NUMBER() over(partition by PRD_TYPE order by SEQN desc) as "")
                .append(""rn from TGCORE.MON_PROD_SUBJECT where ? between START_DATE and END_DATE) a on CPCPLX=PRD_TYPE and rn=1 ), "");
        //管理人持仓本产品持仓的债券
        sql.append(""glrcczq as (select CPCODE, GZZHDM, GZZQDM, KMMKET, GZGZSL from tgcore.EVLGZ, tgcore.MONKM, glrcpkm "")
                .append(""where GZCPDM=CPCODE and KMCPLX=SUBJECT_TYPE and "")
                .append(""GZDATE=? and GZKMDM=KMCODE and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ' "");
        sql.append("" union all "");
        sql.append(""select CPCODE, ACCCODE as GZZHDM,SECCODE as GZZQDM, KMMKET, EVLQTY as GZGZSL from TGCORE.EVALUATION, tgcore.MONKM, glrcpkm "")
                .append(""where PRDCODE=CPCODE and BIZDATE=? and COACODE=KMCODE and KMCPLX=SUBJECT_TYPE "")
                .append(""and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ' and KMKMBZ='CNY' and KMBZXX<>'OVERSEA'"");
        sql.append("" union all "");
        sql.append("" select CPCODE, '质押券' as GZZHDM,ZYZYDM as GZZQDM,ZYMKET as KMMKET, sum(ZYCJSL) as GZGZSL "")
                .append(""from tgcore.JYSQTQS, TGCORE.JYSNHGZY, glrcpkm "")
                .append(""where ZYCPDM=QSCPDM and ZYDATE=QSQTRQ and ZYMKET=QSMKET "")
                .append(""and QSCJBH=ZYCJBH and QSCPDM=CPCODE and QSMMBZ='S' AND qsstat ='A' and qsywbz = 'ZQLQ'  AND qsqtrq <= ?  AND "")
                .append("" qsqtrq + TO_NUMBER(qszqdm) > ? and ZYCRTD<? and ZYSTAT='A' group by CPCODE, ZYZYDM,ZYMKET having sum(ZYCJSL) > 0)"");

        if (isShowDetail) {
            sql.append("" select glrcczq.CPCODE, GZZHDM, glrcczq.GZZQDM, glrcczq.KMMKET, GZGZSL, ZQNAME, ZQCLGM,ZQZQLB from glrcczq, cpcc where "")
                    .append(""glrcczq.GZZQDM=cpcc.GZZQDM "")
                    .append(""and glrcczq.KMMKET=cpcc.KMMKET order by glrcczq.CPCODE, GZZHDM, glrcczq.GZZQDM"");
        } else {
            sql.append("" select glrcczq.GZZQDM, glrcczq.KMMKET, sum(GZGZSL) as GZGZSL, ZQNAME, ZQCLGM,ZQZQLB from glrcczq, cpcc "")
                    .append(""where glrcczq.GZZQDM=cpcc.GZZQDM "")
                    .append(""and glrcczq.KMMKET=cpcc.KMMKET group by glrcczq.GZZQDM, glrcczq.KMMKET, ZQNAME, ZQCLGM,ZQZQLB"");
        }


        Object[] args = new Object[]{monDate,
                monObject.getValue(), monDate, subjectType,
                monDate, monObject.getValue(), monDate, monDate,
                monObject.getValue(), monDate,
                monDate, monDate, monDate, monDate, monDate};

        JdbcTemplate jdbcTemplate = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbcTemplate.queryForList(sql.toString(), args, new RowMapper<TyglrtyzqblEntity>() {
                @Override
                public TyglrtyzqblEntity mapRow(final ResultSet rs, final int rowNum) throws Exception {
                    TyglrtyzqblEntity entity = new TyglrtyzqblEntity();
                    entity.setSecName(rs.getString(""ZQNAME""));
                    entity.setSecCode(rs.getString(""GZZQDM"").trim());
                    entity.setSecMarket(rs.getString(""KMMKET"").trim());
                    entity.setGzgzsl(rs.getBigDecimal(""GZGZSL""));
                    entity.setScale(rs.getBigDecimal(""ZQCLGM""));
                    entity.setBondType(rs.getString(""ZQZQLB""));
                    if (isShowDetail) {
                        entity.setAccount(rs.getString(""GZZHDM""));
                        entity.setPrdCode(rs.getString(""CPCODE""));
                    }
                    return entity;
                }
            });
        } catch (Exception e) {
            throw new MonitorBussException(""获取管理人持仓债券数据失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao1.java,getBondValue4Held2MaturityI9,29,"    public List<BondInfo> getBondValue4Held2MaturityI9(String prdCode, Date monDate, String subjectType,
                                                       boolean isFullPrice) throws MonitorBussException, MonitorSystException {
        StringBuilder sb = new StringBuilder();
        /**
         * 获取业务日该产品的估值信息
         */
        sb.append(""with cczq as ( "");
        sb.append(""  select GZZHDM ACCOUNT, GZZQDM as SECCODE, KMMKET as MARKET, GZSZZE, KMTZFL,KMZQLX "");
        sb.append(""  from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM=? and GZDATE=?  and  GZKMDM=KMCODE "");
        sb.append(""  and KMCPLX=? and KMZQLX = 'ZQ' and "");
        if (isFullPrice){
            sb.append("" KMTYPE in ('CB','LX','YJLX') "");
        } else {
            sb.append("" KMTYPE in ('CB') "");
        }
        sb.append("" and KMZQLS<>'FZ' and ISFINAL='Y' ),"");
        sb.append(""cczqfl as (select SECCODE,MARKET,GZSZZE, NVL(INVEST_CLASSIFY, KMTZFL) as TZFL,KMZQLX from cczq "");
        sb.append(""  left join (select ACCOUNT_CODE, INVEST_CLASSIFY from TGCORE.MON_INVEST_RECLASSIFY where PRD_CODE=? "" +
                "" and ? between START_DATE and END_DATE "" +
                ""and STATUS='A') cfl on cfl.ACCOUNT_CODE=cczq.ACCOUNT ),"");
        sb.append("" cczqhz as (select SECCODE,MARKET,TZFL,sum(GZSZZE) AMOUNT from cczqfl where TZFL in ('F','C') ""
                + ""group by SECCODE,MARKET,TZFL), "");
        /*
         * 获取业务日该产品的债券信息
         */
        sb.append(BOND_INFO_SQL);
        /**
         * 得到其持仓金额（市值总额）和剩余期限
         */
        sb.append(""select AMOUNT,SYQX,SECCODE,MARKET,ZQCODE,TZFL, zqsilb, ZQNAME from ("");
        sb.append(""select AMOUNT,"")
                .append(this.getRemainderDaysSql4I9(monDate))
                .append("" as SYQX,SECCODE,MARKET,NVL(ZQCODE,' ') ZQCODE,TZFL,NVL(ZQSILB,' ') as zqsilb,ZQNAME from cczqhz left ""
                        + ""join "");
        sb.append(""ZQ on MARKET=ZQMKET and SECCODE=ZQCODE and ZQDATE=? and ZQSTAT='A' "");
        sb.append(""where TZFL ='F' or ( TZFL ='C' and (zqsilb in ('CJZ','ZBZ') or zqyxzq='Y') and ZQFXRN in ""
                + ""('国家开发银行','中国进出口银行','中国农业发展银行')  ))"");

        JdbcTemplate jdbcTemplate = JdbcTemplate.getJdbcTemplate();
        Object[] args = {prdCode, monDate, subjectType, prdCode, monDate, monDate, getFuzzyPrdCode(prdCode), monDate, monDate};
        try {
            return jdbcTemplate.queryForList(sb.toString(), args,
                    new RowMapper<BondInfo>() {
                        @Override
                        public BondInfo mapRow(ResultSet rs, int count)
                                throws Exception {
                            BondInfo bondInfo = new BondInfo();
                            // 为例方便处理这里把持仓金额放到发行价格里去 ,后面要用的时候注意
                            bondInfo.setZqfxjg(rs.getBigDecimal(""AMOUNT""));
                            // 为例方便处理这里把剩余期限放到存量规模里去 ,后面要用的时候注意
                            bondInfo.setZqclgm(rs.getBigDecimal(""SYQX""));
                            bondInfo.setZqcode(rs.getString(""SECCODE""));
                            bondInfo.setZqmket(rs.getString(""MARKET""));
                            bondInfo.setZqfxjc(rs.getString(""ZQNAME""));
                            // 债券名称存放用于判断债券数据是否存在的债券代码
                            bondInfo.setZqname(rs.getString(""ZQCODE""));
                            bondInfo.setZqfxzq(rs.getString(""TZFL""));
                            bondInfo.setZqsilb(rs.getString(""zqsilb""));
                            return bondInfo;
                        }
                    });
        } catch (Exception e) {
            throw new MonitorSystException(e.toString(), e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao1.java,getcczq4CydqI9,157,"    public List<BondInfo> getcczq4CydqI9(String prdCode, Date chDate, Date qxDate, String subjectType,
                                         boolean isFullPrice) throws MonitorBussException, MonitorSystException {
        StringBuilder sb = new StringBuilder();
        // 取上日持仓的债券
        // 持有到期1111（非资产支持证券）
        sb.append(""with "");
        sb.append(""cczq as ( "");
        sb.append(""  select GZZHDM as ACCOUNT, GZZQDM as SECCODE, KMMKET as MARKET, GZSZZE, KMTZFL "");
        sb.append(""  from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM=? and GZDATE=?  and  GZKMDM=KMCODE "");
        sb.append(""  and KMCPLX=? and KMZQLX = 'ZQ' and "");
        if (isFullPrice){
            sb.append("" KMTYPE in ('CB','LX','YJLX') "");
        } else {
            sb.append("" KMTYPE in ('CB') "");
        }
        sb.append("" and KMZQLS<>'FZ' and ISFINAL='Y' "");
        sb.append("" union all"");
        //当天所有的银行间交易指令，卖债金额为负
        sb.append("" select ACCCODE as ACCOUNT, zlzqdm  as SECCODE ,'Y' as MARKET, "");
        if (isFullPrice){
            sb.append(""(case zljylx when 'S' then -ZLQJJE else ZLQJJE end) as GZSZZE,"");
        } else {
            sb.append(""(case zljylx when 'S' then -zljjje else zljjje end) as GZSZZE,"");
        }
        sb.append("" zltzfl as KMTZFL from tgcore.MON_ZL_YHJZQZL "");
        sb.append("" where zlcpdm = ? and zldate = ?  "");
        sb.append("" union all "");
        //网下申购的 ,用的是期望日期为今天的
        sb.append("" select ACCCODE as ACCOUNT, zlzqdm as SECCODE,zlmket as MARKET,zljyje as GZSZZE,zltzfl as KMTZFL "" +
                ""from tgcore.MON_ZL_WXXZZL where zlcpdm = ? and zldate = ? "");
        sb.append("" union all "");
        //T+0的，用的是期望日期为今天的
        sb.append("" select ACCCODE as ACCOUNT, zlzqdm as SECCODE,zlmket as MARKET,zljyje as GZSZZE,zltzfl as KMTZFL "" +
                ""from tgcore.MON_ZL_HSTLZL where zlcpdm = ? and zlqwrq = ? "");
        sb.append("" ),"");
        //关联账户重分类表，取出调整后的投资分类,并提出除资产支持证券外的持有到期债券
        sb.append(""cczqfl as (select SECCODE,MARKET,GZSZZE, NVL(INVEST_CLASSIFY, KMTZFL) as TZFL from cczq "");
        sb.append(""  left join (select ACCOUNT_CODE, INVEST_CLASSIFY from TGCORE.MON_INVEST_RECLASSIFY where PRD_CODE=?"" +
                "" and ? between START_DATE and END_DATE "" +
                "" and STATUS='A') cfl"");
        sb.append(""  on cfl.ACCOUNT_CODE=cczq.ACCOUNT where KMTZFL in ('F','C')),"");
        //按证券代码、市场、投资分类汇总
        sb.append(""zqflhz as (select SECCODE,MARKET,TZFL,sum(GZSZZE) as AMOUNT from cczqfl group by SECCODE,MARKET,TZFL), "");
        /**
         * 取该产品专用债券，若不存在专用债券则去取公用债券
         */
        sb.append(BOND_INFO_SQL);
        sb.append("" select SECCODE,MARKET,AMOUNT,zqstrd,zqendd,zqlvlx,zqfxcs,zqqltk,zqhsrq,zqsilb,ZQSHXQ,ZQSYFW,ZQYXZQ ""
                + ""from zqflhz left join ZQ on zqdate = ? and zqcode = SECCODE and zqmket = MARKET and zqstat='A' "" +
                "" where tzfl ='F' or ( tzfl ='C' and (zqsilb in ('CJZ','ZBZ') or zqyxzq='Y') and ZQFXRN in ('国家开发银行',""
                + ""'中国进出口银行','中国农业发展银行'))"");

        Object[] args = {prdCode, chDate, subjectType, prdCode, qxDate, prdCode, qxDate, prdCode,
                qxDate, prdCode, chDate, chDate, getFuzzyPrdCode(prdCode), chDate, chDate};
        return executeSql4Held2MaturityPreMon(sb, args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4BondDao1.java,getcczq4CydqI9ForSqDetail,214,"    public List<BondInfo> getcczq4CydqI9ForSqDetail(String prdCode, Date chDate, Date qxDate, String subjectType,
                                         boolean isFullPrice) throws MonitorBussException, MonitorSystException {
        StringBuilder sb = new StringBuilder();
        // 取上日持仓的债券
        // 持有到期1111（非资产支持证券）
        sb.append(""with "");
        sb.append(""cczq as ( "");
        sb.append(""  select GZZHDM as ACCOUNT, GZZQDM as SECCODE, KMMKET as MARKET, GZSZZE, KMTZFL,'T-1' AS SQDATAFROM "");
        sb.append(""  from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM=? and GZDATE=?  and  GZKMDM=KMCODE "");
        sb.append(""  and KMCPLX=? and KMZQLX = 'ZQ' and "");
        if (isFullPrice){
            sb.append("" KMTYPE in ('CB','LX','YJLX') "");
        } else {
            sb.append("" KMTYPE in ('CB') "");
        }
        sb.append("" and KMZQLS<>'FZ' and ISFINAL='Y' "");
        sb.append("" union all"");
        //当天所有的银行间交易指令，卖债金额为负
        sb.append("" select ACCCODE as ACCOUNT, zlzqdm  as SECCODE ,'Y' as MARKET, "");
        if (isFullPrice){
            sb.append(""(case zljylx when 'S' then -ZLQJJE else ZLQJJE end) as GZSZZE,"");
        } else {
            sb.append(""(case zljylx when 'S' then -zljjje else zljjje end) as GZSZZE,"");
        }
        sb.append("" zltzfl as KMTZFL,'T' AS SQDATAFROM from tgcore.MON_ZL_YHJZQZL "");
        sb.append("" where zlcpdm = ? and zldate = ?  "");
        sb.append("" union all "");
        //网下申购的 ,用的是期望日期为今天的
        sb.append("" select ACCCODE as ACCOUNT, zlzqdm as SECCODE,zlmket as MARKET,zljyje as GZSZZE,zltzfl as KMTZFL,'T' AS SQDATAFROM "" +
                ""from tgcore.MON_ZL_WXXZZL where zlcpdm = ? and zldate = ? "");
        sb.append("" union all "");
        //T+0的，用的是期望日期为今天的
        sb.append("" select ACCCODE as ACCOUNT, zlzqdm as SECCODE,zlmket as MARKET,zljyje as GZSZZE,zltzfl as KMTZFL,'T' AS SQDATAFROM "" +
                ""from tgcore.MON_ZL_HSTLZL where zlcpdm = ? and zlqwrq = ? "");
        sb.append("" ),"");
        //关联账户重分类表，取出调整后的投资分类,并提出除资产支持证券外的持有到期债券
        sb.append(""cczqfl as (select SECCODE,MARKET,GZSZZE, NVL(INVEST_CLASSIFY, KMTZFL) as TZFL,SQDATAFROM from cczq "");
        sb.append(""  left join (select ACCOUNT_CODE, INVEST_CLASSIFY from TGCORE.MON_INVEST_RECLASSIFY where PRD_CODE=?"" +
                "" and ? between START_DATE and END_DATE "" +
                "" and STATUS='A') cfl"");
        sb.append(""  on cfl.ACCOUNT_CODE=cczq.ACCOUNT where KMTZFL in ('F','C')),"");
        //按证券代码、市场、投资分类汇总
        sb.append(""zqflhz as (select SECCODE,MARKET,TZFL,SQDATAFROM,GZSZZE as AMOUNT from cczqfl), "");
        /**
         * 取该产品专用债券，若不存在专用债券则去取公用债券
         */
        sb.append(BOND_INFO_SQL);
        sb.append("" select SECCODE,MARKET,AMOUNT,zqstrd,zqendd,zqlvlx,zqfxcs,zqqltk,zqhsrq,zqsilb,ZQSHXQ,ZQSYFW,ZQYXZQ ""
                + "",ZQNAME,TZFL,SQDATAFROM ""
                + ""from zqflhz left join ZQ on zqdate = ? and zqcode = SECCODE and zqmket = MARKET and zqstat='A' "" +
                "" where tzfl ='F' or ( tzfl ='C' and (zqsilb in ('CJZ','ZBZ') or zqyxzq='Y') and ZQFXRN in ('国家开发银行',""
                + ""'中国进出口银行','中国农业发展银行'))"");

        Object[] args = {prdCode, chDate, subjectType, prdCode, qxDate, prdCode, qxDate, prdCode,
                qxDate, prdCode, chDate, chDate, getFuzzyPrdCode(prdCode), chDate, chDate};
        return executeSql4Held2MaturityPreMonForDetail(sb, args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4DepositDao.java,getCurrentDepositAndPosition,64,"    public List<Map<String, Object>> getCurrentDepositAndPosition(final String prdCode,
                                                   final Date evlDate,
                                                   final String subjectType) throws SQLException {
        String sql = ""select GZSZZE as AMOUNT, (case KMZQLX when 'BFJ' then '备付金' else '活期存款' end) as SECTYPE, GZZHDM as SECCODE, 0 as SYQX ""
                + ""from tgcore.EVLGZ, tgcore.MONKM where GZCPDM=? and GZDATE=?  and  GZZHDM=KMCODE and KMCPLX=? and ""
                + ""((KMZQLX='CK' and KMZQLS='HQ' and ISFINAL='Y') or (KMZQLX='BFJ' and KMLEVL='1'))"";
        Object[] args = {prdCode, evlDate, subjectType};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql, args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4FundDao.java,IncreaseOrReduce,39,"    public List<Map<String, Object>> IncreaseOrReduce(String cpdm, Date date, boolean isHb, boolean isI9, String kmcplx) throws Exception {
        StringBuilder sbSql = new StringBuilder(1028);
        Date jyrdq = calendarDao.addJysDate(date, 10).getDate();
        Date yhjdq = calendarDao.addYhjDate(date, 10).getDate();
        Date lastWorkDate = CalendarUtil.lastWorkDay(date.toString());
        //T_1为上一日数据，T为业务日期数据
        //违约债券  p4上一个交易日 估值表数据 ，gz4业务日期估值表数据
        sbSql.append("" with "");
        sbSql.append(JJTZSXZC.getGpSql(""_T_1""));
        sbSql.append(JJTZSXZC.getGpSql(""_T0""));
        sbSql.append("" gp_T_1 as ("");
        sbSql.append("" select ZHDM,ZQDM,SL from fgkgp_T_1 "");
        sbSql.append("" union all select ZHDM,ZQDM,SL from tpgp_T_1 "");
        sbSql.append("" ), "");
        sbSql.append("" gp_T0 as ("");
        sbSql.append("" select ZHDM,ZQDM,SL from fgkgp_T0 "");
        sbSql.append("" union all select ZHDM,ZQDM,SL from tpgp_T0 "");
        sbSql.append("" ), "");
        sbSql.append("" gpsg_T0 as ("");
        sbSql.append("" select ZQDM,MKET,sum(SL) as SL from ( "");
        sbSql.append("" select SXZQDM as ZQDM,SXJESL as SL,SXMKET as MKET from ltsxgp_T0) group by MKET,ZQDM "");
        sbSql.append("" ), "");
        sbSql.append("" gpsg_T_1 as ( "");
        sbSql.append(
                "" select SXZQDM as ZQDM,SXMKET as MKET,sum(SXJESL) as SL from tgcore.MONLTSX where SXCPDM=? and SXZQLB='GP' and SXSTRD<=? and SXENDD>=? and SXSTAT= 'A' "");
        sbSql.append("" and exists (select 1 from gpsg_T0 where ZQDM=SXZQDM and MKET=SXMKET) group by SXZQDM,SXMKET "");
        sbSql.append("" ), "");

        sbSql.append("" pz4 as (select GZGZSL,GZZHDM,GZZQDM,GZDATE,KMMKET AS GZMKET "");
        sbSql.append("" from tgcore.evlgz,tgcore.monkm where GZDATE=? and GZCPDM=? and "");
        //sbSql.append("" GZZHDM like '1103__01_%'), "");
        sbSql.append("" (KMCODE = GZKMDM AND KMCPLX = ? AND ISFINAL = 'Y' AND KMTYPE = 'CB' AND KMZQLX = 'ZQ' AND KMZQLS not in ('FZ','WY')) ), "");
        sbSql.append("" pzwy4 as (select GZGZSL,GZZHDM,GZZQDM,GZDATE,KMMKET AS GZMKET "");
        sbSql.append("" from tgcore.evlgz,tgcore.monkm where gzcpdm=? and gzdate=? and "");
        sbSql.append("" KMCODE = GZKMDM AND KMCPLX = ? AND ISFINAL = 'Y' AND KMTYPE = 'CB' AND KMZQLX = 'ZQ' AND KMZQLS = 'WY' ), "");

        sbSql.append("" gz4 as (select GZGZSL,GZZHDM,GZZQDM,GZDATE,KMMKET AS GZMKET "");
        sbSql.append("" from tgcore.evlgz,tgcore.monkm where GZDATE=? and GZCPDM=? and "");
        //sbSql.append("" GZZHDM like '1103__01_%') "");
        sbSql.append("" (KMCODE = GZKMDM AND KMCPLX = ? AND ISFINAL = 'Y' AND KMTYPE = 'CB' AND KMZQLX = 'ZQ' AND KMZQLS not in ('FZ','WY')) ), "");
        sbSql.append("" gzwy4 as (select GZGZSL,GZZHDM,GZZQDM,GZDATE,KMMKET AS GZMKET "");
        sbSql.append("" from tgcore.evlgz,tgcore.monkm where gzcpdm=? and gzdate=? and "");
        sbSql.append("" KMCODE = GZKMDM AND KMCPLX = ? AND ISFINAL = 'Y' AND KMTYPE = 'CB' AND KMZQLX = 'ZQ' AND KMZQLS = 'WY' ) "");

        sbSql.append("" select NVL(pz5.GZGZSL,0) T_1,'WYZQ' LB,NVL(pz5.GZZQDM,gz5.GZZQDM) GZZQDM,NVL(gz5.GZGZSL,0) T  FROM "");
        sbSql.append("" (select GZZHDM,GZGZSL,GZZQDM from pz4 join tgcore.monwy on GZDATE=WYDATE and GZMKET=WYMKET and GZZQDM=WYZQDM "" +
                "" union all select GZZHDM,GZGZSL,GZZQDM from pzwy4 )pz5 "");
        sbSql.append("" full join (select GZZHDM,GZGZSL,GZZQDM from gz4 join tgcore.monwy on GZDATE=WYDATE and GZMKET=WYMKET and GZZQDM=WYZQDM "" +
                "" union all select GZZHDM,GZGZSL,GZZQDM from gzwy4 )gz5 "");
        sbSql.append("" on pz5.GZZHDM=gz5.GZZHDM "");

        //手工维护股票（按照股票代码与市场比较手维）
        sbSql.append("" union all "");
        sbSql.append("" select NVL(pz1.SL,0) T_1,'GP' LB,NVL(pz1.ZQDM,gz1.ZQDM)||'(手维)' GZZQDM,NVL(gz1.SL,0) T  from "");
        sbSql.append("" (select * from gpsg_T_1) pz1 full join (select * from gpsg_T0) gz1 on pz1.ZQDM=gz1.ZQDM and pz1.MKET=gz1.MKET "");
        //停牌股票与非公开发行股票（按照账户来比较）+转融通受限科目
        sbSql.append("" union all "");
        sbSql.append("" select NVL(pz1.SL,0) T_1,'GP' LB,NVL(pz1.ZQDM,gz1.ZQDM) GZZQDM,NVL(gz1.SL,0) T  from "");
        sbSql.append("" (select * from gp_T_1) pz1 full join (select * from gp_T0) gz1 on pz1.ZHDM=gz1.ZHDM "");

        List<Map<String, Object>> mapList = new ArrayList<>();
        Object[] paras = new Object[]{
                lastWorkDate, cpdm, lastWorkDate, kmcplx, cpdm, lastWorkDate, lastWorkDate, //上一日股票
                date, cpdm, date, kmcplx, cpdm, date, date,  //今日股票
                cpdm, lastWorkDate, lastWorkDate,
                lastWorkDate, cpdm, kmcplx, cpdm, lastWorkDate, kmcplx, date, cpdm, kmcplx, cpdm, date, kmcplx    //违规债券
        };
        mapList.addAll(queryForList(sbSql.toString(), paras));

        //交易所逆回购，回购到期，买
        sbSql.setLength(0);
        sbSql.append(
                "" select CAST(0 AS decimal) T_1,'JYSQS' LB,QSGQDM GZZQDM,CAST(count(1) AS decimal) T from tgcore.jysqs where QSCRTD=? and QSDATE>? and QSDATE>? and QSCPDM=? AND QSMMBZ='B' and QSYWBZ='FBDQ' and QSSTAT='A' group by QSGQDM,QSMKET "");
        paras = new Object[]{date, date, jyrdq, cpdm};
        mapList.addAll(queryForList(sbSql.toString(), paras));

        //银行间逆回购
        sbSql.setLength(0);
        sbSql.append(
                "" select CAST(0 AS decimal) T_1,'YHJHG' LB,HGCODE GZZQDM,CAST(count(1) AS decimal) T from tgcore.yhjhg where HGDATE=? and HGENDD>? and HGENDD>? and HGCPDM=? and HGHGFX='B' and HGSTAT='A' group by HGCODE "");
        paras = new Object[]{date, date, yhjdq, cpdm};
        mapList.addAll(queryForList(sbSql.toString(), paras));

        //交易所质押式逆回购,到期未清算，卖
        sbSql.setLength(0);
        sbSql.append(
                "" select CAST(0 AS decimal) T_1,'JYSQTQS' LB,QSGQDM GZZQDM,CAST(count(1) AS decimal) T from tgcore.JYSQTQS where QSCPDM=? and qscrtd=? and QSDATE>? and qsdate>? and QSMMBZ='S' and QSYWBZ='ZQLQ' and QSSTAT='A' group by QSGQDM,QSMKET "");
        paras = new Object[]{cpdm, date, jyrdq, date};
        mapList.addAll(queryForList(sbSql.toString(), paras));

        //定期存款
        sbSql.setLength(0);
        sbSql.append(
                "" select CAST(0 AS decimal) T_1,'EVLDQ' LB,DQCJBH GZZQDM,CAST(count(1) AS decimal) T from tgcore.evldq where DQCPDM=? and DQSTRD=? and DQENDD>? and DQENDD>? and DQSTAT='A' and DQTQTJ='Y' group by DQCJBH "");
        paras = new Object[]{cpdm, date, date, yhjdq};
        mapList.addAll(queryForList(sbSql.toString(), paras));

        //转融通
        sbSql.setLength(0);
        sbSql.append("" select CAST(0 AS decimal) T_1, 'ZRTDZ' as LB, DZHYBH GZZQDM, CAST(count(1) AS decimal) T from tgcore.zrtdz A where "");
        //取期限超过10个交易所工作日
        sbSql.append(
                "" DZCPDM=? and DZCJRQ=? and STATUS='A' and 11 <= (select count(1) FROM TGCORE.PUBRL where RLDATE between A.DZCJRQ and A.DZHYDQ and RLWORK='Y') group by DZHYBH"");
        paras = new Object[]{cpdm, date};
        mapList.addAll(queryForList(sbSql.toString(), paras));

        if (!isHb) {
            //资产支持证券
            sbSql.setLength(0);
            sbSql.append("" select NVL(pz2.GZGZSL,0) T_1,'ZC' LB,NVL(pz2.GZZQDM,gz2.GZZQDM) GZZQDM,NVL(gz2.GZGZSL,0) T from "");
            sbSql.append("" (SELECT GZZHDM,GZZQDM,GZGZSL FROM TGCORE.EVLGZ,TGCORE.MONKM WHERE GZDATE=? AND GZCPDM=? and "");
            //GZZHDM like '1104__01_%') pz2
            sbSql.append("" (KMCODE = GZKMDM AND  KMCPLX = ? AND ISFINAL = 'Y' AND KMTYPE = 'CB' AND KMZQLX = 'ZCZQ' AND KMZQLS <> 'FZ' ) ) pz2 "");
            sbSql.append("" full join (SELECT GZZHDM,GZZQDM,GZGZSL FROM TGCORE.EVLGZ,TGCORE.MONKM WHERE GZDATE=? AND GZCPDM=? AND "");
            //sbSql.append("" GZZHDM like '1104__01_%') gz2 "");
            sbSql.append("" (KMCODE = GZKMDM AND  KMCPLX = ? AND ISFINAL = 'Y' AND KMTYPE = 'CB' AND KMZQLX = 'ZCZQ' AND KMZQLS <> 'FZ' )) gz2 "");
            sbSql.append("" on pz2.GZZHDM=gz2.GZZHDM "");
            paras = new Object[]{lastWorkDate, cpdm, kmcplx, date, cpdm, kmcplx};
            mapList.addAll(queryForList(sbSql.toString(), paras));

        } else {
            sbSql.setLength(0);
            sbSql.append("" select NVL(pz2.GZGZSL,0) T_1,'ZC' LB,NVL(pz2.GZZQDM,gz2.GZZQDM) GZZQDM,NVL(gz2.GZGZSL,0) T from "");
            sbSql.append("" (SELECT GZZHDM,GZZQDM,GZGZSL FROM TGCORE.EVLGZ,TGCORE.MONKM WHERE GZDATE=? AND GZCPDM=? and "");
            //sbSql.append("" GZZHDM like '1104__01_%' ) pz2 "");
            sbSql.append("" (KMCODE = GZKMDM AND  KMCPLX = ? AND ISFINAL = 'Y' AND KMTYPE = 'CB' AND KMZQLX = 'ZCZQ' AND KMZQLS <> 'FZ' ) ) pz2 "");
            sbSql.append("" full join (SELECT GZZHDM,GZZQDM,GZGZSL FROM TGCORE.EVLGZ,TGCORE.MONKM WHERE GZDATE=? AND GZCPDM=? AND "");
            //sbSql.append("" GZZHDM like '1104__01_%') gz2 "");
            sbSql.append("" (KMCODE = GZKMDM AND  KMCPLX = ? AND ISFINAL = 'Y' AND KMTYPE = 'CB' AND KMZQLX = 'ZCZQ' AND KMZQLS <> 'FZ' )) gz2  "");
            sbSql.append("" on pz2.GZZHDM=gz2.GZZHDM "");
            paras = new Object[]{lastWorkDate, cpdm, kmcplx, date, cpdm, kmcplx};
            mapList.addAll(queryForList(sbSql.toString(), paras));
        }
        return mapList;
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4FundDao.java,getHoldFundCode,680,"    public List<String> getHoldFundCode(Date monDate, String prdCode, String subjectType) throws MonitorBussException, MonitorSystException {
        String sql = """";
        sql = ""select distinct GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM= ? and GZDATE= ?  "" +
                ""and GZKMDM=KMCODE  and KMCPLX= ?  and ISFINAL='Y' and KMZQLX in('JJ') AND KMTYPE ='CB' and KMZQLS <> 'FZ'"";
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        try {
            return jdbcTemplate.queryForList(sql, new Object[]{prdCode, monDate, subjectType}, new RowMapper<String>() {
                @Override
                public String mapRow(ResultSet rs, int count) throws Exception {
                    return rs.getString(""GZZQDM"");
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓基金代码失败"", e);
        }

    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4FundDao.java,getFundHoldingInfo,708,"    public List<Map<String, Object>> getFundHoldingInfo(final Date evlDate, final Date chDate,
                                                        final String prdCode, final String subjectType)
            throws SQLException {
        StringBuilder sql = new StringBuilder(256);
        sql.append(""with "");
        sql.append(""holdjj as (select GZZQDM as SECCODE, KMMKET as MARKET, sum(GZSZZE) as AMOUNT "");
        sql.append(""   from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and GZDATE=? and GZKMDM=KMCODE "");
        sql.append(""   and KMCPLX=? and KMZQLX='JJ' and KMTYPE='CB' and ISFINAL='Y' group by GZZQDM, KMMKET), "");

        sql.append(""fund as (select JJCODE,JJMKET,JJNAME,JJDATE,JJSILB from TGCORE.MONJJ where JJDATE=?) "");

        sql.append(""select SECCODE,MARKET,JJNAME as SECNAME,AMOUNT,JJSILB as SILB, 1 as SYQX, '货币基金' as SECTYPE ""
                        + ""from holdjj left join fund on JJCODE=SECCODE and JJMKET=MARKET "")
                .append(""where JJSILB in ('HB') or JJSILB is NULL"");
        Object[] args = {prdCode, evlDate, subjectType, chDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4FundDao.java,getFundHoldingInfo4PreMon,738,"    public List<Map<String, Object>> getFundHoldingInfo4PreMon(final java.util.Date monDate, final java.util.Date evlDate,
                                                               final java.util.Date chDate, final String prdCode,
                                                               final String subjectType)
            throws SQLException {
        CalendarUtil calendarUtil = SpringContextUtil.getBean(CalendarUtil.class);
        StringBuilder sql = new StringBuilder(256);
        sql.append(""with "");
        sql.append(""holdjj as (select GZZQDM as SECCODE, KMMKET as MARKET, GZSZZE "");
        sql.append(""   from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and GZDATE=? and GZKMDM=KMCODE "");
        sql.append(""   and KMCPLX=? and KMZQLX='JJ' and KMTYPE='CB' and ISFINAL='Y' "");
        sql.append("" union all "");
        //这里基金取今日指令的和昨天入库的，因为申购的基金在T+1日才入到估值表
        sql.append("" select zljjdm as SECCODE, ZLMKET as MARKET, zljyje as GZSZZE from  tgcore.MON_ZL_JJSGZL where zlcpdm""
                + "" = ? and zldate between ? and ? "");
        sql.append("" ),"");

        sql.append(""holdhz as (select SECCODE,MARKET,SUM(GZSZZE) as AMOUNT from holdjj group by SECCODE,MARKET),"");

        sql.append(""fund as (select JJCODE,JJMKET,JJNAME,JJDATE,JJSILB from TGCORE.MONJJ where JJDATE=?) "");

        sql.append(""select SECCODE,MARKET,JJNAME as SECNAME,AMOUNT,JJSILB as SILB,1 as SYQX,'货币基金' as SECTYPE ""
                        + ""from holdhz left join fund on JJCODE=SECCODE and JJMKET=MARKET "")
                .append(""where JJSILB in ('HB') or JJSILB is NULL"");
        Object[] args = {prdCode, evlDate, subjectType,
                prdCode, calendarUtil.obtainLastWorkDay(monDate.toString()), monDate,
                chDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4FundDao.java,getFundHoldingInfo4PreMon4Detail,779,"    public List<Map<String, Object>> getFundHoldingInfo4PreMon4Detail(final java.util.Date monDate, final java.util.Date evlDate,
                                                               final java.util.Date chDate, final String prdCode,
                                                               final String subjectType)
            throws SQLException {
        CalendarUtil calendarUtil = SpringContextUtil.getBean(CalendarUtil.class);
        StringBuilder sql = new StringBuilder(256);
        sql.append(""with "");
        sql.append(""holdjj as (select GZZQDM as SECCODE, KMMKET as MARKET,'T-1' AS SQDATAFROM, GZSZZE "");
        sql.append(""   from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and GZDATE=? and GZKMDM=KMCODE "");
        sql.append(""   and KMCPLX=? and KMZQLX='JJ' and KMTYPE='CB' and ISFINAL='Y' "");
        sql.append("" union all "");
        //这里基金取今日指令的和昨天入库的，因为申购的基金在T+1日才入到估值表
        sql.append("" select zljjdm as SECCODE, ZLMKET as MARKET,'T' AS SQDATAFROM, zljyje as GZSZZE from  tgcore.MON_ZL_JJSGZL where zlcpdm""
                + "" = ? and zldate between ? and ? "");
        sql.append("" ),"");

        sql.append(""holdhz as (select SECCODE,MARKET,SQDATAFROM,GZSZZE as AMOUNT from holdjj),"");

        sql.append(""fund as (select JJCODE,JJMKET,JJNAME,JJDATE,JJSILB from TGCORE.MONJJ where JJDATE=?) "");

        sql.append(""select SECCODE,MARKET,SQDATAFROM,JJNAME as SECNAME,AMOUNT,JJSILB as SILB,1 as SYQX,'货币基金' as SECTYPE ""
                        + ""from holdhz left join fund on JJCODE=SECCODE and JJMKET=MARKET "")
                .append(""where JJSILB in ('HB') or JJSILB is NULL"");
        Object[] args = {prdCode, evlDate, subjectType,
                prdCode, calendarUtil.obtainLastWorkDay(monDate.toString()), monDate,
                chDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4FundDao.java,getFundHolding,1083,"    public List<Map<String, Object>> getFundHolding(String prdCode, java.util.Date evlDate, String subjectType)
            throws SQLException {
        String sql = ""with FUND as (select GZZQDM, KMMKET, GZSZZE, case KMTYPE when 'JZZB01' then 0 when 'JZZB02' then 0 when 'JZZB03' then 0 ""
                + "" else GZCBZE END GZCBZE  from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and GZDATE=? and GZKMDM=KMCODE and KMCPLX=? and KMTYPE in ""
                + "" ('CB','YZ','JZZB01','JZZB02','JZZB03') and KMZQLX='JJ' and KMZQLS<>'FZ' and ISFINAL = 'Y'), ""
                + "" JJ AS (SELECT JJCODE, JJNAME, JJTYPE, JJDATE, JJMKET FROM TGCORE.MONJJ WHERE JJDATE= ? ) ""
                + "" select GZZQDM, KMMKET, GZSZZE, GZCBZE, JJCODE SECCODE, JJNAME SECNAME, JJTYPE SECTYPE from FUND inner join JJ ON ""
                + "" KMMKET=JJMKET and JJCODE=GZZQDM"";
        Object[] args = {prdCode, evlDate, subjectType, evlDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4FundDao.java,getGzQhHolding,1099,"    public List<Map<String, Object>> getGzQhHolding(String prdCode, java.util.Date evlDate, String subjectType) throws SQLException {
        String sql = ""select GZZQDM, KMMKET, GZSZZE, GZCBZE, GZZQDM SECCODE, ' ' SECNAME, 'GZQH' SECTYPE from TGCORE.EVLGZ,TGCORE.MONKM where ""
                + ""GZCPDM=? and GZDATE=? and GZKMDM = KMCODE and KMCPLX = ? and KMZQLX = 'GZQH' and KMZQLS<>'FZ' and ISFINAL = 'Y'"";
        Object[] args = {prdCode, evlDate, subjectType};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4JXTDao.java,getEvlHolding,204,"    public List<Map<String, Object>> getEvlHolding(final String prdcode, final DateParam dataParam, final String subjectType) throws SQLException {
        StringBuilder sql = new StringBuilder(1024);
        sql.append(""with gz as (select GZZQDM, KMMKET, (case KMZQLX when 'ZCZQ' then 'ZQ' else KMZQLX end) as zqlx, GZSZZE ""
                + ""from tgcore.EVLGZ, tgcore.MONKM where KMCPLX=? and GZDATE=? and GZCPDM=? and GZKMDM=KMCODE and  ""
                + ""((KMZQLX in ('JJ','GP') and KMTYPE='CB')""
                + "" or (KMZQLX in ('ZQ','ZCZQ') and KMTYPE in ('CB','YZ','LX'))) and ISFINAL='Y' and KMZQLS<>'FZ' ),"");
        sql.append(""ZL as (select ZLJJDM as GZZQDM,  ZLMKET as KMMKET,'JJ' as zqlx, ZLJYJE as GZSZZE from tgcore.MON_ZL_JJSGZL ""
                + ""where ZLCPDM=? and (ZLDATE = ? or ZLDATE=?) ""
                + ""union all ""
                + ""select ZLZQDM as GZZQDM, ZLMKET as KMMKET, 'GP' as zqlx, zljyje as gzszze from tgcore.MON_ZL_WXXGZL ""
                + ""where ZLCPDM=? and ZLDATE=? ""
                + ""union all ""
                + ""select ZLZQDM as GZZQDM, ZLMKET as KMMKET, 'GP' as zqlx, zljyje as gzszze from tgcore.MON_ZL_BJTLZL ""
                + ""where ZLCPDM=? and ZLDATE=? ""
                + ""union all ""
                + ""select ZLZQDM as GZZQDM, 'Y' as KMMKET, 'ZQ' as zqlx, ZLQJJE as gzszze from tgcore.MON_ZL_YHJZQZL ""
                + ""where ZLCPDM=? and ZLDATE=? ""
                + ""union all ""
                + ""select ZLZQDM as GZZQDM, ZLMKET as KMMKET, 'ZQ' as zqlx, zljyje as gzszze from tgcore.MON_ZL_WXXZZL ""
                + ""where ZLCPDM=? and ZLDATE=? ""
                + ""union all ""
                + ""select ZLZQDM as GZZQDM, ZLMKET as KMMKET, 'ZQ' as zqlx, zljyje as gzszze from tgcore.MON_ZL_HSTLZL ""
                + ""where ZLCPDM=? and ZLDATE=? ""
                + ""),"");
        sql.append(""un as (select gzzqdm,kmmket,zqlx,gzszze from zl ""
                + ""union all select gzzqdm,kmmket,zqlx,gzszze from gz ""
                + ""union all select gzzhdm as gzzqdm, ' ' as kmmket, (case gzzhdm when '99990004' then 'JZ' else 'ZZ' end) as zqlx, gzszze ""
                + ""from tgcore.EVLGZ where GZDATE=? and GZCPDM=? and GZZHDM in ('99990001','99990004')) "");
        sql.append(""select gzzqdm,kmmket,zqlx, sum(gzszze) je from un group by gzzqdm,kmmket,zqlx"");
        Object[] args = new Object[]{subjectType, dataParam.getEvlDate(), prdcode,
                prdcode, dataParam.getMonDate(), dataParam.getLastWorkDay(),
                prdcode, dataParam.getMonDate(),
                prdcode, dataParam.getMonDate(),
                prdcode, dataParam.getMonDate(),
                prdcode, dataParam.getMonDate(),
                prdcode, dataParam.getMonDate(),
                dataParam.getEvlDate(), prdcode};
        JdbcTemplate jdbc = new JdbcTemplate();
        return jdbc.queryForList(sql.toString(), args);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4ManagerDao.java,getCcZqs,125,"    public Set<String> getCcZqs(String prdCode, Date busDate, String subjectPrdType, String prdType) throws MonitorBussException,
            MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        if (ZbConstants.CPLX_QD.equals(prdType)) {
            sbSql.append(""select KMMKET GZMKET, SECCODE as GZZQDM from TGCORE.EVALUATION,TGCORE.MONKM where PRDCODE=? and BIZDATE=? and ""
                    + ""KMCODE=COACODE "");
        } else {
            sbSql.append(""select KMMKET GZMKET, GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and GZDATE=? and KMCODE=GZKMDM "");
        }

        sbSql.append(""and KMCPLX=? and KMZQLX in ('ZQ', 'ZCZQ', 'GP', 'QZ', 'JJ','GZQH','SPQH','ZQQH','HLQH','JSQH') "");
        sbSql.append(""and ISFINAL='Y' and KMTYPE='CB' and KMZQLS<>'FZ' "");

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            List<Map<String, Object>> securities = jdbc.queryForList(sbSql.toString(), prdCode, busDate, subjectPrdType);
            Set<String> secSet = new HashSet<>(securities.size());
            for (Map<String, Object> sec : securities) {
                secSet.add(sec.get(""GZMKET"").toString() + sec.get(""GZZQDM"").toString().trim());
            }
            return secSet;
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓证券失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4ManagerDao.java,getCKAndZQAmount4Bank,344,"    public List<Map<String, Object>> getCKAndZQAmount4Bank(String prdCode, java.sql.Date monDate, String subjectType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sSql = new StringBuilder();

        sSql.append(""WITH CPMN AS (SELECT DISTINCT CPMNAM FROM TGCORE.MONPR WHERE CPCODE = ?),"");
        sSql.append(
                ""CP AS (SELECT CPCODE,PR.CPMNAM AS CPMNAM FROM TGCORE.MONPR PR INNER JOIN CPMN ON PR.CPMNAM = CPMN.CPMNAM WHERE CPCPLX = 'YC' AND CPTTYPE = 'XJGL'),"");
        sSql.append(""DA AS (SELECT CPCODE,CPMNAM,GZZHDM, GZZQDM, GZCBZE, GZSZZE,KMZQLX,KMMKET, KMZQLS,SECTYPE3 "" +
                ""FROM TGCORE.EVLGZ gz, TGCORE.MONKM km ,CP "" +
                ""WHERE gz.GZDATE = ? AND gz.GZKMDM = km.KMCODE AND cp.CPCODE = gz.GZCPDM AND km.ISFINAL = 'Y' AND km.KMZQLX IN ('ZQ','CK') AND km.KMCPLX = ?  AND km.KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') AND km.KMZQLS<>'FZ'),"");
        sSql.append(""YHQC as (select distinct ZGJGJC,ZGJGQC,ZGJJZC from TGCORE.MONZG where ZGDATE=?),"");
        sSql.append(
                ""YHZQ AS (SELECT ZQ.ZQFXRN AS YH, ZGJJZC, GZSZZE  FROM DA,TGCORE.MONZQ ZQ ,YHQC ZG WHERE ZQ.ZQCODE = DA.GZZQDM AND ZQ.ZQMKET = DA.KMMKET AND ZQ.ZQFXRN = ZG.ZGJGQC AND DA.KMZQLX = 'ZQ' AND ZQ.ZQDATE = ?  ""
                        +
                        ""UNION ALL "" +
                        ""SELECT ZG.ZGJGQC AS YH, ZGJJZC, GZSZZE FROM DA, TGCORE.EVLDQ DQ , YHQC ZG WHERE DA.CPCODE = DQ.DQCPDM AND DA.GZZHDM = DQ.DQDQZH AND DQ.DQCKYH = ZG.ZGJGJC AND KMZQLS != 'HQ' AND  DA.KMZQLX = 'CK' AND DQSTAT='A'  AND DQSTRD<=? AND DQENDD>?  ""
                        +
                        ""union ALL select ZGJGQC as YH, ZGJJZC, GZSZZE from DA, YHQC WHERE KMZQLS = 'HQ' AND SECTYPE3 != 'THHQ' AND ZGJGQC = ""
                        + ""'招商银行股份有限公司' UNION ALL SELECT ZG.ZGJGQC AS YH, ZGJJZC, GZSZZE ""
                        + ""FROM DA, TGCORE.EVLDQ DQ , YHQC  ZG WHERE DA.CPCODE = DQ.DQCPDM AND DA.GZZHDM = DQ.DQDQZH AND""
                        + "" DQ.DQCKYH = ZG.ZGJGJC AND DA.KMZQLX =  'CK' AND KMZQLS = 'HQ' AND DQSTAT='A'  AND DQSTRD<=? AND DQENDD>?  )"");
        sSql.append(""SELECT YH,ZGJJZC, SUM(GZSZZE) AS GZSZZE FROM YHZQ GROUP BY YH,ZGJJZC"");
        try {
            JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
            Object[] args = new Object[]{prdCode, monDate, subjectType, monDate, monDate, monDate, monDate, monDate, monDate};
            List<Map<String, Object>> maps = jdbc.queryForList(sSql.toString(), args);
            return maps;
        } catch (Exception e) {
            throw new MonitorSystException(""查询债券、银行存款失败！"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4ManagerDao.java,getPreCKAndZQAmount4Bank,386,"    public List<XjglckzqblEntity> getPreCKAndZQAmount4Bank(String prdCode, java.sql.Date monDate, String subjectType)
            throws MonitorSystException {
        StringBuilder sSql = new StringBuilder();

        sSql.append(""WITH CPMN AS (SELECT DISTINCT CPMNAM FROM TGCORE.MONPR WHERE CPCODE = ?),"");
        sSql.append(
                ""CP AS (SELECT CPCODE,PR.CPMNAM AS CPMNAM FROM TGCORE.MONPR PR INNER JOIN CPMN ON PR.CPMNAM = CPMN.CPMNAM WHERE CPCPLX = 'YC' AND CPTTYPE = 'XJGL'),"");
        sSql.append(""DA AS (SELECT CPCODE,CPMNAM,GZZHDM, GZZQDM, GZCBZE, GZSZZE,KMZQLX,KMMKET, KMZQLS,SECTYPE3 "" +
                ""FROM TGCORE.EVLGZ gz, TGCORE.MONKM km ,CP "" +
                ""WHERE gz.GZDATE = ? AND gz.GZKMDM = km.KMCODE AND cp.CPCODE = gz.GZCPDM AND km.ISFINAL = 'Y' AND km.KMZQLX IN ('ZQ','CK') AND km.KMCPLX = ?  AND km.KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') AND km.KMZQLS<>'FZ'),"");
        sSql.append(""YHQC as (select distinct ZGJGJC,ZGJGQC,ZGJJZC from TGCORE.MONZG where ZGDATE=?),"");
        sSql.append(
                ""YHZQ AS (SELECT ZQ.ZQFXRN AS YH, ZGJJZC, GZSZZE ,CPCODE,ZQCODE,ZQNAME,ZQMKET,'债券' AS ZQTYPE  FROM""
                        + "" DA,TGCORE.MONZQ ZQ ,YHQC ZG WHERE ZQ.ZQCODE = DA.GZZQDM AND ZQ.ZQMKET = DA.KMMKET AND ZQ.ZQFXRN = ZG.ZGJGQC AND DA.KMZQLX = 'ZQ' AND ZQ.ZQDATE = ?  ""
                        +
                        ""UNION ALL "" +
                        ""SELECT ZG.ZGJGQC AS YH, ZGJJZC, GZSZZE ,CPCODE,DQCJBH ZQCODE,' ' ZQNAME,' ' ZQMKET,'定期存款' AS ZQTYPE  FROM ""
                        + ""DA, TGCORE.EVLDQ DQ , YHQC ZG WHERE DA.CPCODE = DQ.DQCPDM AND DA.GZZHDM = DQ.DQDQZH AND DQ.DQCKYH = ZG.ZGJGJC AND KMZQLS != 'HQ' AND  DA.KMZQLX = 'CK' AND DQSTAT='A'  AND DQSTRD<=? AND DQENDD>?  ""
                        +
                        ""union ALL select ZGJGQC as YH, ZGJJZC, GZSZZE ,CPCODE,GZZHDM ZQCODE,' ' ZQNAME,' ' ZQMKET,'活期存款' AS ZQTYPE  from DA, YHQC WHERE KMZQLS = 'HQ' AND SECTYPE3 != 'THHQ' AND ZGJGQC = ""
                        + ""'招商银行股份有限公司' "" +
                        ""UNION ALL "" +
                        ""SELECT ZG.ZGJGQC AS YH, ZGJJZC, GZSZZE,CPCODE,DQCJBH ZQCODE,' ' ZQNAME,' ' ZQMKET,'活期存款' AS ZQTYPE ""
                        + ""FROM DA, TGCORE.EVLDQ DQ , YHQC  ZG WHERE DA.CPCODE = DQ.DQCPDM AND DA.GZZHDM = DQ.DQDQZH AND""
                        + "" DQ.DQCKYH = ZG.ZGJGJC AND DA.KMZQLX =  'CK' AND KMZQLS = 'HQ' AND DQSTAT='A'  AND DQSTRD<=? AND DQENDD>?  )"");
        sSql.append(""SELECT YH,CPCODE,ZQCODE,ZQNAME,ZQMKET,ZQTYPE,ZGJJZC,GZSZZE FROM YHZQ"");
        try {
            JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
            Object[] args = new Object[]{prdCode, monDate, subjectType, monDate, monDate, monDate, monDate, monDate, monDate};
            List<XjglckzqblEntity> maps = jdbc.queryForList(sSql.toString(), args, (rs, rowNum) -> {
                XjglckzqblEntity res = new XjglckzqblEntity();
                res.setBank(rs.getString(""YH""));
                res.setPrdCode(rs.getString(""CPCODE""));
                res.setSecCode(rs.getString(""ZQCODE""));
                res.setSecName(rs.getString(""ZQNAME""));
                res.setSecMket(rs.getString(""ZQMKET""));
                res.setSecType(rs.getString(""ZQTYPE""));
                res.setZgjjzc(rs.getBigDecimal(""ZGJJZC""));
                res.setMarketTotal(rs.getBigDecimal(""GZSZZE""));
                // T表示指令，T-1表示非指令
                res.setSqdatafrom(""T-1"");
                return res;
            });
            return maps;
        } catch (Exception e) {
            throw new MonitorSystException(""查询债券、银行存款失败！"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4ManagerDao.java,getCKAndZQAmount4BankDetail,439,"    public List<XjglckzqblEntity> getCKAndZQAmount4BankDetail(String prdCode, java.sql.Date monDate, String subjectType, String assistKey)
            throws MonitorSystException {
        StringBuilder sSql = new StringBuilder();
        sSql.append(""WITH CPMN AS (SELECT DISTINCT CPMNAM FROM TGCORE.MONPR WHERE CPCODE = ?),"");
        sSql.append(
                ""CP AS (SELECT CPCODE,PR.CPMNAM AS CPMNAM FROM TGCORE.MONPR PR INNER JOIN CPMN ON PR.CPMNAM = CPMN.CPMNAM WHERE CPCPLX = 'YC' AND CPTTYPE = 'XJGL'),"");
        sSql.append(""DA AS (SELECT CPCODE,CPMNAM,GZZHDM, GZZQDM, GZCBZE, GZSZZE,KMZQLX,KMMKET, KMZQLS, SECTYPE3 "" +
                ""FROM TGCORE.EVLGZ gz, TGCORE.MONKM km ,CP "" +
                ""WHERE gz.GZDATE = ? AND gz.GZKMDM = km.KMCODE AND cp.CPCODE = gz.GZCPDM AND km.ISFINAL = 'Y' AND km.KMZQLX IN ('ZQ','CK') AND km.KMCPLX = ?  AND km.KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') AND km.KMZQLS<>'FZ'),"");
        sSql.append(""YHQC as (select distinct ZGJGJC,ZGJGQC,ZGJJZC from TGCORE.MONZG where ZGDATE=?),"");
        sSql.append(
                ""YHZQ AS (SELECT ZQ.ZQFXRN AS YH, ZGJJZC, GZSZZE,CPCODE,ZQCODE,ZQNAME,ZQMKET,'债券' AS ZQTYPE  FROM DA,TGCORE.MONZQ ZQ ,YHQC ZG WHERE ZQ.ZQCODE = DA.GZZQDM AND ZQ.ZQMKET = DA.KMMKET AND ZQ.ZQFXRN = ZG.ZGJGQC AND DA.KMZQLX = 'ZQ' AND ZQ.ZQDATE = ?  ""
                        +
                        ""UNION ALL "" +
                        ""SELECT ZG.ZGJGQC AS YH, ZGJJZC, GZSZZE,CPCODE,DQCJBH ZQCODE,' ' ZQNAME,' ' ZQMKET,'定期存款' AS ZQTYPE FROM DA, TGCORE.EVLDQ DQ , YHQC ""
                        + ""ZG WHERE DA.CPCODE = DQ.DQCPDM AND DA.GZZHDM = DQ.DQDQZH AND DQ.DQCKYH = ZG.ZGJGJC AND DA.KMZQLX = 'CK' AND KMZQLS != ""
                        + ""'HQ' AND DQSTAT='A'  AND DQSTRD<=? AND DQENDD>?  "" +
                        ""union ALL select ZGJGQC as YH, ZGJJZC, GZSZZE,CPCODE,GZZHDM ZQCODE,' ' ZQNAME,' ' ZQMKET,'活期存款' AS ZQTYPE from DA, YHQC ""
                        + ""WHERE KMZQLS = 'HQ' AND SECTYPE3 != 'THHQ' AND ZGJGQC = '招商银行股份有限公司'  ""
                        + ""UNION ALL SELECT ZG.ZGJGQC AS YH, ZGJJZC, GZSZZE,CPCODE,DQCJBH ZQCODE,' ' ZQNAME,' ' ZQMKET,'活期存款' AS ZQTYPE FROM DA, ""
                        + ""TGCORE.EVLDQ DQ , YHQC  ZG WHERE DA.CPCODE = DQ.DQCPDM AND DA.GZZHDM = DQ.DQDQZH AND DQ.DQCKYH = ZG.ZGJGJC AND DA.KMZQLX =""
                        + "" 'CK' AND KMZQLS = 'HQ' AND DQSTAT='A'  AND DQSTRD<=? AND DQENDD>?  )"");
        sSql.append(""SELECT YH,CPCODE,ZQCODE,ZQNAME,ZQMKET,ZQTYPE,ZGJJZC,GZSZZE FROM YHZQ"");
        try {
            JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
            Object[] args = new Object[]{prdCode, monDate, subjectType, monDate, monDate, monDate, monDate, monDate, monDate};
            List<XjglckzqblEntity> maps = jdbc.queryForList(sSql.toString(), args, (rs, rowNum) -> {
                XjglckzqblEntity res = new XjglckzqblEntity();
                res.setBank(rs.getString(""YH""));
                res.setPrdCode(rs.getString(""CPCODE""));
                res.setSecCode(rs.getString(""ZQCODE""));
                res.setSecName(rs.getString(""ZQNAME""));
                res.setSecMket(rs.getString(""ZQMKET""));
                res.setSecType(rs.getString(""ZQTYPE""));
                res.setZgjjzc(rs.getBigDecimal(""ZGJJZC""));
                res.setMarketTotal(rs.getBigDecimal(""GZSZZE""));
                return res;
            });
            return maps;
        } catch (Exception e) {
            throw new MonitorSystException(""查询债券、银行存款失败！"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4ManagerDao.java,getPreMonCKAndZQAmount4Bank,487,"    public Map<String, Object> getPreMonCKAndZQAmount4Bank(
            String prdCode, String secType, String bankFullName, java.sql.Date monDate, String subjectType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sSql = new StringBuilder();
        Object[] args;
        sSql.append(""WITH CPMN AS (SELECT DISTINCT CPMNAM FROM TGCORE.MONPR WHERE CPCODE = ?),"");
        sSql.append(""CP AS (SELECT CPCODE,PR.CPMNAM AS CPMNAM FROM TGCORE.MONPR PR INNER JOIN CPMN ON PR.CPMNAM = CPMN.CPMNAM WHERE CPCPLX = 'YC' AND CPTTYPE = 'XJGL'),"");
        sSql.append(""DA AS (SELECT CPCODE,CPMNAM,GZZHDM, GZZQDM, GZCBZE, GZSZZE,KMZQLX "" +
                ""FROM TGCORE.EVLGZ gz, TGCORE.MONKM km ,CP "" +
                ""WHERE gz.GZDATE = ? AND gz.GZKMDM = km.KMCODE AND cp.CPCODE = gz.GZCPDM AND km.ISFINAL = 'Y' AND km.KMCPLX = ? AND km.KMZQLS<>'FZ' "");
        if (ZbConstants.ZQLB_ZQ.equals(secType)) {
            sSql.append("" AND km.KMZQLX = 'ZQ' AND km.KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03')"");
        } else {
            sSql.append(""AND km.KMZQLX = 'CK' AND km.KMTYPE = 'CB'"");
        }
        sSql.append(""),"");
        if (ZbConstants.ZQLB_ZQ.equals(secType)) {
            sSql.append(""YHZQ AS (SELECT ZQ.ZQFXRN AS YH, ZGJJZC, DA.*  "" +
                    ""FROM DA,TGCORE.MONZQ ZQ ,TGCORE.MONZG ZG WHERE ZQ.ZQCODE = DA.GZZQDM AND ZQ.ZQFXRN = ZG.ZGJGQC AND DA.KMZQLX = 'ZQ' AND ZG.ZGJGQC = ? )"");
            args = new Object[]{prdCode, monDate, subjectType, bankFullName};
        } else {
            sSql.append(""fxryh AS (SELECT DISTINCT ZGJGQC,ZGJJZC,DQDQZH,DQCPDM  FROM TGCORE.MONZG ZG,TGCORE.EVLDQ DQ WHERE ZG.ZGJGQC = ? AND DQ.DQCKYH = ZG.ZGJGJC  AND DQSTAT='A' AND ZGDATE = ?  AND DQSTRD<=? AND DQENDD>?),"");
            sSql.append(""YHZQ AS (SELECT fxryh.ZGJGQC AS YH,ZGJJZC, DA.* FROM fxryh LEFT JOIN DA ON DA.CPCODE = fxryh.DQCPDM AND DA.GZZHDM = fxryh.DQDQZH WHERE DA.KMZQLX = 'CK' ) "");
            args = new Object[]{prdCode, monDate, subjectType, bankFullName, monDate, monDate, monDate};
        }
        sSql.append(""SELECT YH,ZGJJZC, SUM(GZSZZE) AS GZSZZE FROM YHZQ GROUP BY YH,ZGJJZC"");
        try {
            JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
            return jdbc.queryForObject(sSql.toString(), args, new RowMapper<Map<String, Object>>() {
                @Override
                public Map<String, Object> mapRow(ResultSet rs, int rowNum) throws Exception {
                    Map<String, Object> res = new HashMap<>();
                    res.put(""YH"", rs.getString(""YH""));
                    res.put(""ZGJJZC"", rs.getBigDecimal(""ZGJJZC""));
                    res.put(""GZSZZE"", rs.getBigDecimal(""GZSZZE""));
                    return res;
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""查询债券、银行存款失败！"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4OptionDao.java,getHoldingOverTheCounterOptions,24,"    public List<Map<String, Object>> getHoldingOverTheCounterOptions(final String prdcode, final Date bizdate, final String subjectType)
            throws MonitorBussException {
        StringBuilder sql = new StringBuilder(256);
        sql.append(""with evl as (select GZDATE,GZCPDM, GZZQDM, KMZQLS from tgcore.EVLGZ, tgcore.MONKM where GZKMDM=KMCODE "")
                .append(""and GZCPDM=? and GZDATE=? and KMCPLX=? and KMTYPE='CB' and KMZQLX='CWQQ' and ISFINAL='Y'),"");
        sql.append(""cwqq as (select GZDATE,GZCPDM, GZZQDM, KMZQLS, HYNAME, HYJYDS, HYFQQF from evl left join tgcore.PRDCWQQ "")
                .append(""on GZCPDM=HYCPDM and GZZQDM=HYHYDM and HYSTAT='A')"");
        sql.append(""select GZZQDM, HYNAME,HYJYDS as JYDS,HYFQQF, BZJJE,NVL(HYFQQF,0) + NVL(BZJJE,0) as JE from cwqq "")
                .append(""left join tgcore.GUARANTEE_MONEY_ADJUST "")
                .append(""on GZCPDM=PRDCODE and GZZQDM=HYCODE and GZDATE=JYDATE and YWTYPE='QQ' and STATUS='A'"");
        Object[] args = new Object[]{prdcode, bizdate, subjectType};
        JdbcTemplate jdbc = new JdbcTemplate();
        try {
            return jdbc.queryForList(sql.toString(), args);
        } catch (Exception e) {
            throw new MonitorBussException(""获取持仓的场外期权失败："", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4SkrDao.java,getStockHoldingsByManger,68,"    public List<Map<String, Object>> getStockHoldingsByManger(String manager, String prdCode, Date monDate,
                                                              String subjectType, boolean isBxOrQD) throws MonitorBussException {
        String cpcc;
        if (isBxOrQD) {
            cpcc = ""cpcc as (select SECCODE as GZZQDM,KMMKET from TGCORE.EVALUATION,km where PRDCODE=? and BIZDATE=? and ""
                    + ""KMCPLX=? and COACODE=KMCODE),"";
        } else {
            cpcc = ""cpcc as (select GZZQDM,KMMKET from TGCORE.EVLGZ,km where GZCPDM=? and GZDATE=? and KMCPLX=? and GZKMDM=KMCODE),"";
        }
        StringBuilder sql = new StringBuilder();
        sql.append(""with cp as (select cpcode, cpcplx, CPMNAM from TGCORE.MONPR where ""
                + ""upper(REGEXP_REPLACE(CPMNAM, '[^A-Za-z0-9一-龥]')) = '"" + manager + ""' and CPSTAT = 'A'), ""
                + ""km as(select CASE KMCPLX WHEN 'BX' THEN (CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET ""
                + ""END AS KMMKET,KMCPLX,KMCODE,KMZQLX,kmzqls,SECTYPE3,KMTZFL,KMTYPE,KMKMBZ,KMBZXX from TGCORE.MONKM where ""
                + ""KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS <> 'FZ' ""
                + ""and KMKMBZ = 'CNY' and KMBZXX <> 'OVERSEA'),""
                + ""cpkm as( select CPCODE,CPCPLX,SUBJECT_TYPE,CPMNAM from cp join (select PRD_TYPE,SUBJECT_TYPE,""
                + ""ROW_NUMBER() over(partition by PRD_TYPE order by SEQN desc) as rn ""
                + ""from TGCORE.MON_PROD_SUBJECT where ? between START_DATE and END_DATE) on CPCPLX=PRD_TYPE and rn=1 ),""
                + ""glrcpcc as (select PRDCODE as GZCPDM,BIZDATE as GZDATE,ACCCODE as GZZHDM,SECCODE as GZZQDM,""
                + ""EVLQTY as gzgzsl,KMZQLX,kmzqls,KMMKET,COACODE as GZKMDM,KMKMBZ,KMBZXX,CPMNAM ""
                + ""from TGCORE.EVALUATION gz,km,cpkm where PRDCODE=CPCODE and BIZDATE=? and COACODE=KMCODE and KMCPLX=SUBJECT_TYPE ""
                + ""union all ""
                + ""select GZCPDM,GZDATE,GZZHDM,GZZQDM,gzgzsl,KMZQLX,kmzqls,KMMKET,GZKMDM,KMKMBZ,KMBZXX,CPMNAM ""
                + ""from TGCORE.EVLGZ gz,km,cpkm where GZCPDM=CPCODE and GZDATE=? and GZKMDM=KMCODE and KMCPLX=SUBJECT_TYPE), ""
                + cpcc
                + ""glrkmgz as (select GZCPDM,GZDATE,GZZHDM,GZZQDM,gzgzsl,KMZQLX,kmzqls,KMMKET,GZKMDM,CPMNAM ""
                + ""from glrcpcc glr where exists( select 1 from cpcc where glr.gzzqdm=cpcc.gzzqdm and glr.KMMKET=cpcc.KMMKET)) ""
                + ""select GZCPDM,GZZHDM,GZZQDM,KMMKET,CPMNAM,gzgzsl,GPCODE,GPNAME,GPLTGB from glrkmgz left join ""
                + ""tgcore.mongp on KMMKET=GPMKET and GZZQDM=GPCODE and GZDATE=GPDATE"");

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sql.toString(), monDate, monDate, monDate, prdCode, monDate, subjectType);
        } catch (Exception e) {
            throw new MonitorBussException(""获取同一实控人股票持仓数据失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4SkrDao.java,getBondHoldingsByManger,118,"    public List<TyglrtyzqblEntity> getBondHoldingsByManger(String manager, String prdCode, Date monDate, String subjectType,
                                                           boolean isShowDetail, boolean isBxOrQD) throws MonitorBussException {
        String cczq;
        if (isBxOrQD) {
            cczq = ""cczq as (select SECCODE as GZZQDM, KMMKET from tgcore.EVALUATION, tgcore.MONKM where PRDCODE=? and BIZDATE=? and ""
                    + ""KMCPLX=? and COACODE=KMCODE and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ'),"";
        } else {
            cczq = ""cczq as (select GZZQDM, KMMKET from tgcore.EVLGZ, tgcore.MONKM where GZCPDM=? and GZDATE=? and KMCPLX=? and ""
                    + ""GZKMDM=KMCODE and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ'),"";
        }
        StringBuilder sql = new StringBuilder();
        sql.append(""with zq as (select ZQCODE, ZQMKET,ZQNAME, ZQCLGM, ZQZQLB from tgcore.MONZQ where ZQDATE=? and ZQSTAT='A' and ZQSYFW='P'),"");
        //本产品持仓债券
        sql.append(cczq);
        sql.append(""cczqgm as (select GZZQDM, KMMKET, ZQNAME, ZQCLGM, ZQZQLB from cczq left join zq ""
                + ""on ZQMKET =KMMKET and ZQCODE = GZZQDM where ZQZQLB NOT IN ('GZ','YP','ZCJR','DFZ','KZZ','JHGS') or ZQZQLB is null),"");
        //本产品持仓质押债券
        sql.append(""zyq as (select ZYZYDM as GZZQDM,ZYMKET as KMMKET from tgcore.JYSQTQS, TGCORE.JYSNHGZY where ZYCPDM=QSCPDM and ""
                + ""ZYDATE=QSQTRQ and ZYMKET=QSMKET and ZYCRTD<? and ZYSTAT='A' ""
                + ""and QSCJBH=ZYCJBH and QSCPDM=? and QSMMBZ='S' AND qsstat ='A' and qsywbz = 'ZQLQ'  AND qsqtrq <= ?  AND qsqtrq + qszqdm > ? ""
                + ""group by ZYZYDM, ZYMKET having sum(ZYCJSL) > 0),"");
        sql.append(""zyqgm as (select GZZQDM, KMMKET, ZQNAME, ZQCLGM, ZQZQLB from zyq, zq where ZQMKET =KMMKET and ZQCODE = GZZQDM ""
                + ""and ZQZQLB NOT IN ('GZ','YP','ZCJR','DFZ','KZZ','JHGS')),"");
        //本产品持仓的债券和质押券
        sql.append(""cpcc as (select GZZQDM, KMMKET, ZQNAME, ZQCLGM, ZQZQLB from cczqgm union select GZZQDM, KMMKET, ZQNAME, ""
                + ""ZQCLGM, ZQZQLB from zyqgm),"");
        //本产品的管理人下的所有产品
        sql.append(""glrcp as (select cpcode, cpcplx, cpmnam from TGCORE.MONPR where ""
                + ""upper(REGEXP_REPLACE(CPMNAM, '[^A-Za-z0-9一-龥]')) = '"" + manager + ""' and CPSTAT = 'A'), "");
        sql.append(""glrcpkm as( select CPCODE,CPCPLX,SUBJECT_TYPE,cpmnam from glrcp join (select PRD_TYPE,SUBJECT_TYPE,"" +
                ""ROW_NUMBER() over(partition by PRD_TYPE order by SEQN desc) as "" +
                ""rn from TGCORE.MON_PROD_SUBJECT where ? between START_DATE and END_DATE) a on CPCPLX=PRD_TYPE and rn=1 ), "");
        //管理人持仓本产品持仓的债券
        sql.append(""glrcczq as (select CPCODE, GZZHDM, GZZQDM, KMMKET, GZGZSL,cpmnam from tgcore.EVLGZ, tgcore.MONKM, glrcpkm ""
                + ""where GZCPDM=CPCODE and KMCPLX=SUBJECT_TYPE and ""
                + ""GZDATE=? and GZKMDM=KMCODE and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ' "");
        sql.append("" union all "");
        sql.append(""select CPCODE, ACCCODE as GZZHDM,SECCODE as GZZQDM, KMMKET, EVLQTY as GZGZSL,cpmnam from TGCORE.EVALUATION, tgcore.MONKM, glrcpkm ""
                + ""where PRDCODE=CPCODE and BIZDATE=? and COACODE=KMCODE and KMCPLX=SUBJECT_TYPE ""
                + ""and KMTYPE='CB' and ISFINAL='Y' and KMZQLX in ('ZQ', 'ZCZQ') and KMZQLS<>'FZ' and KMKMBZ='CNY' and KMBZXX<>'OVERSEA'"");
        sql.append("" union all "");
        sql.append("" select CPCODE, ' ' as GZZHDM,ZYZYDM as GZZQDM,ZYMKET as KMMKET, sum(ZYCJSL) as GZGZSL,cpmnam ""
                + ""from tgcore.JYSQTQS, TGCORE.JYSNHGZY, glrcpkm ""
                + ""where ZYCPDM=QSCPDM and ZYDATE=QSQTRQ and ZYMKET=QSMKET ""
                + ""and QSCJBH=ZYCJBH and QSCPDM=CPCODE and QSMMBZ='S' AND qsstat ='A' and qsywbz = 'ZQLQ'  AND qsqtrq <= ?  AND qsqtrq + qszqdm > ? ""
                + ""and ZYCRTD<? and ZYSTAT='A' group by CPCODE,ZYZYDM,ZYMKET,cpmnam having sum(ZYCJSL) > 0) "");

        if (isShowDetail) {
            sql.append("" select CPCODE, GZZHDM, glrcczq.GZZQDM, glrcczq.KMMKET, GZGZSL, ZQNAME, ZQCLGM, ZQZQLB, cpmnam from ""
                    + ""glrcczq, cpcc where glrcczq.GZZQDM=cpcc.GZZQDM and glrcczq.KMMKET=cpcc.KMMKET"");
        } else {
            sql.append("" select glrcczq.GZZQDM, glrcczq.KMMKET, sum(GZGZSL) as GZGZSL, ZQNAME, ZQCLGM, ZQZQLB, cpmnam from glrcczq, cpcc ""
                    + ""where glrcczq.GZZQDM=cpcc.GZZQDM and glrcczq.KMMKET=cpcc.KMMKET ""
                    + ""group by glrcczq.GZZQDM, glrcczq.KMMKET, ZQNAME, ZQCLGM, ZQZQLB, cpmnam"");
        }

        Object[] args = new Object[]{monDate,
                prdCode, monDate, subjectType,
                monDate, prdCode, monDate, monDate,
                monDate, monDate, monDate,
                monDate, monDate, monDate};

        JdbcTemplate jdbcTemplate = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbcTemplate.queryForList(sql.toString(), args, new RowMapper<TyglrtyzqblEntity>() {
                @Override
                public TyglrtyzqblEntity mapRow(final ResultSet rs, final int rowNum) throws Exception {
                    TyglrtyzqblEntity entity = new TyglrtyzqblEntity();
                    entity.setSecName(rs.getString(""ZQNAME""));
                    entity.setSecCode(rs.getString(""GZZQDM"").trim());
                    entity.setSecMarket(rs.getString(""KMMKET"").trim());
                    entity.setBondType(rs.getString(""ZQZQLB""));
                    entity.setGzgzsl(rs.getBigDecimal(""GZGZSL""));
                    entity.setScale(rs.getBigDecimal(""ZQCLGM""));
                    entity.setManager(rs.getString(""cpmnam""));
                    if (isShowDetail) {
                        entity.setAccount(rs.getString(""GZZHDM""));
                        entity.setPrdCode(rs.getString(""CPCODE""));
                    }
                    return entity;
                }
            });
        } catch(Exception e) {
            throw new MonitorBussException(""获取实控人持仓债券数据失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4SpvDao.java,getForbiddenSpvHolding,17,"    public List<SecurityBaseEntity> getForbiddenSpvHolding(String prdCode, Date monDate, String subjectType, String forbiddenType)
            throws SQLException {
        StringBuilder sql = new StringBuilder(128);
        sql.append(""with gz as (select GZZQDM, KMMKET from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM=? and GZDATE=? and KMCPLX=? and GZKMDM=KMCODE ""
                + ""and KMTYPE='CB' and ISFINAL='Y' and KMZQLX='SPV') "");
        sql.append(""select distinct GZZQDM,KMMKET, nvl(ZQNAME,' ') as ZQNAME, nvl(ZQZQLB,' ') as ZQZQLB from gz ""
                + ""left join (select * from TGCORE.MONSPV ""
                + ""where (ZQCODE,ZQCPDM) in (select ZQCODE,max(ZQCPDM) ZQCPDM from TGCORE.MONSPV where ZQCPDM=? or ZQCPDM=' ' group by ZQCODE) )""
                + ""on  ZQMKET =KMMKET and ZQCODE = GZZQDM where ZQZQLB in ("" + forbiddenType + "") or trim(ZQZQLB) is null "");
        Object[] args = new Object[]{prdCode, monDate, subjectType, prdCode};

        JdbcTemplate jdbcTemplate = JdbcTemplate.getJdbcTemplate();
        return jdbcTemplate.queryForList(sql.toString(), args, new RowMapper<SecurityBaseEntity>() {
            @Override
            public SecurityBaseEntity mapRow(final ResultSet rs, final int rowNum) throws Exception {
                SecurityBaseEntity e = new SecurityBaseEntity();
                e.setSecCode(rs.getString(""GZZQDM"").trim());
                e.setSecType(rs.getString(""ZQZQLB"").trim());
                e.setSecMarket(rs.getString(""KMMKET"").trim());
                e.setSecName(rs.getString(""ZQNAME"").trim());
                return e;
            }
        });

    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4SpvDao.java,getHoldingSpv,50,"    public List<Map<String, Object>> getHoldingSpv(final String prdCode, final Date monDate, final String subjectType) throws MonitorBussException {
        StringBuilder sql = new StringBuilder(256);
        sql.append(""with evl as (select GZZQDM,KMMKET, GZSZZE, GZCBZE from tgcore.EVLGZ, TGCORE.MONKM where GZKMDM=KMCODE and GZCPDM=? "")
                .append(""and GZDATE=? and KMCPLX=? and KMTYPE in ('CB','JZZB01','JZZB02','JZZB03','YZ') and KMZQLX='SPV' and ISFINAL='Y')"");
        sql.append(""select GZZQDM, KMMKET, GZSZZE, GZCBZE, ZQNAME, ZQFXR, ZQZQLB, ZQEJLB,SFBJBZX from evl left join (select * from TGCORE.MONSPV "")
                .append(""where (ZQCODE,ZQCPDM) "")
                .append(""in (select ZQCODE,max(ZQCPDM) ZQCPDM from TGCORE.MONSPV where ZQCPDM=? or ZQCPDM=' ' group by ZQCODE)) "")
                .append(""on ZQMKET =KMMKET and ZQCODE = GZZQDM"");
        Object[] args = new Object[]{prdCode, monDate, subjectType, prdCode};

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try{
            return jdbc.queryForList(sql.toString(), args);
        } catch (Exception e) {
            throw new MonitorBussException(""获取持仓的非保本型收益凭证"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4SpvDao.java,getHoldingSpv4Pre,75,"    public List<Map<String, Object>> getHoldingSpv4Pre(final String prdCode, final Date gzDate, final Date monDate, final String subjectType,
                                                       final String fxr) throws MonitorBussException {
        StringBuilder sql = new StringBuilder(256);
        sql.append(""with evl as (select GZZQDM,KMMKET, GZSZZE, GZCBZE from tgcore.EVLGZ, TGCORE.MONKM where GZKMDM=KMCODE and GZCPDM=? "")
                .append(""and GZDATE=? and KMCPLX=? and KMTYPE in ('CB','JZZB01','JZZB02','JZZB03','YZ') and KMZQLX='SPV' and ISFINAL='Y'),"");
        sql.append(""zl as (select ZLZQDM as GZZQDM, ZLMKET as KMMKET, ZLJYJE as GZSZZE, ZLJYJE as GZCBZE from TGCORE.MON_ZL_WXSPVZL"")
                .append("" where ZLDATE=? and ZLCPDM=?),"");
        sql.append(""hz as (select GZZQDM,KMMKET, GZSZZE, GZCBZE from evl union all select GZZQDM,KMMKET, GZSZZE, GZCBZE from zl)"");
        sql.append(""select GZZQDM, KMMKET, GZSZZE, GZCBZE, ZQFXR, ZQNAME from hz left join (select * from TGCORE.MONSPV ""
                + ""where (ZQCODE,ZQCPDM) in (select ZQCODE,max(ZQCPDM) ZQCPDM from TGCORE.MONSPV where ZQCPDM=? or ZQCPDM=' ' group by ZQCODE)) ""
                + ""on ZQMKET =KMMKET and ZQCODE = GZZQDM where ZQZQLB='FBZQ' and ZQEJLB='SYPZ' and SFBJBZX='N' and trim(ZQFXR)=?"");
        Object[] args = new Object[]{prdCode, gzDate, subjectType, monDate, prdCode, prdCode, fxr};

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try{
            return jdbc.queryForList(sql.toString(), args);
        } catch (Exception e) {
            throw new MonitorBussException(""获取持仓的非保本型收益凭证"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4StockDao.java,getGptpgpNotExist,58,"    public List<Map<String, Object>> getGptpgpNotExist(String cpdm, Date chdate, Date gzdate, String kmcplx) throws Exception {
        StringBuilder sbSql = new StringBuilder();
        sbSql.append("" with "");
        //股票信息
        sbSql.append("" gpxx as ( "");
        sbSql.append("" select GPMKET as MKET, GPCODE as ZQDM from tgcore.MONGP where GPDATE=? "");
        sbSql.append("" ), "");
        //估值表股票信息
        sbSql.append("" gzgp as ( "");
        sbSql.append("" select KMZQLS,KMMKET GZMKET, GZZHDM,GZZQDM,GZSZZE,GZGZSL from tgcore.EVLGZ,TGCORE.MONKM where GZKMDM=KMCODE and GZCPDM=? and GZDATE=? and KMCPLX=? and KMTYPE='CB' and KMZQLX='GP' and KMZQLS<>'KTTD' and ISFINAL='Y'"");
        sbSql.append("" ), "");
        //非公开发行股票
        sbSql.append("" fgkgp as ( "");
        sbSql.append("" select GZZHDM as ZHDM,GZZQDM as ZQDM,GZSZZE as SZ,GZGZSL as SL,GZMKET from gzgp "");
        sbSql.append("" where KMZQLS in ('DXZF','LTSX') "");
        sbSql.append("" ), "");
        //新股
        sbSql.append("" xg as ( "");
        sbSql.append("" select GZZHDM as ZHDM,GZZQDM as ZQDM,GZMKET from gzgp "");
        sbSql.append("" where KMZQLS='XG' "");
        sbSql.append("" ) "");
        //停牌股票对应的股票信息不存在
        sbSql.append("" select distinct GZZQDM as ZQDM,GZMKET as MKET from gzgp left join gpxx on GZZQDM=ZQDM and GZMKET=MKET "");
        sbSql.append("" where not exists (select 1 from fgkgp where GZZHDM=ZHDM) "");
        sbSql.append("" and not exists (select 1 from xg where GZZHDM=ZHDM) and ZQDM is null  "");


        return JdbcTemplate.getJdbcTemplate().queryForList(sbSql.toString(), chdate, cpdm, gzdate, kmcplx);
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4StockDao.java,getStockHoldingByIndustry,171,"    public List<Map<String, Object>> getStockHoldingByIndustry(String prdCode, Date date, String subjectType,
                                                               String stockIndexCode) throws MonitorBussException, MonitorSystException {
        String sql = ""with STKHOLD as (select GZZQDM,KMMKET, sum(GZSZZE) GZSZZE from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and "" +
                ""GZDATE=? and GZKMDM=KMCODE and KMCPLX=? and KMTYPE='CB' and KMZQLX='GP' and KMZQLS<>'FZ' group by GZZQDM,KMMKET)"" +
                ""select GZZQDM,KMMKET,GZSZZE,GPSWYJ,CITIC_ONELEVEL_TRADE,GPCODE from STKHOLD left join TGCORE.MONGP on GPDATE = ? and "" +
                ""KMMKET=GPMKET and GZZQDM=GPCODE"";
        try {
            Object[] args = new Object[]{prdCode, date, subjectType, date};
            return JdbcTemplate.getJdbcTemplate().queryForList(sql, args);
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓股票的市值以及申万一级行业和中信一级行业信息失败！"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4StockDao.java,getStockEsgRate,267,"    public List<CCGPESGPJ.EsgStock> getStockEsgRate(MonObject monObject, Date busDate, Date esgDate, String zsCode)
            throws MonitorBussException, MonitorSystException {
        String sql = ""with gz as (select distinct KMMKET,GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and GZDATE=? and KMCODE=GZKMDM and "" +
                ""KMCPLX=(select SUBJECT_TYPE from TGCORE.MON_PROD_SUBJECT where PRD_TYPE = ? AND ? between START_DATE and END_DATE AND rownum=1) and "" +
                ""KMTYPE ='CB' and KMZQLX='GP' and ISFINAL='Y' and KMZQLS not in ('FZ','XG')) "" +
                ""select GZZQDM,KMMKET,NAME,ESG_RATE from gz left join TGCORE.MONGP_ESG on GZZQDM=CODE and KMMKET=MARKET and UPLOAD_DATE=? "";
        List<Object> paramList = new ArrayList<>(Arrays.asList(monObject.getValue(), busDate, monObject.getPrdType(), busDate, esgDate));
        if (!StringUtil.isNullOrEmpty(zsCode)) {
            sql += ""and not exists (select 1 from TGCORE.MONZS where ZSZQDM=GZZQDM and ZSMKET=KMMKET and ZSDATE=? and ZSZSLB=?)"";
            paramList.addAll(Arrays.asList(busDate, zsCode));
        }
        try {
            return JdbcTemplate.getJdbcTemplate().queryForList(sql, paramList, (rs, n) -> new CCGPESGPJ.EsgStock(rs.getString(""GZZQDM""), rs.getString(""KMMKET""), rs.getString(""NAME""), rs.getString(""ESG_RATE"")));
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓股票ESG评级失败:"" + e.getMessage(), e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4StockDao.java,getIndexStockHolding,294,"    public BigDecimal getIndexStockHolding(String prdCode, Date date, String subjectType,
                                           String stockIndexCode) throws MonitorBussException, MonitorSystException {
        String sql = ""with STKHOLD as (select GZZQDM,KMMKET,GZSZZE from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and "" +
                ""GZDATE=? and GZKMDM=KMCODE and KMCPLX=? and KMTYPE='CB' and KMZQLX in ('GP','ZQ','ZCZQ') and KMZQLS<>'FZ' ) "" +
                ""select NVL(sum(GZSZZE),0) SZ from STKHOLD,TGCORE.MONZS where GZZQDM = ZSZQDM and KMMKET = ZSMKET and "" +
                ""ZSZSLB = ? and ZSDATE = ?"";
        try {
            Object[] args = new Object[]{prdCode, date, subjectType, stockIndexCode, date};
            BigDecimal je = JdbcTemplate.getJdbcTemplate().queryForObject(sql, args, new RowMapper<BigDecimal>() {
                @Override
                public BigDecimal mapRow(ResultSet rs, int rowCount) throws Exception {
                    return rs.getBigDecimal(""SZ"");
                }
            });

            return je;
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓指数成分股信息失败！"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4StockDao.java,getHqAndBzj,315,"    public BigDecimal getHqAndBzj(String prdCode, Date date, String subjectType) throws MonitorBussException, MonitorSystException {
        String sql = ""select NVL(sum(GZSZZE),0) SZ from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and GZDATE=? and "" +
                ""GZZHDM=KMCODE and KMCPLX=? and ((KMTYPE in (' ','CB') and KMZQLX='CK' and KMZQLS='HQ') or ("" +
                ""KMZQLX in ('BZJ') and KMZQLS = 'SFCGBZJ'))"";
        try {
            Object[] args = new Object[]{prdCode, date, subjectType};
            BigDecimal je = JdbcTemplate.getJdbcTemplate().queryForObject(sql, args, new RowMapper<BigDecimal>() {
                @Override
                public BigDecimal mapRow(ResultSet rs, int rowCount) throws Exception {
                    return rs.getBigDecimal(""SZ"");
                }
            });

            return je;
        } catch (Exception e) {
            throw new MonitorSystException(""获取活期和三方存管保证金失败！"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\Data4StockDao.java,getStockHolding,378,"    public List<Map<String, Object>> getStockHolding(String prdCode, java.util.Date date, String subjectType) throws MonitorSystException {
        String sql = ""with STK as (""
                + ""select GZZQDM, KMMKET, GZSZZE, GZCBZE from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and ""
                + ""GZDATE=? and GZKMDM=KMCODE and KMCPLX=? and KMTYPE in ('CB','YZ') and KMZQLX='GP' and KMZQLS<>'FZ' and ISFINAL = 'Y' ""
                + ""), ""
                + ""GP AS (SELECT GPCODE, GPNAME, GPDATE, GPMKET FROM TGCORE.MONGP WHERE GPDATE = ?) ""
                + ""select GZZQDM, KMMKET, GZSZZE, GZCBZE, GPCODE SECCODE, GPNAME SECNAME, 'GP' SECTYPE from STK left join GP ""
                + ""on KMMKET=GPMKET and GZZQDM=GPCODE "";
        try {
            Object[] args = new Object[]{prdCode, date, subjectType, date};
            return JdbcTemplate.getJdbcTemplate().queryForList(sql, args);
        } catch (Exception e) {
            throw new MonitorSystException(""获取股票持仓失败！"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\EvaluationDao.java,loadEvaluation,88,"    public HashMap<String, EvaluationEntity> loadEvaluation(Date evlDate, String cpdm, boolean isBxQd) throws Exception {
        HashMap<String, EvaluationEntity> gzbes = new HashMap<>(256);

        String sSql = """";
        if (!isBxQd) {
            sSql = ""select GZZHDM,GZCBZE,GZSZZE,GZCBBL,GZSZBL,GZGZSL,GZZHMC ""
                    + ""from TGCORE.EVLGZ where GZCPDM =? and GZDATE=? and gzzhdm like '9999%'"";
        } else {
            sSql =
                    "" SELECT  ACCCODE GZZHDM, ACCNAME GZZHMC,  ORIGCRCY, STADCOST GZCBZE, STADVAL GZSZZE, EVLQTY GZGZSL ,  COSTRATIO GZCBBL, VALRATIO GZSZBL""
                            +
                            "" FROM TGCORE.EVALUATION where PRDCODE = ? and BIZDATE =? and  ACCCODE like '9999%'"";
        }

        JdbcTemplate jdbcTemplate = JdbcTemplate.getJdbcTemplate();
        jdbcTemplate.query(sSql, new Object[]{cpdm, evlDate}, new RowCallbackHandler() {
            @Override
            public void processRow(ResultSet rs, int rowIndex) throws Exception {
                String strZHDM = rs.getString(""GZZHDM"").trim();

                EvaluationEntity gzbEntry = new EvaluationEntity();
                gzbEntry.set_cbze(rs.getBigDecimal(""GZCBZE""));
                gzbEntry.set_szze(rs.getBigDecimal(""GZSZZE""));
                gzbEntry.set_cbbl(Calc.div(rs.getBigDecimal(""GZCBBL""), 100));
                gzbEntry.set_szbl(Calc.div(rs.getBigDecimal(""GZSZBL""), 100));
                gzbEntry.set_gzsl(rs.getBigDecimal(""GZGZSL""));
                gzbEntry.set_zhmc(rs.getString(""GZZHMC"").trim());

                gzbes.put(strZHDM, gzbEntry);
            }
        });

        return gzbes;

    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\EvaluationDao.java,getSumByPrdCodeInPlan,129,"    public Map<String, String> getSumByPrdCodeInPlan(Date evlDate, String prdCode) throws Exception {

        //先查询当前产品计划下的所有产品，再根据查出的产品从EVLGZ中查询资产净值
        String sql =
                "" WITH cp AS (SELECT CPCODE  FROM TGCORE.MONPR m WHERE CPSCLS <> 'STH' AND CPJHDM IN (SELECT CPJHDM FROM TGCORE.MONPR  WHERE CPCODE  = ? )) , ""
                        +
                        "" gzcp AS (SELECT * FROM TGCORE.EVLGZ e WHERE GZDATE = ? AND  GZZHDM='99990004' AND GZCPDM IN (SELECT DISTINCT CPCODE FROM cp)) ""
                        +
                        "" SELECT SUM(GZSZZE) AS GZSZZE,SUM(GZCBZE) AS GZCBZE  FROM gzcp "";

        JdbcTemplate jdbcTemplate = JdbcTemplate.getJdbcTemplate();
        Object[] args = {prdCode, evlDate};

        return jdbcTemplate.queryForObject(sql, args, (rs, rowNum) -> {
            Map<String, String> res = new HashMap<>();
            res.put(""GZSZZE"", rs.getBigDecimal(""GZSZZE"").toString());
            res.put(""GZCBZE"", rs.getBigDecimal(""GZCBZE"").toString());
            return res;
        });
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\EvaluationDao.java,getSumGroupByManager,155,"    public List<Map<String, String>> getSumGroupByManager(Date evlDate, String prdCode, String sumType) throws Exception {

        //先查询当前产品计划下的所有产品，再从EVLGZ中查询市值总额和成本总额，并根据管理人分组后就资产净值的和
        String sql =
                "" WITH cp AS (SELECT CPCODE,CPMNAM  FROM TGCORE.MONPR m WHERE CPSCLS <> 'STH' AND CPJHDM IN (SELECT CPJHDM FROM TGCORE.MONPR  WHERE CPCODE  = ? )) , ""
                        +
                        "" gzcp AS (SELECT e.*,cp.CPMNAM FROM TGCORE.EVLGZ e INNER JOIN cp ON e.GZCPDM = cp.CPCODE  WHERE GZZHDM='99990004' AND e.GZDATE = ? )  ""
                        +
                        "" SELECT CPMNAM,sum(GZSZZE) AS GZSZZE ,sum(GZCBZE) AS GZCBZE FROM gzcp GROUP BY CPMNAM "";
        if (""SZZE"".equals(sumType)) {
            sql = sql + ""ORDER BY GZSZZE desc"";
        }
        if (""CBZE"".equals(sumType)) {
            sql = sql + ""ORDER BY GZCBZE desc"";
        }

        JdbcTemplate jdbcTemplate = JdbcTemplate.getJdbcTemplate();
        Object[] args = {prdCode, evlDate};

        return jdbcTemplate.queryForList(sql, args, (rs, rowIndex) -> {

            Map<String, String> map = new HashMap<>();
            map.put(""CPMNAM"", rs.getString(""CPMNAM"").trim());
            map.put(""GZSZZE"", rs.getString(""GZSZZE"").trim());
            map.put(""GZCBZE"", rs.getString(""GZCBZE"").trim());
            return map;
        });
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\EvaluationDao.java,getAllHolding,218,"    public List<Map<String, Object>> getAllHolding(String prdCode, java.util.Date bizdate,
                                                   String subjectType, String isPenetrate) throws MonitorSystException {
        StringBuilder sql = new StringBuilder(256);
        String evlTableName = ""tgcore.EVLGZ"";
        //支持穿透
        if (MonConstants.Y_N_FLAG_Y.equals(isPenetrate)) {
            evlTableName = ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", new Date(bizdate.getTime()));
        }
        sql.append(""with GZ as (select NVL(GZZHDM,' ') as GZZHDM, NVL(GZZHMC,' ') as GZZHMC, NVL(GZKMDM, ' ') as GZKMDM, ""
                        + ""NVL(GZZQDM,' ') as GZZQDM from "")
                .append(evlTableName);
        sql.append("" where GZCPDM=? and GZDATE=? and (GZZHDM not like '9999%' and GZZHDM not like '6%' and GZZHDM not like '4%')),"");
        sql.append(""GZKM as (select GZZHDM,GZZHMC,GZKMDM,GZZQDM,KMNAME,KMCODE,KMMKET, ""
                + ""(case when KMZQLX in ('BFJ','BZJ','GP') and KMZQLS='RZRQ' then KMZQLS ""
                + ""when GZZHDM like '2202%' then 'ZHG' else KMZQLX end ) KMZQLX,""
                + ""KMZQLS,KMTYPE,KMLEVL,ISFINAL from GZ,TGCORE.MONKM where KMCPLX=? and (KMCODE=GZZHDM or KMCODE=GZKMDM) ""
                + ""and KMZQLX not in ('ZQ','JJ','SPQQ')"");
        sql.append(""union all "");
        sql.append(""select GZZHDM,GZZHMC,GZKMDM,GZZQDM,KMNAME,KMCODE,KMMKET,KMZQLX,KMZQLS,KMTYPE,KMLEVL,ISFINAL from GZ,TGCORE.MONKM ""
                + ""where KMCPLX=? and KMCODE=GZKMDM and KMZQLX in ('ZQ','JJ','SPQQ') and ISFINAL='Y' ),"");
        sql.append(""ZQ as (select ZQCODE,ZQMKET,ZQZQLB,ZQYXZQ from tgcore.MONZQ where ZQDATE=? and ZQSYFW='P'), "");
        sql.append(""JJ AS (SELECT JJCODE ,JJMKET ,JJTYPE  FROM tgcore.MONJJ m WHERE JJDATE =?  )"");
        sql.append(""select GZZHDM,GZZHMC, GZKMDM, GZZQDM, KMNAME,KMCODE,KMMKET, KMZQLX, KMZQLS, KMTYPE,KMLEVL,ISFINAL,  ""
                        + ""NVL(ZQZQLB,' ') as ZQZQLB,NVL(ZQYXZQ,' ') as ZQYXZQ ,NVL(JJTYPE,' ') as JJTYPE "")
                .append(""from GZKM left join ZQ ON  KMZQLX ='ZQ'  and ZQCODE=GZZQDM and ZQMKET = KMMKET LEFT JOIN JJ ""
                        + ""ON KMZQLX ='JJ' AND GZZQDM = JJCODE AND KMMKET = JJMKET"");
        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        Object[] args = new Object[]{prdCode, bizdate, subjectType, subjectType, bizdate, bizdate};
        try {
            return jdbc.queryForList(sql.toString(), args).stream().sorted(Comparator.comparing(e -> e.get(""GZZHDM"").toString()))
                    .collect(Collectors.toList());
        } catch (Exception e) {
            throw new MonitorSystException(""获取当前产品的持仓失败:"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\PrdAmountLimitDao.java,suretySQL,602,"    private void suretySQL(final StringBuilder sql, final String prdCode, final String subjectType) {
        sql.append("" select GZSZZE as JE,TRUNC(TO_NUMBER(0)) as SYQX,'EVLGZ' as SJLY,KMZQLX as KMZQLX,GZZQDM as SECCODE from TGCORE.EVLGZ, TGCORE.MONKM "");
        sql.append("" where GZCPDM= '"").append(prdCode).append(""' and GZDATE=? and KMCODE=GZZHDM "");
        sql.append("" and KMCPLX='"").append(subjectType).append(""' "");
        sql.append("" and ((KMZQLX='CK' and KMZQLS='HQ' and KMTYPE in (' ','CB') and ISFINAL='Y') or (KMZCLEVL='1' and KMZQLX in ('BFJ','BZJ') and KMTYPE in (' ','CB')))"");
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\PrdAmountLimitDao.java,liquidationSQL,635,"    private void liquidationSQL(final StringBuilder sql, final String prdCode, final String subjectType) {
        sql.append("" select GZSZZE as JE,TRUNC(TO_NUMBER(1)) as SYQX,'EVLGZ' as SJLY,KMZQLX as KMZQLX,GZZQDM as SECCODE from TGCORE.EVLGZ,TGCORE.MONKM "");
        sql.append("" where GZCPDM= '"").append(prdCode).append(""' and GZDATE=? and KMCODE=GZZHDM "");
        sql.append("" and KMCPLX='"").append(subjectType).append(""' "");
        sql.append("" and KMZCLEVL='2' and KMZQLX= 'QSK' and KMTYPE in (' ','CB') "");
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\PrdAmountLimitDao.java,currencyFundSQL,674,"    private void currencyFundSQL(final StringBuilder sql, final String kmType, final Date monDate, final String prdCode, final String subjectType, final boolean existPenetrate) {
        sql.append("" with  km as(  select CASE KMCPLX WHEN 'BX' THEN (CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END AS KMMKET, "");
        sql.append("" KMCPLX,KMCODE ,KMZQLX,KMZQLS,KMTZFL,KMTYPE from TGCORE.MONKM where "");
        sql.append("" KMCPLX='"").append(subjectType).append(""' "");
        if (""QJ"".equals(kmType)) {// 全价
            sql.append("" and KMTYPE in ("" + ZbConstants.KM_TYPE_QJ + "") "");
        } else {// 净价
            sql.append("" and KMTYPE in ("" + ZbConstants.KM_TYPE_JJ + "") "");
        }
        sql.append("" and ISFINAL='Y'  and KMZQLX in ('JJ') and KMZQLS <> 'FZ' ), "");
        sql.append("" kmgz as (select GZCPDM,GZDATE,GZZHDM,GZZQDM,GZZHMC,GZSZZE,GZKMDM,KMZQLX,KMZQLS,KMTYPE,KMMKET,KMCPLX  from "");
        if (existPenetrate) {//是否穿透
            sql.append(ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", monDate) + "" gz,km "");
        } else {
            sql.append("" TGCORE.EVLGZ gz,km "");
        }
        sql.append("" where GZDATE = ? and  GZKMDM=KMCODE  AND  GZCPDM= ?  ), "");
        sql.append("" ccjj as( select * from kmgz inner join (select JJ.* from  TGCORE.MONJJ JJ where  JJDATE = ? and JJTYPE = 'HBX'  )  "");
        sql.append("" on JJCODE = GZZQDM and JJMKET = KMMKET )  "");
        sql.append("" select GZZQDM as SECCODE,JJNAME as SECNAME,JJMKET as JJMKET,GZSZZE as JE,'1' as SYQX from ccjj "");
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\PrdAmountLimitDao.java,depositsSQL,727,"    private void depositsSQL(final StringBuilder sql, final String kmType, final Date monDate, final String prdCode, final String subjectType, final boolean existPenetrate) {
        sql.append("" with   km as ( select CASE KMCPLX WHEN 'BX' THEN (CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END AS KMMKET,"" +
                "" KMCPLX,KMCODE ,KMZQLX,kmzqls,SECTYPE3,KMTZFL,KMTYPE from TGCORE.MONKM where "");
        sql.append("" KMCPLX='"").append(subjectType).append(""' "");
        if (""QJ"".equals(kmType)) {// 全价
            sql.append("" and KMTYPE in ("" + ZbConstants.KM_TYPE_QJ + "") "");
        } else {// 净价
            sql.append("" and KMTYPE in ("" + ZbConstants.KM_TYPE_JJ + "") "");
        }
        sql.append("" and ISFINAL='Y'  and KMZQLX in ('CK') and KMZQLS <> 'FZ' ),  "");
        sql.append("" kmgz as (select GZCPDM,GZDATE,GZZHDM,GZZQDM,gzzhmc,KMZQLX,kmzqls,SECTYPE3,KMTYPE,gzszze,gzgzsl,"" +
                "" gzszbl,KMMKET,KMCPLX,GZKMDM ,KMMKET||GZZQDM as GZSCZQDM, GZDWCB,GZGZJG,  GZGZZZ, GZZZBL, GZGZFF, GZZZKM, GZQYXX, GZBZXX,KMTZFL from "");
        if (existPenetrate) {//是否穿透
            sql.append(ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", monDate) + "" gz,km "");
        } else {
            sql.append("" TGCORE.EVLGZ gz,km "");
        }
        sql.append(""  where GZDATE=?  and  GZKMDM=KMCODE  AND  GZCPDM=?  ), "");
        sql.append("" dq as( SELECT  *  FROM TGCORE.EVLDQ  dqsj where dqcpdm = ?  and  dqstrd <= ? and "" +
                "" dqendd > ? and dqstat = 'A' ), "");
        sql.append("" lx as( select gzzhdm as  lxzhdm ,gzcbze as gzlxje from "");
        if (existPenetrate) {//是否穿透
            sql.append(ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", monDate) + "", "");
        } else {
            sql.append("" TGCORE.EVLGZ, "");
        }
        sql.append("" TGCORE.MONKM where KMCODE=GZKMDM and gzcpdm = ? and  gzdate = ? "");
        sql.append("" and KMCPLX='"").append(subjectType).append(""' "");
        sql.append("" and kmtype IN ('LX','YJLX') and KMZQLX <>'YF' and KMZQLS<>'TYCR' and ISFINAL ='Y' ), "");
        sql.append("" ck as( SELECT a.*,a.dqcjbh as cjbh , gzszze+NVL(gzlxje,0) as gzszqj,a.DQCKYH as ISSUER FROM "" +
                "" (select GZCPDM,GZZHDM,GZZQDM,kmzqls AS CKLX,gzszze,gzgzsl,gzszbl,KMMKET,KMCPLX,GZKMDM,dq.*, "" +
                "" (dqendd-dqstrd) as ckckqx from kmgz,dq where gzzhdm=DQDQZH) a "" +
                "" left join lx on lx.lxzhdm = a.dqjfzh ) "");
        sql.append("" select CJBH as CJBH,DQENDD as DQENDD,GZSZZE as JE,DQCKLX as DQCKLX,DQTZTS as DQTZTS from ck "");
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\PrdAmountLimitDao.java,spvSQL,794,"    private void spvSQL(final StringBuilder sql, final String kmType, final Date monDate, final String prdCode, final String subjectType, final boolean existPenetrate) {
        sql.append(""with   km as(  select CASE KMCPLX WHEN 'BX' THEN (CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END AS KMMKET,"" +
                ""KMCPLX,KMCODE ,KMZQLX,kmzqls,SECTYPE3,KMTZFL,KMTYPE from TGCORE.MONKM where "");
        sql.append("" KMCPLX='"").append(subjectType).append(""' "");
        if (""QJ"".equals(kmType)) {// 全价
            sql.append("" and KMTYPE in ("" + ZbConstants.KM_TYPE_QJ + "") "");
        } else {// 净价
            sql.append("" and KMTYPE in ("" + ZbConstants.KM_TYPE_JJ + "") "");
        }
        sql.append("" and ISFINAL='Y'  and KMZQLX in ('SPV') and KMZQLS <> 'FZ' ),  "");

        sql.append("" kmgz as (select GZCPDM,GZDATE,GZZHDM,GZZQDM,gzzhmc,KMZQLX,kmzqls,SECTYPE3,KMTYPE,gzszze,gzgzsl,gzszbl,KMMKET,KMCPLX,GZKMDM ,"" +
                ""KMMKET||GZZQDM as GZSCZQDM, GZDWCB,GZGZJG,  GZGZZZ, GZZZBL, GZGZFF, GZZZKM, GZQYXX, GZBZXX,KMTZFL from "");
        if (existPenetrate) {
            sql.append(ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", monDate) + "" gz,km "");
        } else {
            sql.append(""TGCORE.EVLGZ gz,km "");
        }
        sql.append("" where GZDATE=?  and  GZKMDM=KMCODE  AND  GZCPDM=?  ),"");

        sql.append("" spvtz as( SELECT ccspv.* , FBCODE,FBMKET,FBZQLB,FBEJLB, FBSJLB, FB4JLB, FBFLWD, FBFXRN,FBNAME,FBENDD,FBISFBZC,FBTZXZ,FBZCLX FROM kmgz ccspv "" +
                "" inner join ( select * from  (select * from TGCORE.MONFB where FBSTAT = 'A' and FBCPDM =?  ) monfb_cp_1 union "" +
                "" select * from TGCORE.MONFB where FBSTAT = 'A' and trim(FBCPDM) IS NULL and  not exists  "" +
                "" (select 1 from (select * from TGCORE.MONFB where FBSTAT = 'A' and FBCPDM =? ) monfb_cp_2  where monfb_cp_2.FBCODE = TGCORE.MONFB.FBCODE and monfb_cp_2.FBMKET = TGCORE.MONFB.FBMKET)  ) monfb_tmp  "" +
                "" on fbmket =kmmket  and fbcode = gzzqdm where  FBSTAT = 'A')  "" +
                "" select FBCODE as SECCODE,FBNAME as SECNAME,FBMKET as FBMKET,GZSZZE as JE,TRUNC(TO_NUMBER(FBENDD-TO_DATE('"");
        sql.append(monDate.toString()).append(""','yyyy-mm-dd'))) as SYQX from spvtz"");
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\PrdAmountLimitDao.java,getFundAndPensionsPositions,828,"    public List<Map<String, Object>> getFundAndPensionsPositions() throws MonitorBussException {
        String sql = ""with GZ as (select GZZHDM,GZZQDM,KMMKET,GZSZZE,KMZQLX,GZZHMC from TGCORE.EVLGZ, TGCORE.MONKM where GZKMDM = KMCODE "" +
                ""and GZCPDM = ? and GZDATE = ? and KMCPLX = ? and KMZQLX in ('JJ','YL') and KMTYPE = 'CB' and ISFINAL = 'Y') "" +
                ""select GZZHDM,GZZQDM,KMMKET,GZSZZE SZ,JJSILB,KMZQLX,GZZHMC,NVL(SHRZJDZR_DAYS, 0) SYQX from GZ left join TGCORE.MONJJ "" +
                ""on GZZQDM = JJCODE and KMMKET = JJMKET and JJDATE = ?"";

        Object[] args = {prdCode, monDate, subjectType, monDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        try {
            return jdbcTemplate.queryForList(sql.toString(), args);
        } catch (Exception e) {
            throw new MonitorBussException(e.getMessage(), e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\PrdAmountLimitDao.java,getBondPositions,917,"    public List<Map<String, Object>> getBondPositions() throws MonitorBussException {
        String sql = ""with cczq as ( "" +
                ""select GZZQDM,GZSZZE,NVL(KSMKET,' ') as MKET from TGCORE.EVLGZ, TGCORE.MONKMSC "" +
                ""where GZCPDM = ? and GZDATE = ? and substr(GZZHDM,1,6) = KSCODE and KSKMLB = 'SI' and (GZZHDM like '1112__01_%' "" +
                ""or GZZHDM like '1132__01_%' or GZZHDM like '1133__01_%' or GZZHDM like '1111__01_%' or GZZHDM like '1103__01_%' "" +
                ""or GZZHDM like '1104__01_%' or GZZHDM like '11070101_%' )), "" +
                ""sumzq as (select GZZQDM,MKET,NVL(sum(GZSZZE), 0) as SZ from cczq group by GZZQDM,MKET ) "" +
                ""select GZZQDM,MKET,SZ,ZQCODE,ZQSTRD,ZQENDD,ZQLVLX,ZQQLTK,ZQHSRQ,ZQSYQX SYQX,NVL(ZQNAME,'') ZQNAME from sumzq left join "" +
                ""TGCORE.MONZQ on ZQDATE = ? and ZQCODE = GZZQDM and ZQMKET = MKET and ZQSYFW = 'P' and ZQENDD >= ?"";

        Object[] args = {prdCode, monDate, monDate, monDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        try {
            return jdbcTemplate.queryForList(sql.toString(), args);
        } catch (Exception e) {
            throw new MonitorBussException(e.getMessage(), e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\PrdAmountLimitDao.java,getCurrentDepositPositions,941,"    public BigDecimal getCurrentDepositPositions() throws MonitorBussException {
        String sql = ""select NVL(sum(gzszze),0) as SZ from TGCORE.EVLGZ where GZCPDM = ? and GZDATE = ? and GZZHDM = '100201'"";

        Object[] args = {prdCode, monDate};
        JdbcTemplate jdbcTemplate = new JdbcTemplate();
        try {
            return jdbcTemplate.queryForObject(sql.toString(), args, new RowMapper<BigDecimal>() {
                @Override
                public BigDecimal mapRow(ResultSet rs, int rowNum) throws Exception {
                    return rs.getBigDecimal(""SZ"");
                }
            });
        } catch (Exception e) {
            throw new MonitorBussException(e.getMessage(), e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\RelatedPartiesDao.java,getHoldBonds,79,"    public List<BondGlfEntity> getHoldBonds(Date busDate, Date chDate, String prdCode, String subjectPrdType, String prdType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        Object[] params;
        if (ZbConstants.CPLX_BX.equals(prdType) || ZbConstants.CPLX_QD.equals(prdType)) {
            sbSql.append(""with gz as ( "");
            sbSql.append(""select BIZDATE GZDATE, PRDCODE GZCPDM, KMMKET GZMKET, SECCODE GZZQDM, KMZQLX, SUM(STADCOST) GZCBZE, SUM(STADVAL) GZSZZE "");
            sbSql.append(""from tgcore.evaluation,tgcore.monkm "");
            sbSql.append(""where BIZDATE=? and PRDCODE=? and kmcplx=? and coacode=kmcode "");
            sbSql.append(""AND KMZQLX in ('ZQ','ZCZQ') and kmtype in ('CB','YZ','JZZB01','JZZB02','JZZB03','LX','YJLX') "");
            sbSql.append(""AND ISFINAL='Y' and KMZQLS <> 'FZ' and KMKMBZ = 'CNY' and KMBZXX <> 'OVERSEA' "");
            sbSql.append(""GROUP BY BIZDATE, PRDCODE, KMMKET, SECCODE, KMZQLX), "");
            sbSql.append(""ZqResult AS ( "");
            sbSql.append(""select gz.*, NVL(ZQNAME,' ') AS ZQNAME, "");
            // 如果是资产债券则取原始权益人
            sbSql.append(""NVL(case KMZQLX when 'ZCZQ' then ZQYSQY else ZQFXRN end, ' ') AS ZQFXRN "");
            sbSql.append(""FROM gz "");
            sbSql.append(""LEFT JOIN TGCORE.MONZQ ON zqdate = ? and zqmket = GZMKET and zqcode = GZZQDM  "");
            sbSql.append(""and zqstat = 'A' and ZQSYFW='P' "");
            sbSql.append("") "");
            sbSql.append(""SELECT * FROM ZqResult "");

        } else {
            sbSql.append(""WITH cczq as( "");
            sbSql.append(""select GZDATE, GZCPDM, KMMKET AS GZMKET, GZZQDM, KMZQLX, SUM(GZCBZE) AS GZCBZE, SUM(GZSZZE) AS GZSZZE "");
            sbSql.append(""from TGCORE.EVLGZ,TGCORE.MONKM "");
            sbSql.append(""where GZDATE=? and GZCPDM=? and KMCPLX=? and KMCODE=GZKMDM "");
            sbSql.append(""and KMZQLX in ('ZQ','ZCZQ') and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03','LX','YJLX') "");
            sbSql.append(""and ISFINAL='Y' and KMZQLS <> 'FZ' "");
            sbSql.append(""GROUP BY GZDATE, GZCPDM, KMMKET, GZZQDM, KMZQLX) "");
            sbSql.append(""select cczq.*, NVL(ZQNAME,' ') ZQNAME, "");
            // 如果是资产债券则取原始权益人
            sbSql.append(""NVL(case KMZQLX when 'ZCZQ' then ZQYSQY else ZQFXRN end,' ') ZQFXRN "");
            sbSql.append(""FROM cczq "");
            sbSql.append(""LEFT JOIN TGCORE.MONZQ ON zqdate = ? and zqmket = GZMKET and zqcode = GZZQDM "");
            sbSql.append(""and zqstat = 'A' and ZQSYFW='P' "");
        }
        params = new Object[]{busDate, prdCode, subjectPrdType, chDate};

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), params, new RowMapper<BondGlfEntity>() {
                @Override
                public BondGlfEntity mapRow(ResultSet rs, int rowNum) throws Exception {
                    BondGlfEntity res = new BondGlfEntity();
                    // 该属性临时存放标的类型
                    res.setZqKey(""债券"");
                    res.setGzDate(rs.getDate(""GZDATE""));
                    res.setGzCpdm(rs.getString(""GZCPDM""));
                    res.setGzMket(rs.getString(""GZMKET""));
                    res.setGzZqdm(rs.getString(""GZZQDM""));
                    res.setGzCbze(rs.getBigDecimal(""GZCBZE""));
                    res.setGzSzze(rs.getBigDecimal(""GZSZZE""));
                    res.setZqName(rs.getString(""ZQNAME""));
                    res.setZqFxrn(rs.getString(""ZQFXRN""));
                    return res;
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓债券失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\RelatedPartiesDao.java,getHoldFunds,148,"    public List<BondGlfEntity> getHoldFunds(Date busDate, Date chDate, String prdCode, String subjectPrdType, String prdType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        Object[] params;
        if (ZbConstants.CPLX_BX.equals(prdType) || ZbConstants.CPLX_QD.equals(prdType)) {
            sbSql.append(""with gz as ( "");
            sbSql.append(""select BIZDATE GZDATE, PRDCODE GZCPDM, KMMKET GZMKET, SECCODE GZZQDM, SUM(STADCOST) GZCBZE, SUM(STADVAL) GZSZZE "");
            sbSql.append(""from tgcore.evaluation, tgcore.monkm "");
            sbSql.append(""where BIZDATE=? and PRDCODE=? and kmcplx=? and coacode=kmcode "");
            sbSql.append(""AND KMZQLX in ('JJ') and kmtype in ('CB') and ISFINAL='Y' and KMZQLS <> 'FZ' and KMKMBZ = 'CNY' and KMBZXX <> 'OVERSEA' "");
            sbSql.append(""GROUP BY BIZDATE, PRDCODE, KMMKET, SECCODE), "");
            sbSql.append(""jjResult AS ( "");
            sbSql.append(""select gz.*, NVL(JJNAME,' ') AS JJNAME, "");
            sbSql.append(""NVL(JJGLRN, ' ') AS JJGLRN "");
            sbSql.append(""FROM gz "");
            sbSql.append(""LEFT JOIN TGCORE.MONJJ ON jjdate = ? and jjmket = GZMKET and jjcode = GZZQDM  "");
            sbSql.append("") "");
            sbSql.append(""SELECT * FROM jjResult "");

        } else {
            sbSql.append(""WITH ccjj as( "");
            sbSql.append(""select GZDATE, GZCPDM, KMMKET AS GZMKET, GZZQDM, SUM(GZCBZE) AS GZCBZE, SUM(GZSZZE) AS GZSZZE "");
            sbSql.append(""from TGCORE.EVLGZ,TGCORE.MONKM "");
            sbSql.append(""where GZDATE=? and GZCPDM=? and KMCPLX=? and KMCODE=GZKMDM "");
            sbSql.append(""and KMZQLX in ('JJ') and KMTYPE in ('CB') and ISFINAL='Y' and KMZQLS <> 'FZ' "");
            sbSql.append(""GROUP BY GZDATE, GZCPDM, KMMKET, GZZQDM) "");
            sbSql.append(""select ccjj.*, NVL(JJNAME,' ') JJNAME, "");
            sbSql.append(""NVL(JJGLRN,' ') JJGLRN "");
            sbSql.append(""FROM ccjj "");
            sbSql.append(""LEFT JOIN TGCORE.MONJJ ON jjdate = ? and jjmket = GZMKET and jjcode = GZZQDM "");
        }
        params = new Object[]{busDate, prdCode, subjectPrdType, chDate};

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), params, new RowMapper<BondGlfEntity>() {
                @Override
                public BondGlfEntity mapRow(ResultSet rs, int rowNum) throws Exception {
                    BondGlfEntity res = new BondGlfEntity();
                    // 该属性临时存放标的类型
                    res.setZqKey(""基金"");
                    res.setGzDate(rs.getDate(""GZDATE""));
                    res.setGzCpdm(rs.getString(""GZCPDM""));
                    res.setGzMket(rs.getString(""GZMKET""));
                    res.setGzZqdm(rs.getString(""GZZQDM""));
                    res.setGzCbze(rs.getBigDecimal(""GZCBZE""));
                    res.setGzSzze(rs.getBigDecimal(""GZSZZE""));
                    // 基金名称，暂存债券名称字段
                    res.setZqName(rs.getString(""JJNAME""));
                    res.setZqFxrn(rs.getString(""JJGLRN""));
                    return res;
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓基金失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\dao\RelatedPartiesDao.java,getHoldStocks,215,"    public List<BondGlfEntity> getHoldStocks(Date busDate, Date chDate, String prdCode, String subjectPrdType, String prdType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        Object[] params;
        if (ZbConstants.CPLX_BX.equals(prdType) || ZbConstants.CPLX_QD.equals(prdType)) {
            sbSql.append(""with gz as ( "");
            sbSql.append(""select BIZDATE GZDATE, PRDCODE GZCPDM, SECCODE GZZQDM, SUM(STADCOST) GZCBZE, SUM(STADVAL) GZSZZE, "");
            sbSql.append(""CASE KMCPLX WHEN 'BX' THEN (CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END AS GZMKET "");
            sbSql.append(""from tgcore.evaluation,tgcore.monkm "");
            sbSql.append(""where BIZDATE=? and PRDCODE=? and kmcplx=? and coacode=kmcode "");
            sbSql.append(""AND KMZQLX in ('GP') and kmtype in ('CB') and ISFINAL='Y' and KMZQLS <> 'FZ' and KMKMBZ = 'CNY' and KMBZXX <> 'OVERSEA' "");
            sbSql.append(
                    ""GROUP BY BIZDATE, PRDCODE, CASE KMCPLX WHEN 'BX' THEN (CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END, SECCODE), "");
            sbSql.append(""GpResult AS ( "");
            sbSql.append(""select gz.*, NVL(GPNAME,' ') AS GPNAME, "");
            sbSql.append(""NVL(GPQFXR, ' ') AS GPQFXR "");
            sbSql.append(""FROM gz "");
            sbSql.append(""LEFT JOIN TGCORE.mongp ON GPDATE = ? and GPMKET = GZMKET and GPCODE = GZZQDM  "");
            sbSql.append("") "");
            sbSql.append(""SELECT * FROM GpResult "");

        } else {
            sbSql.append(""WITH ccgp as( "");
            sbSql.append(""select GZDATE, GZCPDM, KMMKET AS GZMKET, GZZQDM, SUM(GZCBZE) AS GZCBZE, SUM(GZSZZE) AS GZSZZE "");
            sbSql.append(""from TGCORE.EVLGZ,TGCORE.MONKM "");
            sbSql.append(""where GZDATE=? and GZCPDM=? and KMCPLX=? and KMCODE=GZKMDM "");
            sbSql.append(""and KMZQLX in ('GP') and KMTYPE in ('CB') and ISFINAL='Y' and KMZQLS <> 'FZ' "");
            sbSql.append(""GROUP BY GZDATE, GZCPDM, KMMKET, GZZQDM) "");
            sbSql.append(""select ccgp.*, NVL(GPNAME,' ') GPNAME, "");
            sbSql.append(""NVL(GPQFXR,' ') GPQFXR "");
            sbSql.append(""FROM ccgp "");
            sbSql.append(""LEFT JOIN TGCORE.mongp ON GPDATE = ? and GPMKET = GZMKET and GPCODE = GZZQDM "");
        }
        params = new Object[]{busDate, prdCode, subjectPrdType, chDate};

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), params, new RowMapper<BondGlfEntity>() {
                @Override
                public BondGlfEntity mapRow(ResultSet rs, int rowNum) throws Exception {
                    BondGlfEntity res = new BondGlfEntity();
                    // 该属性临时存放标的类型
                    res.setZqKey(""股票"");
                    res.setGzDate(rs.getDate(""GZDATE""));
                    res.setGzCpdm(rs.getString(""GZCPDM""));
                    res.setGzMket(rs.getString(""GZMKET""));
                    res.setGzZqdm(rs.getString(""GZZQDM""));
                    res.setGzCbze(rs.getBigDecimal(""GZCBZE""));
                    res.setGzSzze(rs.getBigDecimal(""GZSZZE""));
                    res.setZqName(rs.getString(""GPNAME""));
                    res.setZqFxrn(rs.getString(""GPQFXR""));
                    return res;
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓股票失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\model\JJTZSXZC.java,getGptpgpSql,96,"    public static String getGptpgpSql(String tableSubfix, String tpgp) {
        StringBuilder sbSql = new StringBuilder();
        //股票信息
        sbSql.append("" gpxx"").append(tableSubfix).append("" as ( "");
        sbSql.append("" select GPMKET as MKET, GPCODE as ZQDM from tgcore.MONGP where GPDATE=? and GPTPGP='"").append(tpgp).append(""' "");
        sbSql.append("" ), "");
        //估值表股票信息
        sbSql.append("" gzgp"").append(tableSubfix).append("" as ( "");
        sbSql.append("" select KMZQLS,SECTYPE3,KMMKET GZMKET,GZZHDM,GZZQDM,GZSZZE,GZGZSL,GZZHMC "" +
                ""from tgcore.EVLGZ,TGCORE.MONKM where GZKMDM=KMCODE and GZCPDM=? and GZDATE=? and KMCPLX=? and KMTYPE='CB' and KMZQLX='GP' ""
                + ""and KMZQLS<>'KTTD' and ISFINAL='Y'"");
        sbSql.append("" ), "");
        //非公开发行股票
        sbSql.append("" fgkgp"").append(tableSubfix).append("" as ( "");
        sbSql.append("" select GZZHDM as ZHDM,GZZQDM as ZQDM,GZSZZE as SZ,GZGZSL as SL,GZMKET,GZZHMC from gzgp"").append(tableSubfix).append("" "");
        sbSql.append("" where KMZQLS in ('DXZF','LTSX') "");
        sbSql.append("" ), "");
        //新股
        sbSql.append("" xg"").append(tableSubfix).append("" as ( "");
        sbSql.append("" select GZZHDM as ZHDM,GZZQDM as ZQDM,GZMKET,GZZHMC from gzgp"").append(tableSubfix).append("" "");
        sbSql.append("" where KMZQLS = 'XG' "");
        sbSql.append("" ), "");
        //流通受限的转融通
        sbSql.append("" refin"").append(tableSubfix).append("" as ( "");
        sbSql.append(""     select GZZHDM as ZHDM,GZZQDM as ZQDM,GZSZZE as SZ,GZGZSL as SL,GZMKET,GZZHMC from gzgp"").append(tableSubfix);
        sbSql.append(""     where KMZQLS='ZRT' and SECTYPE3='LTSX'),"");
        //停牌股票
        sbSql.append("" tpgp"").append(tableSubfix).append("" as ( "");
        sbSql.append("" select GZZHDM as ZHDM, GZZQDM as ZQDM,GZSZZE as SZ,GZGZSL as SL,GZMKET,GZZHMC from gzgp"").append(tableSubfix).append("" "");
        sbSql.append("" where not exists (select 1 from fgkgp"").append(tableSubfix).append("" where GZZHDM=ZHDM) "");
        sbSql.append("" and not exists (select 1 from xg"").append(tableSubfix).append("" where GZZHDM=ZHDM) "");
        //除去流通受限的转融通
        sbSql.append("" and not exists (select 1 from refin"").append(tableSubfix).append("" where GZZHDM=ZHDM) "");
        sbSql.append("" and exists (select 1 from gpxx"").append(tableSubfix).append("" where GZMKET=MKET and GZZQDM=ZQDM) "");
        sbSql.append("" ) "");

        return sbSql.toString();
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\model\JTXTJJJlQTJJ.java,getHoldStock,245,"    public List<FundEntity> getHoldStock(String prdCode, Date busDate, String subjectPrdType) throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        sbSql.append("" WITH kmgz AS ( "");
        sbSql.append("" select DISTINCT KMMKET AS GZMKET, GZZQDM, GZDATE from TGCORE.EVLGZ,TGCORE.MONKM "");
        sbSql.append("" where GZCPDM=? and GZDATE=? and KMCPLX=? and KMCODE=GZKMDM and KMZQLX = 'JJ' and ISFINAL='Y' and KMTYPE='CB' and KMZQLS<>'FZ' "");
        sbSql.append("" ), "");
        sbSql.append("" chjj AS ( "");
        sbSql.append("" select JJDATE, JJMKET, JJCODE, JJNAME, JJGLRN, JJTYPE, JJJL "");
        sbSql.append("" from TGCORE.MONJJ WHERE JJDATE = ? "");
        sbSql.append("" ) "");
        sbSql.append("" SELECT JJDATE, JJMKET, JJCODE, JJNAME, JJGLRN,JJTYPE, JJJL FROM chjj,kmgz "");
        sbSql.append("" WHERE chjj.JJDATE = kmgz.GZDATE AND chjj.JJMKET = kmgz.GZMKET AND chjj.JJCODE = kmgz.GZZQDM "");
        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), new Object[]{prdCode, busDate, subjectPrdType, busDate}, new RowMapper<FundEntity>() {
                @Override
                public FundEntity mapRow(ResultSet rs, int rowNum) throws Exception {
                    FundEntity res = new FundEntity();
                    res.setJjdate(rs.getDate(""JJDATE""));
                    res.setJjmket(rs.getString(""JJMKET""));
                    res.setJjcode(rs.getString(""JJCODE""));
                    res.setJjname(rs.getString(""JJNAME""));
                    res.setJjglrn(rs.getString(""JJGLRN""));
                    res.setJjtype(rs.getString(""JJTYPE""));
                    res.setJjjl(rs.getString(""JJJL""));
                    return res;
                }
            });
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓证券失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\index\complexity\model\ZYYXJXT.java,listholdstockinzyyxjxt,144,"    public List<Map<String, Object>> listholdstockinzyyxjxt(String prdCode, Date busDate, String subjectPrdType)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sbSql = new StringBuilder();
        sbSql.append("" WITH kmgz AS ( "");
        sbSql.append("" select DISTINCT KMMKET AS GZMKET, GZZQDM, GZDATE from TGCORE.EVLGZ,TGCORE.MONKM "");
        sbSql.append("" where GZCPDM = ? AND  GZDATE = ? and KMCPLX=? "");
        sbSql.append("" and KMCODE=GZKMDM and KMZQLX = 'GP' and ISFINAL='Y' and KMTYPE='CB' and KMZQLS<>'FZ' ), "");
        sbSql.append("" ccgp as( "");
        sbSql.append("" SELECT GPDATE, GPMKET, GPCODE, GPNAME FROM TGCORE.MONGP,kmgz  "");
        sbSql.append("" WHERE GPDATE = kmgz.GZDATE AND GPMKET = kmgz.GZMKET AND GPCODE = kmgz.GZZQDM ), "");
        sbSql.append("" zyyx as( "");
        sbSql.append("" SELECT GPCODE,GPMKET,GPNAME,TRADEDATE from TGCORE.MON_ZYYXJXT  "");
        sbSql.append("" where BUSDATE = ? and SECUTYPE = 'A股' ) "");
        sbSql.append("" SELECT ccgp.GPDATE, ccgp.GPMKET, ccgp.GPCODE, ccgp.GPNAME,zyyx.TRADEDATE "");
        sbSql.append("" FROM ccgp  "");
        sbSql.append("" LEFT JOIN TGCORE.MON_ZYYXJXT zyyx"");
        sbSql.append("" ON ccgp.GPDATE = zyyx.BUSDATE AND ccgp.GPCODE = zyyx.GPCODE AND ccgp.GPMKET = zyyx.GPMKET AND zyyx.SECUTYPE = 'A股' "");
        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            return jdbc.queryForList(sbSql.toString(), prdCode, busDate, subjectPrdType, busDate);
        } catch (Exception e) {
            throw new MonitorSystException(""获取持仓的股票信息失败"", e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\metric\dao\AccountGetterPublicUtil.java,getGzbAndKmInfoOfProductPlayer,16,"    public static String getGzbAndKmInfoOfProductPlayer() {
        StringBuilder sb = new StringBuilder(256);
        return sb.append(""SELECT  GZZQDM ,KMMKET ,sum(gzszze) AS gzszze,sum(gzcbze) AS gzcbze ,""
                + ""sum(gzgzsl) AS gzgzsl , sum(gzszbl) AS gzszbl ,sum(gzcbbl) AS gzcbbl from ""
                + ""( select distinct GZZHDM,GZZQDM,gzszze,gzcbze,gzgzsl,gzcbbl,gzszbl,KMMKET,KMCPLX,GZKMDM ""
                + "" from TGCORE.EVLGZ,TGCORE.MONKM""
                + "" where GZCPDM=? ""
                + ""  and GZDATE=? ""
                + ""  and "").append(getEvlgzAndKmJoinCondition()).append("" ) GROUP BY GZZQDM ,kmmket "").toString();
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\apimetric\impl\BXJJTZWJZCBL.java,addHqck,121,"    public void addHqck(String prdCode, Date gzDate) {
        sql.append("" select '"");
        sql.append(prdCode);
        sql.append(""' as CPDM, GZSZZE as JE, 0 as SYQX,'EVLGZ' as SJLY from TGCORE.EVLGZ "");
        sql.append("" where GZCPDM= ? and GZDATE=? and GZZHDM = '100201' "");

        args.add(prdCode);
        args.add(gzDate);
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\apimetric\impl\BXJJTZWJZCBL.java,addBond,198,"    public void addBond(String prdCode, Date gzDate, Date chDate, Date endDate) {
        sql.append("" select '"");
        sql.append(prdCode);
        sql.append(""' as CPDM, JE,NVL(SYQX,0) SYQX,'MONZQ' as SJLY,GZZQDM as ZQDM,GZMKET as MKET,ZQCODE as MZQDM,JB,ZQZQLB as ZQLB from ( "");
        sql.append("" select (case substr(GZZHDM,5,1) when '1' then 'H' "");
        sql.append("" when '3' then 'S' else 'Y' end) as GZMKET,GZZQDM,GZSZZE JE "");
        sql.append("" from TGCORE.EVLGZ where GZCPDM=? and GZDATE=? "");
        sql.append("" and (GZZHDM like '1103__01_%' or GZZHDM like  '1104__01_%') and GZZQDM<>' ' "");
        sql.append("" )  GZZQ "");
        sql.append("" left join ( "");
        sql.append("" select ZQZQLB,ZQCODE,ZQMKET, "");
        sql.append("" case ZQZQLB when 'YP' then ZQENDD + INTERVAL '1' DAY when 'TYDC' then ZQENDD + INTERVAL '1' DAY "");
        sql.append("" else "");
        sql.append(""    case when ZQQLTK like '%C%' and ZQLLTZ <> '1900-01-01' "");
        sql.append(""       then ZQLLTZ "");
        sql.append(""       else   ZQSYQX  + TO_DATE('"" + chDate.toString() + ""'),'yyyy-mm-dd')  "");
        sql.append(""    end "");
        sql.append("" end as JZR, "");
        sql.append("" case ZQZQLB when 'YP' then ZQENDD-to_date('"" + chDate + ""','yyyy-mm-dd') +1 when 'TYDC' then ZQENDD-to_date('"" + chDate + ""','yyyy-mm-dd') +1 else "");
        sql.append(""    case when ZQQLTK like '%C%' and ZQLLTZ <> '1900-01-01' "");
        sql.append(""       then ZQLLTZ-to_date('"" + chDate + ""','yyyy-mm-dd') "");
        sql.append(""       else ZQSYQX "");
        sql.append(""    end "");
        sql.append("" end as SYQX, "");
        sql.append("" case ZQZQLB when 'ZCZQ' then NVL(ZQPJJB,' ') else NVL(ZQPJSD,' ') end as JB "");
        sql.append("" from tgcore.MONZQ where ZQDATE=? and ZQSYFW='P' and ZQSTAT='A' "");
        sql.append("" )  MZQ "");
        sql.append("" on GZMKET=ZQMKET and GZZQDM=ZQCODE "");
        sql.append("" where JZR <= ? and (ZQZQLB in ('YP','TYDC','GZ','DFZ','ZCJR') or (ZQZQLB not in ('KZZ', 'JHGS') and JB in ('AAA','AAA+'))) or ZQCODE is null "");

        args.add(prdCode);
        args.add(gzDate);
        args.add(chDate);
        args.add(endDate);
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\apimetric\impl\PJSYQX.java,addZj,76,"    private void addZj(String prdCode, PrdEntity prd, Date evlDate) {
        sql.append(""select GZCPDM as cpdm, CAST('ZJ' as varchar2(4)) as TYPE, GZZHDM as CODE, ' ' as MARKET, sum(GZCBZE) JE, cast(0 as NUMBER) as SYTS from TGCORE.EVLGZ,TGCORE.MONKM "");
        sql.append(""where GZCPDM=? and GZDATE=? and GZZHDM=KMCODE and KMCPLX = ? AND ((KMZQLX IN ('BFJ','BZJ') AND KMZCLEVL = '1') OR (KMZQLX = 'CK' AND KMZQLS = 'HQ' AND KMTYPE = 'CB' and ISFINAL = 'Y')) "");
        sql.append(""group by GZZHDM,GZCPDM "");
        args.add(prdCode);
        args.add(evlDate);
        args.add(subjectConfig.getSubjectType(prd, evlDate));
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\apimetric\impl\PJSYQX.java,addQsk,94,"    private void addQsk(String prdCode, PrdEntity prd, Date evlDate) {
        sql.append(""select GZCPDM as CPDM, CAST('QSK' as varchar2(4)) as TYPE, GZZHDM as CODE,' ' as MARKET, sum(GZCBZE) JE, cast(1 as NUMBER) as SYTS  from TGCORE.EVLGZ,TGCORE.MONKM "");
        sql.append(""where GZCPDM=? and GZDATE=? and GZZHDM=KMCODE and KMCPLX = ? AND KMZQLX = 'QSK' AND KMZCLEVL = '1' "");
        sql.append(""group by GZZHDM,GZCPDM "");
        args.add(prdCode);
        args.add(evlDate);
        args.add(subjectConfig.getSubjectType(prd, evlDate));
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\apimetric\impl\PJSYQX.java,addZq,103,"    private void addZq(String prdCode, Date evlDate, Date chDate) {
        sql.append(""select GZCPDM as CPDM, CAST('ZQ' as varchar2(4)) as TYPE,GZZQDM as CODE,KMMKET as MARKET,JE, ZQSYQX as SYTS from  "");
        sql.append(""(select GZCPDM,KMMKET, GZZQDM, sum(GZCBZE) JE "");
        sql.append(""from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=? and GZDATE=? "");
        sql.append(""and GZKMDM=KMCODE and KMCPLX='TY' and KMZQLX='ZQ' and KMTYPE='CB' and KMZQLS<>'FZ' "");
        sql.append(""group by KMMKET,GZZQDM,GZCPDM ) A inner join TGCORE.MONZQ  on ZQCODE=GZZQDM and ZQMKET=KMMKET  where ZQDATE=? and ZQSYFW='P'"");
        args.add(prdCode);
        args.add(evlDate);
        args.add(chDate);
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\apimetric\impl\XGYZQBL.java,gqCbsz,43,"    public List<Map<String, Object>> gqCbsz(MonObject monObject, DateParam dateParam) throws MonitorBussException, MonitorSystException {
        String kmcplx = subjectConfig.getSubjectType(monObject.getPrdEntity(), dateParam.getMonDate());

        CalendarUtil calUtil = new CalendarUtil();
        String cpdm = monObject.getValue();
        Date monDate = dateParam.getMonDate();
        Date jyrdq = CalendarUtil.addJysDate(dateParam.getMonDate(), 5, """");
        Date yhjdq = CalendarUtil.addYhjDate(dateParam.getMonDate(), 5, """");
        StringBuilder sbSql = new StringBuilder(1024);
        //现金
        sbSql.append(""with XJ as (select sum(GZCBZE) CB, sum(GZSZZE) SZ "");
        sbSql.append(""from TGCORE.EVLGZ where GZCPDM=? and GZDATE=? and GZZHDM='100201'),"");

        //国债、央票、政策性金融债以及五个交易日内到期的债券
        sbSql.append(""CYZQ as (select  kmmket as gzmket "");
        sbSql.append("",GZZQDM,GZCBZE,GZSZZE from TGCORE.EVLGZ ,tgcore.monkm "");
        sbSql.append(""where GZCPDM=? and GZDATE=? and "");
        sbSql.append("" kmzqlx in ('ZQ','ZCZQ') and KMTYPE='CB' and ISFINAL='Y' and kmcplx = ? and kmcode=gzkmdm),"");
        sbSql.append(""GZYPJR as ( "");
        sbSql.append(""select sum(GZCBZE) CB,sum(GZSZZE) SZ from CYZQ join TGCORE.MONZQ  "");
        sbSql.append(""on ZQDATE=? and GZMKET=ZQMKET and GZZQDM=ZQCODE and ZQSYFW='P' "");
        sbSql.append(""and (ZQZQLB in ('GZ','YP','ZCJR') or (ZQZQLB not in ('GZ','YP','ZCJR') and ZQENDD>=?  and ((zqmket ='Y' and  ZQENDD<? ) or (zqmket!='Y'  and ZQENDD<? ) )))),"");

        //交易所回购     'FBDQ'质押回购到期 QSDATE为回购截止日，截止日小于五个交易日（包含），并且截止日应大于业务日期
        sbSql.append(""GZJYS as ( "");
        sbSql.append(""select sum(QSCJJE) CB,sum(QSCJJE) SZ from TGCORE.JYSQS where QSYWBZ ='FBDQ' and QSMMBZ='B' "");
        sbSql.append(""and QSCRTD <=?  and QSDATE>? and QSDATE <=? and QSCPDM=?), "");

        //银行间回购    HGENDD为截止日
        sbSql.append(""GZYHJ as "");
        sbSql.append(""(select sum(HGCJJE)+sum(HGFSXF)+sum(HGFGHF) CB,sum(HGCJJE)+sum(HGFSXF)+sum(HGFGHF) SZ from TGCORE.YHJHG where "");
        sbSql.append(""HGDATE <=? and HGENDD>? and HGENDD <=? and HGCPDM =? AND HGSTAT ='A' and HGHGFX='B' ), "");

        //定期存款
        sbSql.append(""DQ as( "");
        sbSql.append(""select DQDQJE,DQCJBH,DQCKYH from TGCORE.EVLDQ where DQCPDM =? AND DQSTRD<=? and DQENDD>? and DQENDD<=? and DQSTAT='A' ), "");
        sbSql.append(""TQDF AS ( "");
        sbSql.append(""SELECT * FROM ( "");
        sbSql.append("" SELECT DQSYBJ,TQCJBH,row_number() over (PARTITION BY TQCJBH order by TQDFRQ desc) rn FROM TGCORE.EVLTQ "");
        sbSql.append(""WHERE TQCPDM=? and TQDFRQ <= ? AND TQSTAT='A')tq WHERE tq.rn <=1 ), "");
        sbSql.append(""DQJE as(select sum(nvl(DQSYBJ, DQDQJE))CB from DQ left join TQDF on DQCJBH = TQCJBH) ,"");

        //交易所协议回购
        //先取出业务标识为到期未清算的逆回购的信息，然后根据成交编号找到对应的首期或者延期数据，然后用成交金额+利息作为金额
        sbSql.append(""hglq as "");
        sbSql.append("" (  select nvl(sum(qsqtje),0) as zyhgje  from tgcore.jysqtqs where  "");
        sbSql.append("" qscpdm = ? and qsywbz = 'ZQLQ' and qsmmbz = 'S' and  qscrtd <= ? and qsdate > ? and qsdate <=? and qsstat = 'A' "");
        sbSql.append("")"");


        //总和
        sbSql.append("" select '"").append(cpdm).append(""' GZCPDM, "");
        sbSql.append(""(nvl(XJ.CB,0)+ nvl(GZYPJR.CB,0)+nvl(GZJYS.CB,0)+nvl(GZYHJ.CB,0)+nvl(DQJE.CB,0) + nvl(zyhgje ,0)) GZCBZE, "");
        sbSql.append("" (nvl(XJ.SZ,0)+ nvl(GZYPJR.SZ,0)+nvl(GZJYS.SZ,0)+nvl(GZYHJ.SZ,0)+nvl(DQJE.CB,0) + nvl(zyhgje ,0) ) GZSZZE "");
        sbSql.append("" from XJ, GZYPJR,GZJYS,GZYHJ,DQJE ,hglq "");

        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        Object[] orgs = new Object[]{cpdm, monDate,                    //现金
                cpdm, monDate, kmcplx, monDate, monDate, yhjdq, jyrdq,           //国债、央票、政策性金融债以及五个交易日内到期的债券
                monDate, monDate, jyrdq, cpdm,                        // 交易所回购
                monDate, monDate, yhjdq, cpdm,                        //银行间回购
                cpdm, monDate, monDate, yhjdq, cpdm, monDate,//定期存款
                //交易所协议回购
                cpdm, monDate, monDate, jyrdq};

        try {
            return jdbc.queryForList(sbSql.toString(), orgs);
        } catch (Exception e) {
            throw new MonitorSystException(e.getMessage(), e);
        }
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\impl\HoldPositionSqlDataBuilder.java,query,249,"    List<Map<String, Object>> query(MetricDefinition metric, MetricDefinition dependMetric, SqlArg sqlArgUtil,
                                    final DateParam dateParam, final MonObject monObject)
            throws MonitorBussException, MonitorSystException {
        StringBuilder sb = sqlArgUtil.getSql();
        sb.append("" select "").append(getOutput(metric)).append("" from "").append(sqlArgUtil.getTableName());


        String condition = getCondition(dependMetric, dateParam, monObject);

        if (!StringUtil.isNullOrEmpty(condition)) {
            sb.append("" where "").append(condition.replace(""''"", ""' '""));
        }
        if (!StringUtil.isNullOrEmpty(sqlArgUtil.getWhitListSql())) {
            if (!StringUtil.isNullOrEmpty(condition)) {
                sb.append("" and "");
            } else {
                sb.append("" where "");
            }
            sb.append(sqlArgUtil.getWhitListSql());
        }

        String sql = sb.toString();
        if (isPenetrate()) {
            sql = sql.replaceAll(""(?i)TGCORE.EVLGZ"", ""TGCORE.MON_EVALUATION_PENETRATE "");
        }
        if (sql.toUpperCase().contains(""TGCORE.MON_EVALUATION_PENETRATE "")) {
            sql = sql.replaceAll(""(?i)TGCORE.MON_EVALUATION_PENETRATE "",
                    ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", dateParam.getEvlDate()) + "" "");
        }
        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();

        List<Map<String, Object>> result;
        try {
            result = jdbc.queryForList(sql, sqlArgUtil.getArgs());
        } catch (Exception e) {
            throw new MonitorSystException(e.getMessage() + sql, e);
        }
        return result;
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\impl\PrdSqlDataBuilder.java,getTableName,223,"    private String getTableName(boolean isUseEvaluation, final DateParam dateParam) {
        String tableName;
        if (isUseEvaluation) {
            tableName = ""TGCORE.EVALUATION"";
        } else if (isPenetrate()) {
            tableName = ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", dateParam.getEvlDate());
        } else {
            tableName = ""TGCORE.EVLGZ"";
        }
        return tableName;
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\impl\PrdSqlDataBuilder.java,sql4EvlgzPrdUnion,267,"    private void sql4EvlgzPrdUnion(List<SubjectEntryPo> subjectEntryList, MonObject monObject, StringBuilder sql) {
        sql.append(""with"").append("" jrgz as ("").append("" select "")
                .append(getProductValuationSql(""jr"", subjectEntryList, false))
                .append("" , ? as GZCPDM , gzdate from TGCORE.EVLGZ, TGCORE.MON_BAILOR_PRD_SUBJECT"" +
                        "" where GZDATE = ? and GZCPDM = PRD_CODE and BUSDATE = ? and BAILOR = '"" + monObject.getPrdUnion()
                        + ""' and MONOBJECT_TYPE = 'P' and MONOBJECT = ? group by gzdate "")
                .append("" union all "")
                .append(""select "")
                .append(getProductValuationSql(""jr"", subjectEntryList, true))
                .append("" , ? as GZCPDM, BIZDATE as gzdate from TGCORE.EVALUATION, TGCORE.MON_BAILOR_PRD_SUBJECT"" +
                        "" where BIZDATE = ? and PRDCODE = PRD_CODE and BUSDATE = ? and BAILOR = '"" + monObject.getPrdUnion()
                        + ""' and MONOBJECT_TYPE = 'P' and MONOBJECT = ? group by BIZDATE), "");
        sql.append("" srgz as ("").append("" select  "")
                .append(getProductValuationSql(""sr"", subjectEntryList, false))
                .append("" , ? as srcpdm from TGCORE.EVLGZ, TGCORE.MON_BAILOR_PRD_SUBJECT where GZDATE = ? and "" +
                        ""GZCPDM = PRD_CODE and BUSDATE = ? and BAILOR = '"" + monObject.getPrdUnion()
                        + ""' and MONOBJECT_TYPE = 'P' and MONOBJECT = ? group by gzdate "")
                .append(""union all "")
                .append(""select "")
                .append(getProductValuationSql(""sr"", subjectEntryList, true))
                .append("" , ? as srcpdm from TGCORE.EVALUATION, TGCORE.MON_BAILOR_PRD_SUBJECT where BIZDATE = ? and "" +
                        ""PRDCODE = PRD_CODE and BUSDATE = ? and BAILOR = '"" + monObject.getPrdUnion()
                        + ""' and MONOBJECT_TYPE = 'P' and MONOBJECT = ? group by BIZDATE), "");
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\impl\PrdSqlDataBuilder.java,sql4EvlgzPlan,300,"    private void sql4EvlgzPlan(List<SubjectEntryPo> subjectEntryList, MonObject monObject, StringBuilder sql) {
        sql.append(""with"").append("" jrgz as ("").append("" select "")
                .append(getProductValuationSql(""jr"", subjectEntryList, false))
                .append("" , ? as GZCPDM , gzdate from TGCORE.EVLGZ, TGCORE.MON_BAILOR_PRD_SUBJECT""
                        + "" where GZDATE = ? and GZCPDM = PRD_CODE and BUSDATE = ? and BAILOR = ? ""
                        + ""and MONOBJECT_TYPE = 'J' group by gzdate), "");
        sql.append("" srgz as ("").append("" select  "")
                .append(getProductValuationSql(""sr"", subjectEntryList, false))
                .append("" , ? as srcpdm from TGCORE.EVLGZ, TGCORE.MON_BAILOR_PRD_SUBJECT where GZDATE = ? and "" +
                        ""GZCPDM = PRD_CODE and BUSDATE = ? and BAILOR = ? and MONOBJECT_TYPE = 'J' group by gzdate), "");
    }"
src\main\java\cmb\custody\monitor\domain\metric\model\impl\PrePrdSqlDataBuilder.java,jrgzandsrgz4Ty,195,"    private String jrgzandsrgz4Ty(final List<SubjectEntryPo> subjectEntryList, final MonObject monObject) {
        String gz = "" from TGCORE.EVLGZ where gzdate = ?  "";
        StringBuilder sb = new StringBuilder();
        sb.append("" jrgzwithout as ("").append("" select "")
                .append(getProductWithoutZcze(""jr"", subjectEntryList))
                .append("" ,NVL(GZCPDM,' ') as GZCPDM , gzdate"").append(gz).append(obtainPrd(monObject))
                .append("" group by GZCPDM ,gzdate),"");
        sb.append("" jrgzwith as ("").append("" select "")
                .append(getProductWithZcze(""jr"", subjectEntryList))
                .append("" ,NVL(GZCPDM,' ') as GZCPDM , gzdate"").append(gz).append(obtainPrd(monObject))
                .append("" group by GZCPDM ,gzdate),"");
        sb.append(JRGZ);
        sb.append("" srgz as ("").append("" select  "")
                .append(getProductValuationSql(""sr"", subjectEntryList))
                .append("" , GZCPDM as  srcpdm  "").append(gz).append(obtainPrd(monObject))
                .append("" group by GZCPDM ,gzdate ), "");
        return sb.toString();
    }"
src\main\java\cmb\custody\monitor\domain\metric\subject\SubJectconfigApiImp.java,sql4Evlgz,180,"    private void sql4Evlgz(boolean isUseEvaluation, StringBuilder sql) {
        sql.append("" glrcpcc as (select PRDCODE as GZCPDM,BIZDATE as GZDATE,ACCCODE as GZZHDM,SECCODE as GZZQDM,ACCNAME as gzzhmc,"" +
                ""STADVAL as gzszze,STADCOST as gzcbze,EVLQTY as gzgzsl,COSTRATIO as gzcbbl,VALRATIO as gzszbl ,KMZQLX,kmzqls,"" +
                ""SECTYPE3,KMMKET,KMCPLX,COACODE as GZKMDM,CPCPLX,UNITCOST as GZDWCB,EVLPRICE as GZGZJG,STADVAD as GZGZZZ,"" +
                ""VADRATIO as GZZZBL,EVLMODE as GZGZFF,' ' as GZZZKM, ' ' as GZQYXX,REMARKS as GZBZXX,CPSCLS,KMKMBZ,KMBZXX, KMTZFL"");
        sql.append("" from TGCORE.EVALUATION gz,km ,CPKM  where PRDCODE=CPCODE and BIZDATE=? and COACODE=KMCODE and KMCPLX=SUBJECT_TYPE "");
        sql.append(""union all "");
        sql.append(""select GZCPDM,GZDATE,GZZHDM,GZZQDM,gzzhmc,gzszze,case KMTYPE when 'JZZB01' then 0 when 'JZZB02' "" +
                ""then 0 when 'JZZB03' then 0 else GZCBZE end GZCBZE,gzgzsl,case KMTYPE when 'JZZB01' then 0 when 'JZZB02' "" +
                ""then 0 when 'JZZB03' then 0 else GZCBBL end GZCBBL,gzszbl ,KMZQLX,kmzqls,SECTYPE3,KMMKET,KMCPLX,GZKMDM,"" +
                ""CPCPLX,GZDWCB,GZGZJG,  GZGZZZ, GZZZBL, GZGZFF, GZZZKM, to_char(GZQYXX) GZQYXX, GZBZXX,CPSCLS,KMKMBZ,KMBZXX, KMTZFL"");
        sql.append("" from TGCORE.EVLGZ gz,km ,CPKM  where GZCPDM=CPCODE and GZDATE=? and GZKMDM=KMCODE and KMCPLX=SUBJECT_TYPE), "");
        if (isUseEvaluation) {
            sql.append("" cpcc as (select PRDCODE as GZCPDM,BIZDATE as GZDATE,ACCCODE as GZZHDM,SECCODE as GZZQDM,ACCNAME as gzzhmc,"" +
                    ""STADVAL as gzszze,STADCOST GZCBZE,EVLQTY as gzgzsl,COSTRATIO as gzcbbl,VALRATIO as gzszbl ,KMZQLX,kmzqls,"" +
                    ""SECTYPE3,KMMKET,KMCPLX,COACODE as GZKMDM"");
            sql.append("" from TGCORE.EVALUATION,km  where PRDCODE=? and BIZDATE=? and COACODE=KMCODE), "");
        } else {
            sql.append("" cpcc as (select GZCPDM,GZDATE,GZZHDM,GZZQDM,gzzhmc,gzszze,case KMTYPE when 'JZZB01' then 0 when "" +
                    ""'JZZB02' then 0 when 'JZZB03' then 0 else GZCBZE end GZCBZE,gzgzsl,case KMTYPE when 'JZZB01' then 0 "" +
                    ""when 'JZZB02' then 0 when 'JZZB03' then 0 else GZCBBL end GZCBBL,gzszbl ,KMZQLX,kmzqls,SECTYPE3,KMMKET,"" +
                    ""KMCPLX,GZKMDM"");
            sql.append("" from TGCORE.EVLGZ,km  where GZCPDM=? and GZDATE=? and GZKMDM=KMCODE), "");
        }
    }"
src\main\java\cmb\custody\monitor\domain\metric\subject\SubJectconfigApiImp.java,sql4PrdUnion,217,"    private void sql4PrdUnion(StringBuilder sql) {
        sql.append("" prdunioncc as (select PRDCODE ,BIZDATE as GZDATE,ACCCODE as GZZHDM,SECCODE as GZZQDM,ACCNAME as gzzhmc,"" +
                ""STADVAL as gzszze,case KMTYPE when 'JZZB01' then 0 when 'JZZB02' then 0 when 'JZZB03' then 0 else STADCOST "" +
                ""END gzcbze,"" +
                ""EVLQTY as gzgzsl,case KMTYPE when 'JZZB01' then 0 when 'JZZB02' then 0 when 'JZZB03' then 0 else COSTRATIO "" +
                ""END GZCBBL,"" +
                ""VALRATIO as gzszbl ,KMZQLX,kmzqls,"" +
                ""SECTYPE3,KMMKET,KMCPLX,COACODE as GZKMDM,CPCPLX,UNITCOST as GZDWCB,EVLPRICE as GZGZJG,STADVAD as GZGZZZ,"" +
                ""VADRATIO as GZZZBL,EVLMODE as GZGZFF,' ' as GZZZKM, ' ' as GZQYXX,REMARKS as GZBZXX,CPSCLS, KMTYPE,KMKMBZ,KMBZXX, KMTZFL "" +
                ""from TGCORE.EVALUATION gz,km,PRDUNION where PRDCODE=CPCODE and BIZDATE=? and COACODE=KMCODE and KMCPLX=SUBJECT_TYPE "" +
                ""union all "" +
                ""select GZCPDM as PRDCODE, GZDATE, GZZHDM, GZZQDM, gzzhmc, gzszze,"" +
                ""case KMTYPE when 'JZZB01' then 0 when 'JZZB02' then 0 when 'JZZB03' then 0 else gzcbze END gzcbze, gzgzsl,"" +
                ""case KMTYPE when 'JZZB01' then 0 when 'JZZB02' then 0 when 'JZZB03' then 0 else GZCBBL END GZCBBL, gzszbl, "" +
                ""KMZQLX, kmzqls, SECTYPE3, KMMKET, KMCPLX, GZKMDM,CPCPLX, GZDWCB, GZGZJG, GZGZZZ, GZZZBL, GZGZFF, GZZZKM, "" +
                ""GZQYXX, GZBZXX, CPSCLS, KMTYPE, KMKMBZ, KMBZXX, KMTZFL from TGCORE.EVLGZ gz,km,PRDUNION where GZCPDM=CPCODE and GZDATE = ? "" +
                ""and GZKMDM = KMCODE and KMCPLX = SUBJECT_TYPE), "");
    }"
src\main\java\cmb\custody\monitor\domain\metric\subject\SubJectconfigApiImp.java,sql4Plan,236,"    private void sql4Plan(StringBuilder sql) {
        sql.append("" jhcpcc as (select GZCPDM as PRDCODE, GZDATE, GZZHDM, GZZQDM, gzzhmc, gzszze,"" +
                ""case KMTYPE when 'JZZB01' then 0 when 'JZZB02' then 0 when 'JZZB03' then 0 else gzcbze END gzcbze, gzgzsl,"" +
                ""case KMTYPE when 'JZZB01' then 0 when 'JZZB02' then 0 when 'JZZB03' then 0 else GZCBBL END GZCBBL, gzszbl,"" +
                ""KMZQLX, kmzqls, SECTYPE3, KMMKET, KMCPLX, GZKMDM,CPCPLX, GZDWCB, GZGZJG, GZGZZZ, GZZZBL, GZGZFF, GZZZKM,"" +
                ""GZQYXX, GZBZXX, CPSCLS, KMTYPE, KMKMBZ, KMBZXX, KMTZFL from TGCORE.EVLGZ gz,km,JHPRD where GZCPDM=CPCODE and GZDATE = ? "" +
                ""and GZKMDM = KMCODE and KMCPLX = SUBJECT_TYPE), "");
    }"
src\main\java\cmb\custody\monitor\domain\metric\subject\SubJectconfigApiImp.java,getTableName,245,"    private String getTableName(boolean isUseEvaluation, boolean isPenetrate, Date monDate) {
        String tableName;
        if (isUseEvaluation) {
            tableName = ""TGCORE.EVALUATION"";
        } else if (isPenetrate) {
            tableName = ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", monDate);
        } else {
            tableName = ""TGCORE.EVLGZ"";
        }
        return tableName;
    }"
src\main\java\cmb\custody\monitor\infrastructure\dao\initialization\IProductMetricDao.java,SQL_Fragment_Container_Unknown,34,"SQL Snippet: ""select GZDATE,GZCBZE from TGCORE.EVLGZ where GZCPDM=#{prdCode} ""
(Enclosing method details could not be fully determined.)"
src\main\java\cmb\custody\monitor\infrastructure\dao\initialization\IProductMetricDao.java,SQL_Fragment_Container_Unknown,46,"SQL Snippet: ""select avg(GZCBZE) as PJSY from TGCORE.EVLGZ where GZCPDM=#{prdCode} and GZDATE between #{startDate} and #{endDate} and GZZHDM='99990007004'""
(Enclosing method details could not be fully determined.)"
src\main\java\cmb\custody\monitor\infrastructure\dao\initialization\IProductMetricDao.java,SQL_Fragment_Container_Unknown,55,"SQL Snippet: ""select GZDATE,GZSZZE from TGCORE.EVLGZ where GZDATE between #{startDate} and #{endDate} and GZCPDM=#{prdCode} AND GZZHDM='99990004'""
(Enclosing method details could not be fully determined.)"
src\main\java\cmb\custody\monitor\infrastructure\dao\initialization\IProductMetricDao.java,SQL_Fragment_Container_Unknown,64,"SQL Snippet: ""select GZSZZE as ZRJZ from TGCORE.EVLGZ where GZCPDM=#{prdCode} and GZDATE<#{endDate} and GZDATE>#{startDate} and GZZHDM='99990004' order by GZCPDM,GZDATE DESC fetch first 1 rows only""
(Enclosing method details could not be fully determined.)"
src\main\java\cmb\custody\monitor\infrastructure\dao\initialization\IProductMetricDao.java,SQL_Fragment_Container_Unknown,67,"SQL Snippet: ""select sum(GZCBZE) as ZRFE from TGCORE.EVLGZ where GZDATE=#{date} and GZCPDM=#{prdCode} and GZZHDM='99990005' ""
(Enclosing method details could not be fully determined.)"
src\main\java\cmb\custody\monitor\infrastructure\dao\initialization\IProductMetricDao.java,SQL_Fragment_Container_Unknown,87,"SQL Snippet: ""select GZGZSL from TGCORE.EVLGZ where GZDATE=#{date} and GZCPDM=#{prdCode} and GZZHDM='99990005' ""
(Enclosing method details could not be fully determined.)"
src\main\java\cmb\custody\monitor\infrastructure\dao\initialization\IProductMetricDao.java,SQL_Fragment_Container_Unknown,90,"SQL Snippet: ""SELECT GZCBZE FROM TGCORE.EVLGZ WHERE GZCPDM = #{prdCode} AND GZDATE BETWEEN #{date} - 10 AND #{date} ""
(Enclosing method details could not be fully determined.)"
src\main\java\cmb\custody\monitor\interfaces\controller\normal\mon\MissMonService.java,query,544,"    List<Map<String, Object>> query(MetricDefinition metric, SqlArg sqlArgUtil, String queryConditionSql, final String penetrate,
                                    final DateParam dateParam)
            throws MonitorSystException {
        List<Map<String, Object>> result = new ArrayList<>();
        if (CollectionUtils.isEmpty(metric.getDataItemList())) {
            return result;
        }
        String outputColumn = metric.obtainFilterItemList().stream().map(DataItem::getDataSource).collect(Collectors.joining("",""));
        if (!outputColumn.contains(""GZZHMC"")) {
            outputColumn = outputColumn + "",GZZHMC"";
        }
        if (METRIC_ID_SPV.equals(metric.getMetricDefinitionId())) {
            outputColumn = outputColumn + "",ZQCODE"";
        }
        StringBuilder sb = sqlArgUtil.getSql();
        sb.append("" select "").append(outputColumn).append("" from "").append(sqlArgUtil.getTableName());
        sb.append("" where "").append(queryConditionSql);

        String sql = sb.toString();
        if (CommonEnum.YES.getFlag().equals(penetrate)) {
            sql = sql.replaceAll(""(?i)TGCORE.EVLGZ"", ""TGCORE.MON_EVALUATION_PENETRATE "");
        }
        if (sql.toUpperCase().contains(""TGCORE.MON_EVALUATION_PENETRATE "")) {
            sql = sql.replaceAll(""(?i)TGCORE.MON_EVALUATION_PENETRATE "",
                    ShardingTableUtil.replaceTableName(""TGCORE.MON_EVALUATION_PENETRATE"", dateParam.getEvlDate()) + "" "");
        }
        JdbcTemplate jdbc = JdbcTemplate.getJdbcTemplate();
        try {
            jdbc.setQueryTimeout(missMonWorkSqlTimeout);
            result = jdbc.queryForList(sql, sqlArgUtil.getArgs());
        } catch (Exception e) {
            throw new MonitorSystException(e.getMessage() + sql + sqlArgUtil.getArgs(), e);
        }
        return result;
    }"
src\main\resources\mapper\Fof4RetisMapper.xml,getJJReits,57,"    <select id=""getJJReits""  resultMap=""BaseResultMap2"">
        with
        CPJJ as (select KMMKET as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = #{prdType} and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJXX as (select JJMKET,JJCODE, JJNAME,JJGLRN,JJTYPE from TGCORE.MONJJ where JJDATE=#{monDate}
        )
        select GZMKET as JJMKET,GZZQDM as JJCODE, JJNAME,JJGLRN,JJTYPE
        from CPJJ LEFT JOIN JJXX on JJMKET = GZMKET and JJCODE = GZZQDM
    </select>"
src\main\resources\mapper\GxBondDeclineMapper.xml,getBondInfo,9,"<select id=""getBondInfo"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.GxBondEntity"">
    WITH gz1 AS
             (SELECT GZSZZE,
                     CASE
                         WHEN KMTYPE = 'CB' THEN
                             G.GZGZJG
                         ELSE 0 END AS GZGZJG,
                     CASE
                         WHEN KMTYPE = 'CB' THEN
                             1
                         ELSE 0 END AS num,
                     G.GZZQDM,
                     M.KMMKET
              FROM TGCORE.EVLGZ g,
                   TGCORE.MONKM m
              WHERE 1 = 1
                AND GZCPDM = #{prdCode}
                AND GZDATE = #{monDate}
                AND KMCODE = GZKMDM
                AND KMCPLX = #{subjectType}
                AND KMTYPE in ('CB', 'YZ', 'LX', 'YJLX', 'JZZB01', 'JZZB02', 'JZZB03')
                AND KMZQLX in ('ZQ', 'ZCZQ')
                AND ISFINAL = 'Y'
                AND KMZQLS != 'FZ'
             ),
         gz AS (
             SELECT SUM(GZSZZE)                        AS GZSZZE,
                    CASE
                        WHEN SUM(num) = 0 THEN 0
                        else
                            SUM(GZGZJG) / sum(num) end AS GZGZJG,
                    GZZQDM,
                    KMMKET
             FROM gz1
             GROUP BY GZZQDM, KMMKET
         ),
         zq AS (
             SELECT *
             FROM TGCORE.MONZQ m2
             WHERE m2.ZQSYFW = 'P'
               AND m2.ZQSTAT = 'A'
               AND ZQDATE = #{monDate}
         )
    SELECT GZSZZE,
           GZGZJG,
           GZZQDM,
    KMMKET,
    ZQCODE,
    ZQNAME,
    ZQZQLB
    FROM gz LEFT JOIN zq
    ON KMMKET = ZQMKET
    AND GZZQDM = ZQCODE
</select>"
src\main\resources\mapper\GxBondDeclineMapper.xml,getNoKzzBondInfoBefore,64,"<select id=""getNoKzzBondInfoBefore"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.GxBondEntity"">
    WITH gz1 AS
    (SELECT
    GZSZZE,
    CASE WHEN KMTYPE = 'CB' THEN
    G.GZGZJG ELSE 0 END AS GZGZJG,
    CASE WHEN KMTYPE = 'CB' THEN
    1 ELSE 0 END AS num,
    G.GZZQDM,
    M.KMMKET
    FROM TGCORE.EVLGZ g ,TGCORE.MONKM m
    WHERE 1 = 1
    AND GZCPDM = #{prdCode}
    AND GZDATE = #{monDate}
    AND KMCODE = GZKMDM
    AND KMCPLX = #{subjectType}
    AND KMTYPE in ('CB', 'YZ', 'LX', 'YJLX', 'JZZB01', 'JZZB02', 'JZZB03')
    AND KMZQLX in ('ZQ', 'ZCZQ')
    AND ISFINAL = 'Y'
    AND KMZQLS != 'FZ'
    and
    <foreach collection=""keys"" item=""item"" separator="" or "" open=""("" close="")"">
        GZZQDM = #{item.zqcode} and KMMKET = #{item.kmmket}
    </foreach>
    ),
    gz AS (
    SELECT
    SUM(GZSZZE) AS GZSZZE,
    CASE WHEN SUM(num) = 0 THEN 0 else
    SUM(GZGZJG)/sum(num) end AS GZGZJG,
    GZZQDM,
    KMMKET
    FROM gz1
    GROUP BY GZZQDM,KMMKET
    ),
    zq AS (
    SELECT * FROM TGCORE.MONZQ m2
    WHERE m2.ZQSYFW = 'P'
    AND m2.ZQSTAT = 'A'
    AND ZQDATE = #{monDate}
    )
    SELECT
    GZSZZE,
    GZGZJG,
    GZZQDM,
    KMMKET,
    ZQCODE,
    ZQNAME,
    ZQZQLB
    FROM gz LEFT JOIN zq
    ON KMMKET = ZQMKET
    AND GZZQDM = ZQCODE
</select>"
src\main\resources\mapper\JJFofMapper.xml,sumDZJJbyGlr,31,"    <select id=""sumDZJJbyGlr""  resultMap=""CcxxEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{manger} and CPSTAT='A' and CPCPLX = #{prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfofdzjjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{monDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        CPJJ as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJCC as (select  (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' then 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET,
        GZZQDM, GZSZZE from TGCORE.EVLGZ, TGCORE.MONKM
        where GZDATE=#{monDate} AND GZCPDM IN (select CPCODE from CP) and GZKMDM = KMCODE
        and KMCPLX = #{subjectType} and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        CCHZ as (select GZMKET,GZZQDM,sum(GZSZZE) CCZE from JJCC where (GZMKET, GZZQDM) in (select GZMKET,
        GZZQDM from CPJJ) group by GZMKET,GZZQDM),
        JJXX as (select JJMKET,JJCODE, JJJZCL, JJNAME from TGCORE.MONJJ where JJDATE=#{monDate} and (JJMKET,
        JJCODE) in (select GZMKET, GZZQDM from CPJJ))
        select GZMKET, GZZQDM, CCZE, NVL(JJJZCL, 0)JJJZCL,JJNAME
        from CCHZ left join JJXX on GZMKET=JJMKET and GZZQDM=JJCODE
    </select>"
src\main\resources\mapper\JJFofMapper.xml,sumDzjjbyjjglr,65,"    <select id=""sumDzjjbyjjglr"" resultMap=""CcxxEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{tyglfofSelectEntry.manger} and CPSTAT='A' and CPCPLX =
        #{tyglfofSelectEntry.prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" tyglfofSelectEntry.prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfofdzjjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{tyglfofSelectEntry.chDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" tyglfofSelectEntry.prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        JJCC as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8'
        then 'B' when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM, GZSZZE
        from TGCORE.EVLGZ,TGCORE.MONKM
        where GZDATE=#{tyglfofSelectEntry.gzDate}
        AND GZCPDM in (select CPCODE from CP)
        and KMCPLX = #{tyglfofSelectEntry.subjectType}
        and GZKMDM = KMCODE
        and KMZQLX = 'JJ'
        and ISFINAL = 'Y'
        and KMTYPE='CB'
        and KMZQLS != 'FZ' ),
        CCHZ as (select sum(GZSZZE)CCZE from JJCC where GZMKET=#{tyglfofSelectEntry.instructInfo.market} and
        GZZQDM=#{tyglfofSelectEntry.instructInfo.secCode}),
        JJXX as (select JJJZCL, JJNAME from TGCORE.MONJJ where JJDATE=#{tyglfofSelectEntry.chDate} and JJMKET =
        #{tyglfofSelectEntry.instructInfo.market}
        and JJCODE=#{tyglfofSelectEntry.instructInfo.secCode} )
        select NVL(CCZE,0) as CCZE, NVL(JJJZCL, 0) as JJJZCL, NVL(JJNAME, ' ') as JJNAME from CCHZ,JJXX
    </select>"
src\main\resources\mapper\JJFofMapper.xml,sumFeJJbyGlr,103,"    <select id=""sumFeJJbyGlr"" resultMap=""CcxxEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{manger} and CPSTAT='A' and CPCPLX = #{prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfoffejjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{monDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        CPJJ as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJCC as (select  (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' then 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET,
        GZZQDM, GZGZSL from TGCORE.EVLGZ, TGCORE.MONKM
        where GZDATE=#{monDate} AND GZCPDM IN (select CPCODE from CP) and GZKMDM = KMCODE
        and KMCPLX = #{subjectType} and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        CCHZ as (select GZMKET,GZZQDM,sum(GZGZSL) CCZE from JJCC where (GZMKET, GZZQDM) in (select GZMKET,
        GZZQDM from CPJJ) group by GZMKET,GZZQDM),
        JJXX as (select JJMKET,JJCODE, JJZFXL, JJNAME from TGCORE.MONJJ where JJDATE=#{monDate} and (JJMKET,
        JJCODE) in (select GZMKET, GZZQDM from CPJJ))
        select GZMKET, GZZQDM, CCZE, NVL(JJZFXL, 0)JJJZCL,JJNAME
        from CCHZ left join JJXX on GZMKET=JJMKET and GZZQDM=JJCODE

    </select>"
src\main\resources\mapper\JJFofMapper.xml,sumFeJJByJJGlr,138,"    <select id=""sumFeJJByJJGlr"" resultMap=""CcxxEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{tyglfofSelectEntry.manger} and CPSTAT='A' and CPCPLX = #{tyglfofSelectEntry.prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" tyglfofSelectEntry.prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfoffejjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{tyglfofSelectEntry.chDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" tyglfofSelectEntry.prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        JJCC as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM, GZGZSL
        from TGCORE.EVLGZ,TGCORE.MONKM
        where GZDATE=#{tyglfofSelectEntry.gzDate}
        AND GZCPDM in (select CPCODE from CP)
        and KMCPLX = #{tyglfofSelectEntry.subjectType}
        and GZKMDM = KMCODE
        and KMZQLX	 = 'JJ'
        and ISFINAL = 'Y'
        and KMTYPE='CB'
        and KMZQLS <![CDATA[<>]]> 'FZ' ),
        CCHZ as (select sum(GZGZSL)CCZE from JJCC where GZMKET=#{tyglfofSelectEntry.instructInfo.market} and
        GZZQDM=#{tyglfofSelectEntry.instructInfo.secCode} ),
        JJXX as (select JJZFXL, JJNAME from TGCORE.MONJJ where JJDATE=#{tyglfofSelectEntry.chDate}
        and JJMKET = #{tyglfofSelectEntry.instructInfo.market}
        and JJCODE=#{tyglfofSelectEntry.instructInfo.secCode} )
        select NVL(CCZE,0) as CCZE, NVL(JJZFXL, 0) as JJJZCL, NVL(JJNAME, ' ') as JJNAME from CCHZ,JJXX

    </select>"
src\main\resources\mapper\JJFofMapper.xml,selectDzjjzb,175,"    <select id=""selectDzjjzb""  resultMap=""TyglfofEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{manger} and CPSTAT='A' and CPCPLX = #{prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfofdzjjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{monDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        CPJJ as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJCC as (select  (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' then 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET,
        GZZQDM, GZSZZE,GZCPDM from TGCORE.EVLGZ, TGCORE.MONKM
        where GZDATE=#{monDate} AND GZCPDM IN (select CPCODE from CP) and GZKMDM = KMCODE
        and KMCPLX = #{subjectType} and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJXX as (select JJMKET,JJCODE, JJJZCL, JJNAME from TGCORE.MONJJ where JJDATE=#{monDate} and (JJMKET,
        JJCODE) in (select GZMKET, GZZQDM from JJCC))
        select GZCPDM,(select CPSNAM from TGCORE.MONPR where CPCODE = GZCPDM) AS CPSNAM,GZZQDM,JJNAME,GZMKET,nvl(GZSZZE,0) as CCZE,nvl(JJJZCL,0) as JJJZCL
        from JJCC
        left join JJXX on GZMKET=JJMKET and GZZQDM=JJCODE
        where GZZQDM is not null and GZZQDM != ' '
        order by GZZQDM

    </select>"
src\main\resources\mapper\JJFofMapper.xml,selectFejjzb,211,"    <select id=""selectFejjzb"" resultMap=""TyglfofEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{manger} and CPSTAT='A' and CPCPLX = #{prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfoffejjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{monDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        CPJJ as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJCC as (select  (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' then 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET,
        GZZQDM, GZGZSL,GZCPDM from TGCORE.EVLGZ, TGCORE.MONKM
        where GZDATE=#{monDate} AND GZCPDM IN (select CPCODE from CP) and GZKMDM = KMCODE
        and KMCPLX = #{subjectType} and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJXX as (select JJMKET,JJCODE, JJZFXL, JJNAME from TGCORE.MONJJ where JJDATE=#{monDate} and (JJMKET,
        JJCODE) in (select GZMKET, GZZQDM from JJCC))
        select GZCPDM,(select CPSNAM from TGCORE.MONPR where CPCODE = GZCPDM) AS CPSNAM,GZZQDM,JJNAME,GZMKET,nvl(GZGZSL,0) as CCZE,nvl(JJZFXL,0) as JJJZCL
        from JJCC
        left join JJXX on GZMKET=JJMKET and GZZQDM=JJCODE
        where GZZQDM is not null and GZZQDM != ' '
        order by GZZQDM

    </select>"
src\main\resources\mapper\MaxDrawdownMapper.xml,selectNetValueListByDateSpan,11,"    <select id=""selectNetValueListByDateSpan"" resultMap=""BaseResultMap"">
        SELECT GZDATE, GZCBZE FROM TGCORE.EVLGZ
        WHERE GZZHDM = '99990006' AND GZDATE BETWEEN #{startDate, javaType=java.util.Date} AND #{endDate, javaType=java.util.Date} AND GZCPDM =
        #{prdCode}
        ORDER BY GZDATE
    </select>"
src\main\resources\mapper\PrivateOfferNonStandardMapper.xml,getSpvGzInfo,9,"<select id=""getSpvGzInfo"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.SpvFxrEntity"">
    WITH GZ AS (
    SELECT
    G.GZSZZE,
    CASE
    KMTYPE WHEN 'JZZB01' THEN 0
    WHEN 'JZZB02' THEN 0
    WHEN 'JZZB03' THEN 0
    ELSE GZCBZE
    END GZCBZE,
    G.GZZQDM,
    CASE
    KMCPLX WHEN 'BX' THEN (CASE
    KMMKET WHEN 'G' THEN 'X'
    ELSE KMMKET
    END)
    ELSE KMMKET
    END AS KMMKET
    FROM TGCORE.MONKM m,TGCORE.EVLGZ G
    WHERE GZCPDM= #{prdCode}
    and GZDATE= #{monDate}
    and KMCODE=GZKMDM
    AND KMCPLX = #{subjectType}
    AND KMTYPE IN ('CB', 'YZ', 'JZZB01', 'JZZB02', 'JZZB03')
    AND KMZQLX = 'SPV'
    AND ISFINAL = 'Y'
    AND KMZQLS != 'FZ'
    ),
    SPV AS (
    SELECT
    *
    FROM
    TGCORE.MONSPV
    WHERE
    (ZQCODE,
    ZQCPDM) IN (
    SELECT
    ZQCODE,
    max(ZQCPDM) ZQCPDM
    FROM
    TGCORE.MONSPV
    WHERE
    ZQCPDM = #{prdCode}
    OR ZQCPDM = ' '
    GROUP BY
    ZQCODE)
    )
    SELECT
    S.ZQCODE,nvl(S.ZQNAME,' ') as ZQNAME,S.ZQFXR,GZSZZE,GZCBZE,G.GZZQDM,G.KMMKET,ZQZQLB,ZQEJLB,sfbjbzx
    FROM
    GZ G left JOIN SPV S ON
    G.KMMKET = S.ZQMKET
    AND G.GZZQDM = S.ZQCODE
</select>"
src\main\resources\mapper\PrivateOfferNonStandardMapper.xml,getSpvGzInfo4SQ,180,"<select id=""getSpvGzInfo4SQ"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.SpvFxrEntity"">
    WITH GZ AS (
    SELECT
    G.GZSZZE,
    CASE
    KMTYPE WHEN 'JZZB01' THEN 0
    WHEN 'JZZB02' THEN 0
    WHEN 'JZZB03' THEN 0
    ELSE GZCBZE
    END GZCBZE,
    G.GZZQDM,
    CASE
    KMCPLX WHEN 'BX' THEN (CASE
    KMMKET WHEN 'G' THEN 'X'
    ELSE KMMKET
    END)
    ELSE KMMKET
    END AS KMMKET
    FROM TGCORE.MONKM m,TGCORE.EVLGZ G
    WHERE GZCPDM= #{prdCode}
    and GZDATE= #{monDate}
    and KMCODE=GZKMDM
    AND KMCPLX = #{subjectType}
    AND KMTYPE IN ('CB', 'YZ', 'JZZB01', 'JZZB02', 'JZZB03')
    AND KMZQLX = 'SPV'
    AND ISFINAL = 'Y'
    AND KMZQLS != 'FZ'
    ),
    SPV AS (
    SELECT
    *
    FROM
    TGCORE.MONSPV
    WHERE
    (ZQCODE,
    ZQCPDM) IN (
    SELECT
    ZQCODE,
    max(ZQCPDM) ZQCPDM
    FROM
    TGCORE.MONSPV
    WHERE
    ZQCPDM = #{prdCode}
    OR ZQCPDM = ' '
    GROUP BY
    ZQCODE)
    )
    SELECT
    S.ZQCODE,nvl(S.ZQNAME,' ') as ZQNAME,S.ZQFXR,GZSZZE,GZCBZE,G.GZZQDM,G.KMMKET,ZQZQLB,ZQEJLB,sfbjbzx
    FROM
    GZ G inner join  SPV S ON
    G.KMMKET = S.ZQMKET
    AND G.GZZQDM = S.ZQCODE
        WHERE ZQZQLB = 'FBZQ'
        AND ZQEJLB = 'SYPZ'
        AND sfbjbzx = 'Y'

</select>"
src\main\resources\mapper\ReCalculateAssetMapper.xml,selectHoldGP,126,"	<select id=""selectHoldGP"" resultType=""java.util.Map"">
		WITH km AS(
		SELECT
		CASE
				KMCPLX WHEN 'BX' THEN (
			CASE
					KMMKET WHEN 'G' THEN 'X'
					ELSE KMMKET
			END)
				ELSE KMMKET
		END AS KMMKET,
			KMCPLX,
			KMCODE ,
			KMZQLX,
			kmzqls,
			SECTYPE3,
			KMTZFL,
			KMTYPE,
			KMKMBZ,
			KMBZXX
		FROM
			TGCORE.MONKM
		WHERE
			KMCPLX = #{subjectType}
			AND KMTYPE IN ('CB',
			'YZ')
			AND ISFINAL = 'Y'
			AND KMZQLX = 'GP'
			AND KMZQLS <![CDATA[<>]]> 'FZ'),
		kmgz AS (
		SELECT
			GZCPDM,
			GZDATE,
			GZZQDM,
			KMMKET,
			GZZHDM,
			gzzhmc,
			gzszze,
			gzgzsl
		FROM
			TGCORE.EVLGZ gz,
			km
		WHERE
			GZDATE = #{monDate}
			AND GZKMDM = KMCODE
			AND GZCPDM = #{prdcode} )
		,
		gp AS (
		SELECT
			*
		FROM
			tgcore.mongp
		WHERE
			gpdate = #{monDate}
			AND (1=0
		<foreach collection=""assetTypes"" item=""item"" index=""index"">
<!--			GP-ALL-股票 或者 GP-JCK-股票【净敞口】-->
		<if test=""item == 'GP-ALL'"">
			OR GPMKET != 'B' AND STKTYP != '存托凭证'
		</if>
		</foreach>
			) )
		SELECT
			kmgz.*,
			gp.GPNAME SECNAME,
			'股票' SECTYPE
		FROM
			kmgz,
			gp
		WHERE
			gpcode = GZZQDM
			AND gpmket = KMMKET
	</select>"
src\main\resources\mapper\ReCalculateAssetMapper.xml,selectHoldJJ,200,"	<select id=""selectHoldJJ"" resultType=""java.util.Map"">
		WITH km AS(
		SELECT
		CASE
				KMCPLX WHEN 'BX' THEN (
			CASE
					KMMKET WHEN 'G' THEN 'X'
					ELSE KMMKET
			END)
				ELSE KMMKET
		END AS KMMKET,
			KMCPLX,
			KMCODE ,
			KMZQLX,
			kmzqls,
			SECTYPE3,
			KMTZFL,
			KMTYPE,
			KMKMBZ,
			KMBZXX
		FROM
			TGCORE.MONKM
		WHERE
			KMCPLX = #{subjectType}
			AND KMTYPE IN ('CB',
			'YZ',
			'JZZB01',
			'JZZB02',
			'JZZB03')
			AND ISFINAL = 'Y'
			AND KMZQLX IN ('JJ')
			AND KMZQLS <![CDATA[<>]]> 'FZ' ),
		kmgz AS (
		SELECT
			GZCPDM,
			GZDATE,
			GZZQDM,
			KMMKET,
			GZZHDM,
			gzzhmc,
			gzszze,
			gzgzsl
		FROM
			TGCORE.EVLGZ gz,
			km
		WHERE
			GZDATE = #{monDate}
			AND GZKMDM = KMCODE
			AND GZCPDM = #{prdcode} )
		,
		jj AS (
		SELECT
			*
		FROM
			tgcore.monjj
		WHERE
			jjdate = #{monDate}
			AND  (1=0
		<foreach collection=""assetTypes"" item=""item"" index=""index"">
<!--			JJ-GPX-基金-股票型-->
			<if test=""item == 'JJ-GPX'"">
			OR JJTYPE='GPX'
			</if>
<!--			JJ-HHX-基金-混合型-->
			<if test=""item == 'JJ-HHX'"">
			OR JJTYPE='HHX'
			</if>
<!--			JJ-ZDZ-基金-中短债型-->
			<if test=""item == 'JJ-ZDZ'"">
			OR JJTYPE='ZDZ'
			</if>
<!--			JJ-ZQX-基金-债券型-->
			<if test=""item == 'JJ-ZQX'"">
			OR JJTYPE='ZQX'
			</if>
<!--			JJ-EJZJJJ-基金-二级债基-->
			<if test=""item == 'JJ-EJZJJJ'"">
			OR ZDJJLX='EJZJJJ'
			</if>
<!--			JJ-KZKJ-基金-可转债基金-->
			<if test=""item == 'JJ-KZKJ'"">
			OR (JJTYPE NOT IN ('JCY','ZQY','LCY','GZY','GPY','QTY','HHY','YXY','XTY','HBY','ZJY','TDY','GSY','GQY','CKY','BCY')  and (JJNAME like '%可转%' or JJNAME like '%可交%'))
			</if>
<!--			JJ-FWKZ-基金-投资范围是含可转债-->
			<if test=""item == 'JJ-FWKZ'"">
			OR JJHKZZ = 'Y'
			</if>
		</foreach>
			)
			)
		SELECT
			kmgz.*,
			jj.JJNAME SECNAME,
			'基金' SECTYPE
		FROM
			kmgz,
			jj
		WHERE
			jjcode = GZZQDM
			AND jjmket = KMMKET
	</select>"
src\main\resources\mapper\ReCalculateAssetMapper.xml,selectHoldYL,302,"	<select id=""selectHoldYL"" resultType=""java.util.Map"">
		WITH km AS(
		SELECT
		CASE
				KMCPLX WHEN 'BX' THEN (
			CASE
					KMMKET WHEN 'G' THEN 'X'
					ELSE KMMKET
			END)
				ELSE KMMKET
		END AS KMMKET,
			KMCPLX,
			KMCODE ,
			KMZQLX,
			kmzqls,
			SECTYPE3,
			KMTZFL,
			KMTYPE,
			KMKMBZ,
			KMBZXX
		FROM
			TGCORE.MONKM
		WHERE
			KMCPLX = #{subjectType}
			AND KMTYPE IN ('CB',
			'YZ',
			'JZZB01',
			'JZZB02',
			'JZZB03')
			AND ISFINAL = 'Y'
			AND KMZQLX IN ('YL')
			AND KMZQLS <![CDATA[<>]]> 'FZ' ),
		kmgz AS (
		SELECT
			GZCPDM,
			GZDATE,
			GZZQDM,
			KMMKET,
			GZZHDM,
			gzzhmc,
			gzszze,
			gzgzsl
		FROM
			TGCORE.EVLGZ gz,
			km
		WHERE
			GZDATE = #{monDate}
			AND GZKMDM = KMCODE
			AND GZCPDM = #{prdcode} )
		,
		jj AS (
		SELECT
			*
		FROM
			tgcore.monjj
		WHERE
			jjdate = #{monDate}
			AND (1=0
		<foreach collection=""assetTypes"" item=""item"" index=""index"">
<!--			YL-JCY-养老金-基础设施债权计划型养老金-->
			<if test=""item == 'YL-JCY'"">
			OR JJTYPE='JCY'
			</if>
<!--			YL-ZQY-养老金-债券型养老金-->
			<if test=""item == 'YL-ZQY'"">
			OR JJTYPE='ZQY'
			</if>
<!--			YL-LCY-养老金-商业银行理财产品型养老金-->
			<if test=""item == 'YL-LCY'"">
			OR JJTYPE='LCY'
			</if>
<!--			YL-GZY-养老金-股票专项型养老金-->
			<if test=""item == 'YL-GZY'"">
			OR JJTYPE='GZY'
			</if>
<!--			YL-GPY-养老金-股票型养老金-->
			<if test=""item == 'YL-GPY'"">
			OR JJTYPE='GPY'
			</if>
<!--			YL-QTY-养老金-其他型养老金-->
			<if test=""item == 'YL-QTY'"">
			OR JJTYPE='QTY'
			</if>
<!--			YL-HHY-养老金-混合型养老金-->
			<if test=""item == 'YL-HHY'"">
			OR JJTYPE='HHY'
			</if>
<!--			YL-YXY-养老金-优先股型养老金-->
			<if test=""item == 'YL-YXY'"">
			OR JJTYPE='YXY'
			</if>
<!--			YL-XTY-养老金-信托型养老金-->
			<if test=""item == 'YL-XTY'"">
			OR JJTYPE='XTY'
			</if>
<!--			YL-HBY-养老金-货币型养老金-->
			<if test=""item == 'YL-HBY'"">
			OR JJTYPE='HBY'
			</if>
<!--			YL-ZJY-养老金-债券基金型养老金-->
			<if test=""item == 'YL-ZJY'"">
			OR JJTYPE='ZJY'
			</if>
<!--			YL-TDY-养老金-特定资产管理计划型养老金-->
			<if test=""item == 'YL-TDY'"">
			OR JJTYPE='TDY'
			</if>
<!--			YL-GSY-养老金-固定收益型养老金-->
			<if test=""item == 'YL-GSY'"">
			OR JJTYPE='GSY'
			</if>
<!--			YL-GQY-养老金-股权型养老金-->
			<if test=""item == 'YL-GQY'"">
			OR JJTYPE='GQY'
			</if>
<!--			YL-CKY-养老金-存款型养老金-->
			<if test=""item == 'YL-CKY'"">
			OR JJTYPE='CKY'
			</if>
<!--			YL-BCY-养老金-保险产品型养老金-->
			<if test=""item == 'YL-BCY'"">
			OR JJTYPE='BCY'
			</if>
<!--			YL-KZKJ-养老金-名称包含可转、可交-->
			<if test=""item == 'YL-KZKJ'"">
			OR (JJTYPE IN ('JCY','ZQY','LCY','GZY','GPY','QTY','HHY','YXY','XTY','HBY','ZJY','TDY','GSY','GQY','CKY','BCY') AND (JJNAME LIKE '%可转%' OR JJNAME LIKE '%可交%'))
			</if>
		</foreach>
			)
		)
		SELECT
			kmgz.*,
			jj.JJNAME SECNAME,
			'养老金' SECTYPE
		FROM
			kmgz,
			jj
		WHERE
			jjcode = GZZQDM
			AND jjmket = KMMKET
	</select>"
src\main\resources\mapper\TopNPostionMapper.xml,getGzInfo,60,"<select id=""getGzInfo"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.TopNResultEntity"">
   <include refid=""km""></include>
    kmgz AS (
    SELECT
    GZCPDM,
    GZDATE,
    GZZQDM,
    gzszze,
    GZGZSL,
    CASE
    KMTYPE WHEN 'JZZB01' THEN 0
    WHEN 'JZZB02' THEN 0
    WHEN 'JZZB03' THEN 0
    ELSE GZCBZE
    END GZCBZE,
    KMMKET
    FROM
    TGCORE.EVLGZ gz,
    km
    WHERE
    GZDATE = #{monDate,jdbcType=DATE}
    AND GZKMDM = KMCODE
    AND GZCPDM = #{prdCode} )
    <include refid=""result""></include>
</select>"
src\main\resources\mapper\TopNPostionMapper.xml,getGzFm,111,"<select id=""getGzFm"" resultType=""java.math.BigDecimal"">
    select
    <choose>
        <when test="" topNfm == 'JZCCB' or topNfm == 'ZZCCB' "">
            gzcbze
        </when>
        <when test="" topNfm == 'JZCSZ' or topNfm == 'ZZCSZ' "">
            gzszze
        </when>
    </choose>
    FROM
    TGCORE.EVLGZ
    WHERE
    gzdate =  #{monDate,jdbcType=DATE}
    AND gzcpdm = #{prdCode}
    <choose>
        <when test="" topNfm == 'JZCCB' or topNfm == 'JZCSZ' "">
            AND gzzhdm = '99990004'
        </when>
        <otherwise>
            AND gzzhdm = '99990001'
        </otherwise>
    </choose>
</select>"
src\main\resources\mapper\TyfxrgpslMapper.xml,getEvlgzInfo,69,"<select id=""getEvlgzInfo"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.TyfxrgpslEntity"">
    with EVL as ( select distinct GZZQDM,KMMKET
     from TGCORE.EVLGZ,TGCORE.MONKM
     where GZCPDM = #{prdCode}
     and GZDATE = #{monDate,jdbcType=DATE}
     and GZKMDM = KMCODE
     and KMCPLX = #{subjectType}
     and KMZQLX = 'GP'
     and KMTYPE = 'CB'
     and KMZQLS &lt;> 'FZ'
     and KMCODE not in ('11020301','11021301','11023301','11024301')
     and ISFINAL = 'Y' ),
    STK as ( select GPCODE,GPMKET,GPQFXR, NVL(GPSSRQ, DATE'1900-1-1') AS GPSSRQ, GPNAME AS NAME
     from TGCORE.MONGP where GPDATE=#{monDate,jdbcType=DATE})
   select GZZQDM as CODE, KMMKET as MKET, GPQFXR as ISSUER, NVL(GPSSRQ, DATE'1900-1-1') AS GPSSRQ, NVL(NAME, ' ') AS NAME
     from EVL left join STK on GPCODE=GZZQDM and KMMKET=GPMKET
</select>"
src\main\resources\mapper\TyzcMapper.xml,selectJghhhEvlList,14,"    <select id=""selectJghhhEvlList"" resultMap=""JghhhResultMap"">
        WITH evl AS (
		SELECT
			GZDATE,
			GZCPDM,
			GZZQDM
		FROM
			tgcore.EVLGZ,
			tgcore.MONKM
		WHERE
			GZKMDM = KMCODE
            AND GZCPDM = #{monObject}
            AND GZDATE = #{monDate}
            AND KMCPLX = #{subjectType}
			AND KMTYPE = 'CB'
			AND KMZQLX = 'JGHHH'
			AND ISFINAL = 'Y'),
		cwhh AS (
		SELECT
			GZDATE,
			GZCPDM,
			GZZQDM,
			HYNAME,
			TO_CHAR(HYSEQN) AS HYSEQN
		FROM
			evl
		LEFT JOIN tgcore.PRDCWHH ON
			GZCPDM = HYCPDM
			AND GZZQDM = HYHYDM
			AND HYSTAT = 'A' )
		SELECT
			GZDATE,
			GZCPDM,
			GZZQDM,
			HYNAME,
			HYSEQN,
			NVL(BZJJE, 0) AS JE
		FROM
			cwhh
		LEFT JOIN tgcore.GUARANTEE_MONEY_ADJUST ON
			GZCPDM = PRDCODE
			AND GZZQDM = HYCODE
			AND GZDATE = JYDATE
			AND YWTYPE = 'HH'
			AND STATUS = 'A'
    </select>"
src\main\resources\mapper\complexindex\BanInvestMapper.xml,selectBanInvestBond,16,"    <select id=""selectBanInvestBond"" resultMap=""BanInvestSecurityBase"">
        with km as (select (case when KMMKET in ('H','S','Y','K') then KMMKET else 'QT' end) AS KMMKET,KMCPLX,KMCODE,KMZQLX
        from TGCORE.MONKM where KMCPLX=#{subjectType} and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y'
        and KMZQLX in ('ZQ','ZCZQ') and KMZQLS <![CDATA[<>]]> 'FZ' ),
        kmgz as (select KMZQLX, GZZQDM, KMMKET, SUM(GZSZZE) AS GZSZZE from TGCORE.EVLGZ gz, km where GZDATE=#{monDate, javaType=java.util.Date}
        and GZKMDM=KMCODE AND GZCPDM=#{prdCode} GROUP BY KMZQLX, GZZQDM, KMMKET),
        jtzq as (select JTSTRN, JTJTJH, JTZQDM, JTZQSC, JTZQJC, JTJTLX, JTJTYY
        from ${banInvestUploadDateDTO.tableName} where JTDATE=#{banInvestUploadDateDTO.uploadDate}
        and JTZQLX = 'ZQ'
        <if test=""banInvestConfigDTO.baileeList != null and banInvestConfigDTO.baileeList.size() > 0"">
            and JTSTRN in
            <foreach collection=""banInvestConfigDTO.baileeList"" open=""("" close="")"" separator="","" item=""bailee"">
                #{bailee}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.fileList != null and banInvestConfigDTO.fileList.size() > 0"">
            and JTJTJH in
            <foreach collection=""banInvestConfigDTO.fileList"" open=""("" close="")"" separator="","" item=""jh"">
                #{jh}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestTypeList != null and banInvestConfigDTO.banInvestTypeList.size() > 0"">
            and JTJTLX in
            <foreach collection=""banInvestConfigDTO.banInvestTypeList"" open=""("" close="")"" separator="","" item=""banInvestType"">
                #{banInvestType}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestReasonList != null and banInvestConfigDTO.banInvestReasonList.size() > 0"">
            and (
            <foreach collection=""banInvestConfigDTO.banInvestReasonList"" open=""("" close="")"" separator="" or "" item=""banInvestReason"">
                INSTR(JTJTYY, #{banInvestReason}) > 0
            </foreach>
            )
        </if>
        ),
        jtcczq as (select GZZQDM, KMZQLX, KMMKET, JTZQJC as GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE from kmgz, jtzq
        where GZZQDM = JTZQDM and JTZQSC = KMMKET)
        SELECT GZZQDM, KMZQLX, KMMKET, GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE FROM jtcczq
    </select>"
src\main\resources\mapper\complexindex\BanInvestMapper.xml,selectBanInvestFund,56,"    <select id=""selectBanInvestFund"" resultMap=""BanInvestSecurityBase"">
        with km as (select (case when KMMKET in ('H','S','Y','K') then KMMKET else 'QT' end) AS KMMKET,KMCPLX,KMCODE,KMZQLX
        from TGCORE.MONKM where KMCPLX=#{subjectType} and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y'
        and KMZQLX in ('JJ') and KMZQLS <![CDATA[<>]]> 'FZ' ),
        kmgz as (select KMZQLX, GZZQDM, KMMKET, SUM(GZSZZE) AS GZSZZE from TGCORE.EVLGZ gz, km where GZDATE=#{monDate, javaType=java.util.Date}
        and GZKMDM=KMCODE AND GZCPDM=#{prdCode} GROUP BY KMZQLX, GZZQDM, KMMKET),
        jtzq as (select JTSTRN, JTJTJH, JTZQDM, JTZQSC, JTZQJC, JTJTLX, JTJTYY
        from ${banInvestUploadDateDTO.tableName} where JTDATE=#{banInvestUploadDateDTO.uploadDate}
        and JTZQLX = 'JJ'
        <if test=""banInvestConfigDTO.baileeList != null and banInvestConfigDTO.baileeList.size() > 0"">
            and JTSTRN in
            <foreach collection=""banInvestConfigDTO.baileeList"" open=""("" close="")"" separator="","" item=""bailee"">
                #{bailee}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.fileList != null and banInvestConfigDTO.fileList.size() > 0"">
            and JTJTJH in
            <foreach collection=""banInvestConfigDTO.fileList"" open=""("" close="")"" separator="","" item=""jh"">
                #{jh}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestTypeList != null and banInvestConfigDTO.banInvestTypeList.size() > 0"">
            and JTJTLX in
            <foreach collection=""banInvestConfigDTO.banInvestTypeList"" open=""("" close="")"" separator="","" item=""banInvestType"">
                #{banInvestType}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestReasonList != null and banInvestConfigDTO.banInvestReasonList.size() > 0"">
            and (
            <foreach collection=""banInvestConfigDTO.banInvestReasonList"" open=""("" close="")"" separator="" or "" item=""banInvestReason"">
                INSTR(JTJTYY, #{banInvestReason}) > 0
            </foreach>
            )
        </if>
        ),
        jtccjj as (select GZZQDM, KMZQLX, KMMKET, JTZQJC as GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE from kmgz, jtzq
        where GZZQDM = JTZQDM and JTZQSC = KMMKET)
        SELECT GZZQDM, KMZQLX, KMMKET, GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE FROM jtccjj
    </select>"
src\main\resources\mapper\complexindex\BanInvestMapper.xml,selectBanInvestStock,96,"    <select id=""selectBanInvestStock"" resultMap=""BanInvestSecurityBase"">
        with km as (select (case when KMMKET in ('H','S','Y','K') then KMMKET else 'QT' end) AS KMMKET,KMCPLX,KMCODE,KMZQLX
        from TGCORE.MONKM where KMCPLX=#{subjectType} and KMTYPE in ('CB','YZ') and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        kmgz as (select KMZQLX, GZZQDM, KMMKET, SUM(GZSZZE) AS GZSZZE from TGCORE.EVLGZ gz, km where GZDATE=#{monDate, javaType=java.util.Date}
        and GZKMDM=KMCODE AND GZCPDM=#{prdCode} GROUP BY KMZQLX, GZZQDM, KMMKET),
        jtzq as (select JTSTRN, JTJTJH, JTZQDM, JTZQSC, JTZQJC, JTJTLX, JTJTYY
        from ${banInvestUploadDateDTO.tableName} where JTDATE=#{banInvestUploadDateDTO.uploadDate}
        and JTZQLX = 'GP'
        <if test=""banInvestConfigDTO.baileeList != null and banInvestConfigDTO.baileeList.size() > 0"">
            and JTSTRN in
            <foreach collection=""banInvestConfigDTO.baileeList"" open=""("" close="")"" separator="","" item=""bailee"">
                #{bailee}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.fileList != null and banInvestConfigDTO.fileList.size() > 0"">
            and JTJTJH in
            <foreach collection=""banInvestConfigDTO.fileList"" open=""("" close="")"" separator="","" item=""jh"">
                #{jh}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestTypeList != null and banInvestConfigDTO.banInvestTypeList.size() > 0"">
            and JTJTLX in
            <foreach collection=""banInvestConfigDTO.banInvestTypeList"" open=""("" close="")"" separator="","" item=""banInvestType"">
                #{banInvestType}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestReasonList != null and banInvestConfigDTO.banInvestReasonList.size() > 0"">
            and (
            <foreach collection=""banInvestConfigDTO.banInvestReasonList"" open=""("" close="")"" separator="" or "" item=""banInvestReason"">
                INSTR(JTJTYY, #{banInvestReason}) > 0
            </foreach>
            )
        </if>
        ),
        jtccgp as (select GZZQDM, KMZQLX, KMMKET, JTZQJC AS GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE from kmgz, jtzq
        where GZZQDM = JTZQDM and JTZQSC = KMMKET)
        SELECT GZZQDM, KMZQLX, KMMKET, GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE FROM jtccgp
    </select>"
src\main\resources\mapper\complexindex\StockReturnMapper.xml,insertNetValue,19,"    <insert id=""insertNetValue"">
        insert into tgcore.MON_EVL_NETVALUE (GZCPDM, GZDATE, GZZHDM, GZCBZE, GZSZZE)
        <choose>
            <when test=""prdType=='QD' or prdType=='BX'"">
                select PRDCODE,BIZDATE,ACCCODE,STADCOST, STADVAL from tgcore.EVALUATION where PRDCODE=#{prdCode, jdbcType=VARCHAR}
                and BIZDATE between #{startDate, jdbcType=DATE} and #{endDate, jdbcType=DATE} and ACCCODE = '99990004'
            </when>
            <otherwise>
                select GZCPDM,GZDATE,GZZHDM,GZCBZE,GZSZZE from tgcore.EVLGZ where GZCPDM=#{prdCode, jdbcType=VARCHAR}
                and GZDATE between #{startDate, jdbcType=DATE} and #{endDate, jdbcType=DATE} and GZZHDM = '99990004'
            </otherwise>
        </choose>
    </insert>"
src\main\resources\mapper\complexindex\StockReturnMapper.xml,getFloatingProfitandLoss,106,"    <select id=""getFloatingProfitandLoss"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.TheDayReturnDTO"">
        WITH KM as (SELECT KMCODE,KMBZXX,KMKMBZ from TGCORE.MONKM where KMCPLX=#{subjectType} and KMTYPE='CB' and KMZQLX='GP'
        and KMZQLS<![CDATA[<>]]>'FZ' and ISFINAL='Y' )
        <choose>
            <when test=""prdType == 'QD' or prdType == 'BX'"">
                select bizDate,secCode,'FL' as returnType, SUM(STADVAL) - SUM(STADCOST) as amount from TGCORE.EVALUATION,KM
                where KM.KMCODE = COACODE and PRDCODE=#{prdCode, jdbcType=VARCHAR} and BIZDATE=#{bizDate, jdbcType=DATE}
                and KMKMBZ='CNY' and KMBZXX<![CDATA[<>]]>'OVERSEA' group by BIZDATE, SECCODE
            </when>
            <otherwise>
                select GZDATE as bizDate, GZZQDM as secCode,'FL' as returnType, SUM(GZSZZE) - SUM(GZCBZE) as amount from
                TGCORE.EVLGZ,KM
                where KM.KMCODE = GZKMDM and GZCPDM=#{prdCode, jdbcType=VARCHAR} and GZDATE=#{bizDate, jdbcType=DATE} group by GZDATE,GZZQDM
            </otherwise>
        </choose>
    </select>"
src\main\resources\mapper\fundstyledrift\FundStyleCompareMapper.xml,listStockHold,20,"    <select id=""listStockHold"" resultMap=""BaseResultMap"">
        with GZ as (
            select
                GZZQDM,KMMKET,SUM(NVL(GZSZBL,0)) GZSZBL
            from TGCORE.EVLGZ,TGCORE.MONKM
            where GZCPDM = #{prdCode} and GZDATE = #{date} and GZKMDM = KMCODE
            and KMCPLX = #{subjectType} and KMZQLX = 'GP'  and KMTYPE = 'CB' and ISFINAL = 'Y' and KMZQLS != 'FZ'
            group by GZZQDM,KMMKET
        )
        select
            GZZQDM as STOCK_CODE,KMMKET as STOCK_MARKET,GPNAME as STOCK_NAME,
            GZSZBL,GPHYYJ,GPHYEJ,GPSWYJ,GPSWEJ,GPSWSJ,CITIC_ONELEVEL_TRADE,GPQFXR,'common' AS FLAG
        from GZ
        left join TGCORE.MONGP on GZZQDM = GPCODE and KMMKET = GPMKET and GPDATE = #{date}
    </select>"
src\main\resources\mapper\index\ZSCFGMapper.xml,getIndexStockHoldingDetail,17,"    <select id=""getIndexStockHoldingDetail"" resultMap=""BaseResultMap"">
        with STKHOLD as (select GZZQDM,KMMKET,GZSZZE
        from TGCORE.EVLGZ,TGCORE.MONKM
        where GZCPDM=#{prdCode,jdbcType=VARCHAR}
        and GZDATE=#{monDate,jdbcType=DATE}
        and GZKMDM=KMCODE
        and KMCPLX=#{subjectType,jdbcType=VARCHAR}
        and KMTYPE='CB' and KMZQLX in ('GP','ZQ','ZCZQ') and KMZQLS != 'FZ' )
        select ZSZQDM,ZSZQMC,(SELECT CSNAME FROM TGCORE.MONPM WHERE CSROOT ='MONBDZQ' AND CSFATH  = 'ZQMKET' AND CSSSON = ZSMKET ) AS ZSMKET,GZSZZE
        from STKHOLD,TGCORE.MONZS
        where GZZQDM = ZSZQDM
        and KMMKET = ZSMKET
        and ZSZSLB = #{stockIndexCode,jdbcType=VARCHAR}
        and ZSDATE = #{monDate,jdbcType=DATE}
    </select>"
src\main\resources\mapper\monitor\MonIndexResultMapper.xml,selectPrdGzInfo,1493,"    <select id=""selectPrdGzInfo"" resultMap=""PrdGzInfoResultMap"">
        WITH PRD AS (
            SELECT CPCODE FROM TGCORE.MONPR M WHERE (M.CPCODE,1) IN
            <foreach collection=""prdCodeList"" item=""item"" open=""("" separator="","" close="")"">
                (#{item,jdbcType=VARCHAR},1)
            </foreach>
        ),
        KZ AS (
        SELECT KZCPDM, KZDATE FROM TGCORE.EVLKZ,PRD WHERE KZCPDM = CPCODE AND KZTYPE = 'ACCFM'
        ),
        GZ AS (
        SELECT COUNT(1) AS COUNT,GZCPDM PRDCODE FROM TGCORE.EVLGZ E,PRD WHERE E.GZDATE = #{date} AND E.GZCPDM = PRD.CPCODE GROUP BY E.GZCPDM
        ),
        GZ4QD AS (
        SELECT COUNT(1) AS COUNT,PRDCODE FROM TGCORE.EVALUATION E,PRD WHERE E.BIZDATE = #{date} AND E.PRDCODE = PRD.CPCODE GROUP BY E.PRDCODE
        ),
        ALLGZ AS (
        SELECT * FROM GZ
        UNION ALL
        SELECT * FROM GZ4QD
        )
        SELECT PRD.CPCODE,KZ.KZDATE,NVL(ALLGZ.COUNT, 0) COUNT FROM PRD
        LEFT JOIN KZ ON PRD.CPCODE = KZ.KZCPDM
        LEFT JOIN ALLGZ ON PRD.CPCODE = ALLGZ.PRDCODE
    </select>"
src\main\resources\mapper\monitor\MonResultJudgeMapper.xml,selectHoldIncrease,56,"    <select id=""selectHoldIncrease"" resultType=""java.util.Map"">
		WITH km AS(
            SELECT
                CASE KMCPLX WHEN 'BX' THEN ( CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END AS KMMKET,
                KMCPLX, KMCODE, KMKMBZ, KMBZXX
            FROM
                TGCORE.MONKM
            WHERE
                KMCPLX = #{subjectType}
                AND KMTYPE = 'CB'
                AND ISFINAL = 'Y'
                AND KMZQLS <![CDATA[<>]]> 'FZ'
		),
		kmgz AS (
            SELECT
                GZDATE,
                GZZQDM,
                NVL(KMMKET, ' ') KMMKET,
                KMKMBZ,
                KMBZXX,
                GZZHMC,
                GZGZSL
            FROM
                TGCORE.EVLGZ
                LEFT JOIN km ON KMCODE = GZZHDM
            WHERE
                GZDATE IN (#{monDate},#{monLastWorkDay}) AND GZCPDM = #{prdCode}
                <if test=""zhdms != null and zhdms.size() > 0"">
                    AND (GZZHDM,1) IN
                    <foreach collection=""zhdms"" item=""zhdm"" open=""("" separator="","" close="")"">
                        (#{zhdm},1)
                    </foreach>
                </if>

            UNION ALL

            SELECT
                GZDATE,
                GZZQDM,
                NVL(KMMKET, ' ') KMMKET,
                KMKMBZ,
                KMBZXX,
                GZZHMC,
                GZGZSL
            FROM
                TGCORE.EVLGZ
                LEFT JOIN km ON KMCODE = GZKMDM
            WHERE
                GZDATE IN (#{monDate},#{monLastWorkDay}) AND GZCPDM = #{prdCode}
                <if test=""zhdms != null and zhdms.size() > 0"">
                    AND (GZZHDM,1) IN
                    <foreach collection=""zhdms"" item=""zhdm"" open=""("" separator="","" close="")"">
                        (#{zhdm},1)
                    </foreach>
                </if>
		),
		holdsec AS (
			SELECT GZDATE, GZZQDM, KMMKET, GZZHMC, GZGZSL
			FROM kmgz
			WHERE (GZZQDM, KMMKET) IN
            <foreach collection=""assistKeyList"" item=""item"" open=""("" separator="","" close="")"">
                (#{item.secCode},#{item.market})
            </foreach>
		),
		LA AS (
            SELECT GZZQDM, KMMKET, GZZHMC, SUM(GZGZSL) GZGZSL
            FROM holdsec
            WHERE GZDATE = #{monLastWorkDay}
            GROUP BY GZZQDM, KMMKET, GZZHMC
		),
		TD AS (
            SELECT GZZQDM, KMMKET, GZZHMC, SUM(GZGZSL) GZGZSL
            FROM holdsec
            WHERE GZDATE = #{monDate}
            GROUP BY GZZQDM, KMMKET, GZZHMC
		),
		HOD AS (
            SELECT TD.GZZQDM, TD.KMMKET, TD.GZZHMC, TD.GZGZSL TD_GZGZSL, NVL(LA.GZGZSL, 0) LA_GZGZSL
            FROM TD LEFT JOIN LA ON TD.GZZQDM = LA.GZZQDM AND TD.KMMKET = LA.KMMKET AND TD.GZZHMC = LA.GZZHMC
		)
		SELECT
			GZZQDM,
			KMMKET,
			GZZHMC,
			CAST(TD_GZGZSL AS VARCHAR(40)) AS TD_GZGZSL,
			CAST(LA_GZGZSL AS VARCHAR(40)) AS LA_GZGZSL
		FROM HOD WHERE TD_GZGZSL > LA_GZGZSL
    </select>"
src\main\resources\mapper\njsq\MonNjAuthMapper.xml,selectHoldSec,324,"    <select id=""selectHoldSec"" parameterType=""cmb.custody.monitor.domain.njsq.entity.MonNjAuthRequest"" resultType=""cmb.custody.monitor.domain.njsq.entity.HoldSecEntity"">
        WITH JJG AS (
        SELECT GZZQDM,KMMKET AS GZMKET,GZGZSL,GZDWCB,GZCBZE,GZSZZE
        FROM TGCORE.EVLGZ, TGCORE.MONKM
        WHERE
        GZCPDM = #{prdcode,jdbcType=VARCHAR}
        AND GZDATE = #{gzDate,jdbcType=DATE}
        <if test=""jjcode != null"">
            AND GZZQDM = #{jjcode,jdbcType=VARCHAR}
        </if>
        AND GZKMDM = KMCODE
        AND LENGTH(TRIM(GZZHDM))>8
        <if test=""market != null"">
            AND KMMKET = #{market,jdbcType=VARCHAR}
        </if>
        AND KMCPLX = #{subjectType,jdbcType=VARCHAR}
        AND KMTYPE ='CB'
        AND KMLEVL ='3'
        AND KMZQLX = 'JJ'
        AND KMZQLS <![CDATA[<>]]> 'FZ'),
        YLG AS (
        SELECT GZZQDM,KMMKET AS GZMKET,GZGZSL,GZDWCB,GZCBZE,GZSZZE
        FROM TGCORE.EVLGZ, TGCORE.MONKM
        WHERE
        GZCPDM = #{prdcode,jdbcType=VARCHAR}
        AND GZDATE = #{gzDate,jdbcType=DATE}
        <if test=""jjcode != null"">
            AND GZZQDM = #{jjcode,jdbcType=VARCHAR}
        </if>
        AND GZKMDM = KMCODE
        AND LENGTH(TRIM(GZZHDM))>8
        <if test=""market != null"">
            AND KMMKET = #{market,jdbcType=VARCHAR}
        </if>
        AND KMCPLX = #{subjectType,jdbcType=VARCHAR}
        AND KMTYPE ='CB'
        AND KMLEVL ='3'
        AND KMZQLX = 'YL'
        AND KMZQLS <![CDATA[<>]]> 'FZ'),
        GZ AS (
        SELECT GZZQDM,GZMKET,GZGZSL,GZDWCB,GZCBZE,GZSZZE FROM JJG
        UNION
        SELECT GZZQDM,GZMKET,GZGZSL,GZDWCB,GZCBZE,GZSZZE FROM YLG),
        JY AS (
        SELECT JJCODE, JJMKET, JJGLRN, JJNAME, JJTYPE
        FROM TGCORE.MONJJ
        WHERE
        JJDATE = #{jjDate,jdbcType=DATE})
        SELECT
        GZZQDM,
        NVL(GZMKET, ' ') AS GZMKET,
        CSNAME AS GZMKETNAME,
        NVL(JJNAME, ' ') AS JJNAME,
        JJTYPE,
        JJGLRN,
        GZGZSL,
        GZDWCB,
        GZCBZE,
        GZSZZE
        FROM GZ
        LEFT JOIN JY ON JJCODE = GZZQDM AND GZMKET = JJMKET
        LEFT JOIN TGCORE.MONPM ON CSROOT = 'PUBMKET' AND CSFATH = 'PUBMKET' AND CSSSON=GZMKET
    </select>"
src\main\resources\mapper\njsq\MonNjAuthMapper.xml,selectLastDayHoldSec,388,"    <select id=""selectLastDayHoldSec"" parameterType=""cmb.custody.monitor.domain.njsq.entity.MonNjAuthRequest"" resultType=""cmb.custody.monitor.domain.njsq.entity.HoldSecEntity"">
        WITH JJG AS (
        SELECT GZZQDM,KMMKET AS GZMKET,GZGZSL
        FROM TGCORE.EVLGZ, TGCORE.MONKM
        WHERE
        GZCPDM = #{prdcode,jdbcType=VARCHAR}
        AND GZDATE = #{gzDate,jdbcType=DATE}
        AND GZZQDM = #{jjcode,jdbcType=VARCHAR}
        AND GZKMDM = KMCODE
        AND LENGTH(TRIM(GZZHDM))>8
        <if test=""market != null"">
            AND KMMKET = #{market,jdbcType=VARCHAR}
        </if>
        AND KMCPLX = #{subjectType,jdbcType=VARCHAR}
        AND KMTYPE ='CB'
        AND KMLEVL ='3'
        AND KMZQLX = 'JJ'
        AND KMZQLS <![CDATA[<>]]> 'FZ'),
        YLG AS (
        SELECT GZZQDM,KMMKET AS GZMKET,GZGZSL
        FROM TGCORE.EVLGZ, TGCORE.MONKM
        WHERE
        GZCPDM = #{prdcode,jdbcType=VARCHAR}
        AND GZDATE = #{gzDate,jdbcType=DATE}
        AND GZZQDM = #{jjcode,jdbcType=VARCHAR}
        AND GZKMDM = KMCODE
        AND LENGTH(TRIM(GZZHDM))>8
        <if test=""market != null"">
            AND KMMKET = #{market,jdbcType=VARCHAR}
        </if>
        AND KMCPLX = #{subjectType,jdbcType=VARCHAR}
        AND KMTYPE ='CB'
        AND KMLEVL ='3'
        AND KMZQLX = 'YL'
        AND KMZQLS <![CDATA[<>]]> 'FZ'),
        GZ AS (
        SELECT GZZQDM,GZMKET,GZGZSL FROM JJG
        UNION
        SELECT GZZQDM,GZMKET,GZGZSL FROM YLG)
        SELECT
        GZZQDM,
        NVL(GZMKET, ' ') AS GZMKET,
        GZGZSL
        FROM GZ
        FETCH FIRST 1 ROWS ONLY
    </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectByPrimaryKey,73,"  <select id=""selectByPrimaryKey"" parameterType=""map"" resultMap=""BaseResultMap"">
    select
    <include refid=""Base_Column_List""/>
    from TGCORE.EVLGZ
    where GZCPDM = #{gzcpdm,jdbcType=CHAR}
      and GZDATE = #{gzdate,jdbcType=DATE}
      and GZZHDM = #{gzzhdm,jdbcType=VARCHAR}
  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,deleteByPrimaryKey,81,"  <delete id=""deleteByPrimaryKey"" parameterType=""map"">
    delete from TGCORE.EVLGZ
    where GZCPDM = #{gzcpdm,jdbcType=CHAR}
      and GZDATE = #{gzdate,jdbcType=DATE}
      and GZZHDM = #{gzzhdm,jdbcType=VARCHAR}
  </delete>"
src\main\resources\mapper\prd\EvlgzMapper.xml,insert,87,"  <insert id=""insert"" parameterType=""cmb.custody.monitor.infrastructure.entity.prd.EvlTable"">
    insert into TGCORE.EVLGZ (GZCPDM, GZDATE, GZZHDM, 
      GZKMDM, GZZHMC, GZZQDM, 
      GZGZSL, GZDWCB, GZCBZE, 
      GZCBBL, GZGZJG, GZSZZE, 
      GZSZBL, GZGZZZ, GZZZBL, 
      GZGZFF, GZZZKM, GZQYXX, 
      GZBZXX, CREATE_TIME, UPDATE_TIME
      )
    values (#{gzcpdm,jdbcType=CHAR}, #{gzdate,jdbcType=DATE}, #{gzzhdm,jdbcType=VARCHAR}, 
      #{gzkmdm,jdbcType=VARCHAR}, #{gzzhmc,jdbcType=VARCHAR}, #{gzzqdm,jdbcType=CHAR}, 
      #{gzgzsl,jdbcType=DECIMAL}, #{gzdwcb,jdbcType=DECIMAL}, #{gzcbze,jdbcType=DECIMAL}, 
      #{gzcbbl,jdbcType=DECIMAL}, #{gzgzjg,jdbcType=DECIMAL}, #{gzszze,jdbcType=DECIMAL}, 
      #{gzszbl,jdbcType=DECIMAL}, #{gzgzzz,jdbcType=DECIMAL}, #{gzzzbl,jdbcType=DECIMAL}, 
      #{gzgzff,jdbcType=CHAR}, #{gzzzkm,jdbcType=VARCHAR}, #{gzqyxx,jdbcType=VARCHAR}, 
      #{gzbzxx,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>"
src\main\resources\mapper\prd\EvlgzMapper.xml,insertSelective,105,"  <insert id=""insertSelective"" parameterType=""cmb.custody.monitor.infrastructure.entity.prd.EvlTable"">
    insert into TGCORE.EVLGZ
    <trim prefix=""("" suffix="")"" suffixOverrides="","">
      <if test=""gzcpdm != null"">
        GZCPDM,
      </if>
      <if test=""gzdate != null"">
        GZDATE,
      </if>
      <if test=""gzzhdm != null"">
        GZZHDM,
      </if>
      <if test=""gzkmdm != null"">
        GZKMDM,
      </if>
      <if test=""gzzhmc != null"">
        GZZHMC,
      </if>
      <if test=""gzzqdm != null"">
        GZZQDM,
      </if>
      <if test=""gzgzsl != null"">
        GZGZSL,
      </if>
      <if test=""gzdwcb != null"">
        GZDWCB,
      </if>
      <if test=""gzcbze != null"">
        GZCBZE,
      </if>
      <if test=""gzcbbl != null"">
        GZCBBL,
      </if>
      <if test=""gzgzjg != null"">
        GZGZJG,
      </if>
      <if test=""gzszze != null"">
        GZSZZE,
      </if>
      <if test=""gzszbl != null"">
        GZSZBL,
      </if>
      <if test=""gzgzzz != null"">
        GZGZZZ,
      </if>
      <if test=""gzzzbl != null"">
        GZZZBL,
      </if>
      <if test=""gzgzff != null"">
        GZGZFF,
      </if>
      <if test=""gzzzkm != null"">
        GZZZKM,
      </if>
      <if test=""gzqyxx != null"">
        GZQYXX,
      </if>
      <if test=""gzbzxx != null"">
        GZBZXX,
      </if>
      <if test=""createTime != null"">
        CREATE_TIME,
      </if>
      <if test=""updateTime != null"">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix=""values ("" suffix="")"" suffixOverrides="","">
      <if test=""gzcpdm != null"">
        #{gzcpdm,jdbcType=CHAR},
      </if>
      <if test=""gzdate != null"">
        #{gzdate,jdbcType=DATE},
      </if>
      <if test=""gzzhdm != null"">
        #{gzzhdm,jdbcType=VARCHAR},
      </if>
      <if test=""gzkmdm != null"">
        #{gzkmdm,jdbcType=VARCHAR},
      </if>
      <if test=""gzzhmc != null"">
        #{gzzhmc,jdbcType=VARCHAR},
      </if>
      <if test=""gzzqdm != null"">
        #{gzzqdm,jdbcType=CHAR},
      </if>
      <if test=""gzgzsl != null"">
        #{gzgzsl,jdbcType=DECIMAL},
      </if>
      <if test=""gzdwcb != null"">
        #{gzdwcb,jdbcType=DECIMAL},
      </if>
      <if test=""gzcbze != null"">
        #{gzcbze,jdbcType=DECIMAL},
      </if>
      <if test=""gzcbbl != null"">
        #{gzcbbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzjg != null"">
        #{gzgzjg,jdbcType=DECIMAL},
      </if>
      <if test=""gzszze != null"">
        #{gzszze,jdbcType=DECIMAL},
      </if>
      <if test=""gzszbl != null"">
        #{gzszbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzzz != null"">
        #{gzgzzz,jdbcType=DECIMAL},
      </if>
      <if test=""gzzzbl != null"">
        #{gzzzbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzff != null"">
        #{gzgzff,jdbcType=CHAR},
      </if>
      <if test=""gzzzkm != null"">
        #{gzzzkm,jdbcType=VARCHAR},
      </if>
      <if test=""gzqyxx != null"">
        #{gzqyxx,jdbcType=VARCHAR},
      </if>
      <if test=""gzbzxx != null"">
        #{gzbzxx,jdbcType=VARCHAR},
      </if>
      <if test=""createTime != null"">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test=""updateTime != null"">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>"
src\main\resources\mapper\prd\EvlgzMapper.xml,updateByPrimaryKeySelective,238,"  <update id=""updateByPrimaryKeySelective"" parameterType=""cmb.custody.monitor.infrastructure.entity.prd.EvlTable"">
    update TGCORE.EVLGZ
    <set>
      <if test=""gzkmdm != null"">
        GZKMDM = #{gzkmdm,jdbcType=VARCHAR},
      </if>
      <if test=""gzzhmc != null"">
        GZZHMC = #{gzzhmc,jdbcType=VARCHAR},
      </if>
      <if test=""gzzqdm != null"">
        GZZQDM = #{gzzqdm,jdbcType=CHAR},
      </if>
      <if test=""gzgzsl != null"">
        GZGZSL = #{gzgzsl,jdbcType=DECIMAL},
      </if>
      <if test=""gzdwcb != null"">
        GZDWCB = #{gzdwcb,jdbcType=DECIMAL},
      </if>
      <if test=""gzcbze != null"">
        GZCBZE = #{gzcbze,jdbcType=DECIMAL},
      </if>
      <if test=""gzcbbl != null"">
        GZCBBL = #{gzcbbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzjg != null"">
        GZGZJG = #{gzgzjg,jdbcType=DECIMAL},
      </if>
      <if test=""gzszze != null"">
        GZSZZE = #{gzszze,jdbcType=DECIMAL},
      </if>
      <if test=""gzszbl != null"">
        GZSZBL = #{gzszbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzzz != null"">
        GZGZZZ = #{gzgzzz,jdbcType=DECIMAL},
      </if>
      <if test=""gzzzbl != null"">
        GZZZBL = #{gzzzbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzff != null"">
        GZGZFF = #{gzgzff,jdbcType=CHAR},
      </if>
      <if test=""gzzzkm != null"">
        GZZZKM = #{gzzzkm,jdbcType=VARCHAR},
      </if>
      <if test=""gzqyxx != null"">
        GZQYXX = #{gzqyxx,jdbcType=VARCHAR},
      </if>
      <if test=""gzbzxx != null"">
        GZBZXX = #{gzbzxx,jdbcType=VARCHAR},
      </if>
      <if test=""createTime != null"">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test=""updateTime != null"">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where GZCPDM = #{gzcpdm,jdbcType=CHAR}
      and GZDATE = #{gzdate,jdbcType=DATE}
      and GZZHDM = #{gzzhdm,jdbcType=VARCHAR}
  </update>"
src\main\resources\mapper\prd\EvlgzMapper.xml,updateByPrimaryKey,300,"  <update id=""updateByPrimaryKey"" parameterType=""cmb.custody.monitor.infrastructure.entity.prd.EvlTable"">
    update TGCORE.EVLGZ
    set GZKMDM = #{gzkmdm,jdbcType=VARCHAR},
      GZZHMC = #{gzzhmc,jdbcType=VARCHAR},
      GZZQDM = #{gzzqdm,jdbcType=CHAR},
      GZGZSL = #{gzgzsl,jdbcType=DECIMAL},
      GZDWCB = #{gzdwcb,jdbcType=DECIMAL},
      GZCBZE = #{gzcbze,jdbcType=DECIMAL},
      GZCBBL = #{gzcbbl,jdbcType=DECIMAL},
      GZGZJG = #{gzgzjg,jdbcType=DECIMAL},
      GZSZZE = #{gzszze,jdbcType=DECIMAL},
      GZSZBL = #{gzszbl,jdbcType=DECIMAL},
      GZGZZZ = #{gzgzzz,jdbcType=DECIMAL},
      GZZZBL = #{gzzzbl,jdbcType=DECIMAL},
      GZGZFF = #{gzgzff,jdbcType=CHAR},
      GZZZKM = #{gzzzkm,jdbcType=VARCHAR},
      GZQYXX = #{gzqyxx,jdbcType=VARCHAR},
      GZBZXX = #{gzbzxx,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where GZCPDM = #{gzcpdm,jdbcType=CHAR}
      and GZDATE = #{gzdate,jdbcType=DATE}
      and GZZHDM = #{gzzhdm,jdbcType=VARCHAR}
  </update>"
src\main\resources\mapper\prd\EvlgzMapper.xml,obtainGzzhdm,324,"    <select id=""obtainGzzhdm"" resultType=""java.util.Map"">
        SELECT distinct KMMKET, GZZQDM, GZZHMC
        FROM TGCORE.EVLGZ,
             TGCORE.MONKM
        WHERE GZKMDM = kmcode
          AND kmtype = 'CB'
          AND KMCPLX = #{kmcplx}
          AND GZDATE = #{date}
          AND GZCPDM = #{prdCode}
          AND KMMKET != ' '
    </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectStockHold,370,"    <select id=""selectStockHold"" resultMap=""StockEvlMap"">
      select GZZQDM, GZCBZE, GZSZZE, KMMKET from TGCORE.EVLGZ, TGCORE.MONKM
      where GZKMDM = KMCODE and KMTYPE= 'CB' and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS != 'FZ'
      and GZCPDM = #{prdCode, jdbcType=VARCHAR} AND GZDATE = #{monDate, jdbcType=DATE} and KMCPLX = #{subjectType, jdbcType=VARCHAR}
    </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectStockHoldDetail,376,"  <select id=""selectStockHoldDetail"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.StockTopN"">
    WITH  STOCKLIST AS (select GZZQDM,  GZSZZE, (SELECT GPSWYJ FROM TGCORE.MONGP WHERE GPDATE = #{monDate, jdbcType=DATE} AND GPCODE = GZZQDM) AS SWYJ
 	  from TGCORE.EVLGZ, TGCORE.MONKM
      where GZKMDM = KMCODE and KMTYPE= 'CB' and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS != 'FZ'
      and GZCPDM =#{prdCode, jdbcType=VARCHAR} AND GZDATE = #{monDate, jdbcType=DATE}  and KMCPLX = #{subjectType, jdbcType=VARCHAR})

     SELECT GZZQDM,(SELECT GPNAME FROM TGCORE.MONGP WHERE GPCODE = GZZQDM AND GPDATE = #{monDate, jdbcType=DATE}) AS GPNAME, GZSZZE,SWYJ
     FROM
     STOCKLIST X
      WHERE X.SWYJ IN (SELECT SWYJ FROM
						   (SELECT SWYJ,SUM(GZSZZE) AS GZSZZE
						   FROM
						   STOCKLIST A
						      GROUP BY SWYJ) B
						     ORDER BY GZSZZE DESC
						     FETCH FIRST #{topN, jdbcType=INTEGER} ROWS ONLY)
     ORDER BY SWYJ,GZSZZE

  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectStockHoldWithCh,395,"  <select id=""selectStockHoldWithCh"" resultMap=""StockEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    with GP as (
    select GPCODE, GPMKET, GPQFXR, GPNAME from TGCORE.MONGP where GPDATE = #{monDate} ),
    CC as (
    select GZZQDM,KMMKET GZMKET,SUM(NVL(GZGZSL,0)) AS GZGZSL
    from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=#{prdCode} and GZDATE=#{monDate}
    and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS != 'FZ' GROUP BY GZZQDM,KMMKET )
    select distinct CC.GZZQDM, CC.GZMKET,CC.GZGZSL, NVL(GPQFXR,' ') GPQFXR, NVL(GPNAME,' ') GPNAME from CC left join GP
    on CC.GZZQDM=GP.GPCODE and CC.GZMKET=GP.GPMKET
  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectJJHold,451,"  <select id=""selectJJHold"" resultMap=""JJEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    with GZ as (
    select GZZQDM, KMMKET GZMKET,SUM(NVL(GZGZSL,0)) AS GZGZSL
    from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=#{prdCode} and GZDATE=#{monDate}
    and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX = 'JJ' and KMZQLS != 'FZ' GROUP BY GZZQDM,KMMKET ),
    JJ as (select JJCODE, JJMKET, JJGLRN, JJTGRN, JJNAME from TGCORE.MONJJ where JJDATE = #{monDate})
    select distinct GZ.GZZQDM, GZ.GZMKET,GZ.GZGZSL, NVL(JJ.JJGLRN,' ') JJGLRN, NVL(JJ.JJTGRN,' ') JJTGRN,
    NVL(JJ.JJNAME,' ') JJNAME from GZ left join JJ on GZ.GZZQDM=JJ.JJCODE and GZ.GZMKET=JJ.JJMKET
  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectBondHold,495,"  <select id=""selectBondHold"" resultMap=""BondEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    with
    YZ as(select distinct 'Y' as MKET, YZZQDM as ZQDM from TGCORE.YHJZQ where YZCPDM=#{prdCode} and YZDATE between #{startDate} and #{monDate} and
    YZJYLX = 'F'),
    WX as (select distinct XGMKET as MKET, XGZQDM as ZQDM from TGCORE.EVLXG where XGCPDM = #{prdCode} and XGDATE between #{startDate} and #{monDate}
    and XGYWLB = 'WXPZ' and XGSTAT = 'A'),
    QS as (select distinct QSMKET as MKET, QSZQDM as ZQDM from TGCORE.JYSQS where QSCPDM=#{prdCode} and QSDATE between #{startDate} and #{monDate} and
    QSYWBZ = 'KZZQ'),
    JY as (select MKET, ZQDM from YZ union select MKET,ZQDM from WX union select MKET, ZQDM from QS),
    GZ as (select GZZQDM,KMMKET GZMKET,
    SUM(NVL(GZGZSL,0)) AS GZGZSL from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=#{prdCode} and GZDATE=#{monDate}
    and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS != 'FZ' GROUP BY
    GZZQDM,KMMKET),
    ZQ as (select ZQCODE,ZQMKET,ZQZQLB,ZQFXRN,ZQYSQY,ZQNAME,SCRITY from TGCORE.MONZQ where ZQSYFW = 'P' and ZQDATE = #{monDate})
    select distinct GZ.GZZQDM,GZ.GZMKET,GZ.GZGZSL, NVL(ZQ.ZQZQLB,' ') ZQZQLB,NVL(ZQ.ZQFXRN,' ') ZQFXRN,NVL(ZQ.ZQYSQY,' ') ZQYSQY,
    NVL(ZQ.ZQNAME,' ') ZQNAME, NVL(ZQ.SCRITY, ' ') AS SCRITY from GZ left join ZQ on GZ.GZZQDM=ZQ.ZQCODE and GZ.GZMKET=ZQ.ZQMKET
    where NOT EXISTS (select 1 from JY where GZMKET=MKET and GZZQDM=ZQDM)
  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectNewBondHold,564,"  <select id=""selectNewBondHold"" resultMap=""BondEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    with
    YZ as(select distinct 'Y' as MKET, YZZQDM as ZQDM from TGCORE.YHJZQ where YZCPDM=#{prdCode} and YZDATE between #{startDate} and #{monDate} and YZJYLX = 'F'),
    WX as (select distinct XGMKET as MKET, XGZQDM as ZQDM from TGCORE.EVLXG where XGCPDM = #{prdCode} and XGDATE between #{startDate} and #{monDate} and XGYWLB = 'WXPZ' and XGSTAT = 'A'),
    QS as (select distinct QSMKET as MKET, QSZQDM as ZQDM from TGCORE.JYSQS where QSCPDM=#{prdCode} and QSDATE between #{startDate} and #{monDate} and QSYWBZ = 'KZZQ'),
    JY as (select MKET, ZQDM from YZ union select MKET,ZQDM from WX union select MKET, ZQDM from QS),
    <choose>
      <when test=""prdType == 'QD' or prdType == 'QF' or prdType == 'BX'"">
        CC as (select distinct KMMKET GZMKET, SECCODE GZZQDM
        from TGCORE.EVALUATION,TGCORE.MONKM where BIZDATE=#{monDate} and PRDCODE=#{prdCode}
        and COACODE=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS != 'FZ'
        and KMKMBZ='CNY' and KMBZXX!='OVERSEA'),
      </when>
      <otherwise>
        CC as (select distinct KMMKET GZMKET, GZZQDM
        from TGCORE.EVLGZ,TGCORE.MONKM where GZDATE = #{monDate} and GZCPDM = #{prdCode}
        and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS != 'FZ'),
      </otherwise>
    </choose>
    ZQ as (select ZQMKET, ZQCODE, ZQZCXS,ZQZQLB,ZQFXRN,ZQYSQY,ZQNAME,ZQCXSD, ZQCXED, SCRITY from TGCORE.MONZQ where ZQDATE = #{monDate} and ZQSYFW =
    'P')
    select distinct CC.GZZQDM, CC.GZMKET, NVL(ZQ.ZQZCXS,' ') ZQZCXS, NVL(ZQ.ZQZQLB,' ') ZQZQLB,
    NVL(ZQ.ZQFXRN,' ') ZQFXRN, NVL(ZQ.ZQYSQY,' ') ZQYSQY, NVL(ZQ.ZQNAME,' ') ZQNAME, ZQ.ZQCXSD, ZQ.ZQCXED, NVL(ZQ.SCRITY, ' ') AS SCRITY from CC left
    join ZQ
    on GZMKET=ZQMKET and GZZQDM=ZQCODE where EXISTS
    (select 1 from JY where CC.GZMKET=MKET and CC.GZZQDM=ZQDM)
  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectHoldByProduct,591,"  <select id=""selectHoldByProduct"" resultMap=""SubjectEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    select GZCPDM, GZDATE, GZZQDM, kmmket, KMZQLX, GZZHMC
    from TGCORE.EVLGZ, TGCORE.MONKM where gzcpdm = #{prdCode} and gzdate = #{monDate} AND kmcplx= #{subjectType}
    and KMTYPE= 'CB' and ISFINAL='Y' and KMZQLS != 'FZ' and kmcode =gzkmdm
  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectXyzHold,602,"  <select id=""selectXyzHold"" resultMap=""BondEvlMap"">
    with kmgz as (select GZZQDM,KMMKET GZMKET, GZSZZE, KMZQLX from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM = #{prdCode} and GZDATE = #{monDate} and GZKMDM = KMCODE
    and KMCPLX= #{subjectType}  and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS != 'FZ' and KMTYPE in ('CB','YZ','JZZB01','JZZB03','JZZB02','LX','YJLX'))
    select kmgz.*, ZQNAME,ZQZQLB,ZQFXRN,ZQYSQY from kmgz inner join TGCORE.MONZQ on GZMKET=ZQMKET and GZZQDM=ZQCODE
    where ZQDATE=#{monDate} and ZQSYFW='P' and ZQSTAT='A'
    <if test=""bondTypes != null and bondTypes.size() > 0"">
      and ZQZQLB in
      <foreach collection=""bondTypes"" open=""("" close="")"" separator="","" item=""item"">
        #{item}
      </foreach>
    </if>

  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectHoldBySelective,642,"  <select id=""selectHoldBySelective"" resultMap=""SubjectEvlMap"">
    select distinct GZDATE, GZCPDM, GZZQDM, KMMKET, KMZQLX,sum(GZSZZE) GZSZZE, GZGZJG FROM TGCORE.EVLGZ, TGCORE.MONKM
    where GZCPDM = #{prdCode} and GZDATE between #{startDate, jdbcType=TIMESTAMP} and #{endDate, jdbcType=TIMESTAMP} and KMCPLX = #{prdSubjectType}
    and KMTYPE = 'CB' and ISFINAL='Y' and KMZQLS != 'FZ' and GZKMDM = KMCODE
    <if test=""kmSecTypes != null and kmSecTypes.size() != 0"">
      and KMZQLX in
      <foreach collection=""kmSecTypes"" separator="","" item=""item"" open=""("" close="")"">
        #{item}
      </foreach>
    </if>
    group by GZDATE, GZCPDM, GZZQDM, KMMKET, KMZQLX, GZGZJG
    order by GZCPDM, GZZQDM, KMMKET, GZDATE
  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectPensionHold,662,"  <select id=""selectPensionHold"" resultMap=""JJEvlMap"">
    with GZ as (
    select GZZQDM, KMMKET GZMKET,SUM(NVL(GZGZSL,0)) AS GZGZSL from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=#{prdCode} and GZDATE=#{monDate}
    and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX = 'YL' and KMZQLS != 'FZ' GROUP BY GZZQDM,KMMKET ),
    JJ as (select JJCODE, JJMKET, JJGLRN, JJTGRN, JJNAME from TGCORE.MONJJ where JJDATE = #{monDate})
    select distinct GZ.GZZQDM, GZ.GZMKET,GZ.GZGZSL, NVL(JJ.JJGLRN,' ') JJGLRN, NVL(JJ.JJTGRN,' ') JJTGRN,
    NVL(JJ.JJNAME,' ') JJNAME from GZ left join JJ on GZ.GZZQDM=JJ.JJCODE and GZ.GZMKET=JJ.JJMKET
  </select>"
src\main\resources\mapper\prd\EvlgzMapper.xml,selectCmpSpvHold,670,"  <select id=""selectCmpSpvHold"" resultMap=""SpvEvlMap"">
    WITH GZ AS (SELECT GZZQDM, GZSZZE, GZDATE, GZZHMC, GZCPDM, KMMKET AS GZMKET, GZZHDM FROM TGCORE.EVLGZ, TGCORE.MONKM
    WHERE gzcpdm = #{prdCode} AND gzdate = #{monDate} AND KMCODE = GZKMDM AND KMCPLX = #{subjectType}
    AND ISFINAL = 'Y' AND KMTYPE IN ('CB', 'YZ') AND KMZQLX = 'SPV' AND KMZQLS NOT IN ('FZ', 'WY'))
    SELECT distinct GZ.GZZQDM, GZ.GZMKET, NVL(SPV.ZQFXR, ' ') AS ZQFXR, #{prdCode} AS PRDCODE,
    NVL(SPV.ZQNAME, ' ') AS ZQNAME, NVL(SPV.ZQZQLB, ' ') AS SPVTYPE
    FROM GZ LEFT JOIN (SELECT * FROM TGCORE.MONSPV WHERE (ZQCODE,ZQCPDM) IN (SELECT ZQCODE,max(ZQCPDM) ZQCPDM FROM TGCORE.MONSPV
    WHERE ZQCPDM=#{prdCode} OR ZQCPDM=' ' GROUP BY ZQCODE)) SPV
    ON ZQMKET = GZMKET AND ZQCODE = GZZQDM
  </select>"
src\main\resources\mapper\sec\FundMapper.xml,getSZZEByFundCode,486,"  <select id=""getSZZEByFundCode"" resultType=""cmb.custody.monitor.domain.index.entity.StockHoldInfo"">
    with kmgz as (select NVL(GZSZZE,0) GZSZZE, GZZQDM,CASE KMCPLX WHEN 'BX' THEN (CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END AS
    KMMKET from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM= #{prdCode} and GZDATE= #{monDate} and GZKMDM=KMCODE and KMCPLX= #{subjectType}  and
    ISFINAL='Y' and KMZQLX in('JJ') AND KMTYPE  ='CB' and KMZQLS != 'FZ' AND GZZQDM IN
    <foreach collection=""fundCodeList"" separator="","" item=""fundCode"" open=""("" close="")"">
      #{fundCode}
    </foreach>)
    select GZZQDM AS ZSZQDM, JJNAME AS ZSZQMC, KMMKET AS ZSMKET, GZSZZE
    from kmgz left join (select JJNAME,JJCODE,JJMKET FROM TGCORE.MONJJ where JJDATE = #{monDate,jdbcType=DATE})
    on jjcode = gzzqdm and jjmket = kmmket
  </select>"
src\main\resources\mapper\verify\MonitorVerifyMapper.xml,selectEvaluateCount,18,"    <select id=""selectEvaluateCount"" resultType=""java.lang.Integer"">
        select count(*)
            from TGCORE.EVLGZ
        where GZDATE = #{date}
        AND   GZCPDM = #{prdCode}
        FETCH FIRST 1 ROWS ONLY
    </select>"
src\main\resources\mapper\verify\MonitorVerifyMapper.xml,getRecentGzDate,104,"    <select id=""getRecentGzDate"" resultType=""java.sql.Date"">
        WITH gzrq AS (SELECT GZDATE FROM tgcore.EVLGZ WHERE GZCPDM=#{prdCode}  AND GZZHDM=#{zhdm} AND GZDATE  &lt; #{gzdate}  ORDER BY GZDATE DESC )
        SELECT max(RLDATE) AS  GZDATE  FROM tgcore.PUBRL,gzrq  WHERE GZDATE = RLDATE and RLWORK='Y'
    </select>"
src\main\resources\mapper\zyyx\ZyyxMapper.xml,listZyyxOnlyHoldingSummary,114,"    <select id=""listZyyxOnlyHoldingSummary"" resultMap=""zyyxMonResultMap"">
        <include refid=""subjectPrdType"" />
        kmgz AS (
            select
                DISTINCT GZCPDM, KMMKET AS GZMKET, GZZQDM, GZDATE from subjectPrdType,TGCORE.EVLGZ,TGCORE.MONKM
            where GZCPDM = subjectPrdType.prdCode
            AND  GZDATE >= #{startDate} AND GZDATE <![CDATA[<=]]> #{endDate}
            and KMCPLX=subjectPrdType.subject_type
            and KMCODE=GZKMDM and KMZQLX = 'GP' and ISFINAL='Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ'
        ),
        zyyx as(
            SELECT
                BUSDATE,GPCODE,GPMKET,GPNAME,TRADEDATE,SECUTYPE from TGCORE.MON_ZYYXJXT
            where BUSDATE BETWEEN #{startDate} AND #{endDate} and SECUTYPE = 'A股'
        ),
        ccresult AS (
            SELECT
                DISTINCT kmgz.GZCPDM, kmgz.GZMKET, kmgz.GZZQDM, NVL(zyyx.GPCODE,' ')  AS notCovered
            FROM kmgz
            LEFT JOIN zyyx ON kmgz.GZDATE = zyyx.BUSDATE AND kmgz.GZZQDM = zyyx.GPCODE AND kmgz.GZMKET = zyyx.GPMKET
        ),
        converedCcResult AS (
            SELECT * FROM ccresult WHERE GZZQDM = notCovered
        ),
        ccresultRecord AS (
            SELECT DISTINCT ccresult.GZCPDM, ccresult.GZMKET, ccresult.GZZQDM FROM ccresult
        ),
        lastestGpDate as(
            SELECT max(gpdate) AS lastestGpdate FROM TGCORE.MONGP
        )
        SELECT
            ccresultRecord.*,NVL(gpname,' ') AS gpname, NVL(converedCcResult.notCovered,' ') AS notCovered,'持仓匹配' AS matchingMode
        FROM ccresultRecord
        LEFT JOIN converedCcResult ON converedCcResult.GZMKET = ccresultRecord.GZMKET AND converedCcResult.GZZQDM = ccresultRecord.GZZQDM
        LEFT JOIN (
            SELECT
                GPMKET,GPCODE,GPDATE,gpname FROM TGCORE.MONGP,lastestGpDate
            WHERE GPDATE = lastestGpDate.lastestGpdate
        ) lastestMonGP on GPMKET = ccresultRecord.GZMKET AND GPCODE = ccresultRecord.GZZQDM
    </select>"
src\main\resources\mapper\zyyx\ZyyxMapper.xml,listZyyxSummary,156,"    <select id=""listZyyxSummary"" resultMap=""zyyxSummaryMap"">
        <include refid=""subjectPrdType"" />
        kmgz AS (
            select
                DISTINCT GZCPDM, KMMKET AS GZMKET, GZZQDM, GZDATE from subjectPrdType,TGCORE.EVLGZ,TGCORE.MONKM
            where GZCPDM = subjectPrdType.prdCode
            AND  GZDATE >= #{startDate} AND GZDATE <![CDATA[<=]]> #{endDate}
            and KMCPLX=subjectPrdType.subject_type
            and KMCODE=GZKMDM and KMZQLX = 'GP' and ISFINAL='Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ'
        ),
        zyyx as(
            SELECT
                BUSDATE,GPCODE,GPMKET,GPNAME,TRADEDATE,SECUTYPE from TGCORE.MON_ZYYXJXT
            where BUSDATE BETWEEN #{startDate} AND #{endDate} and SECUTYPE = 'A股'
        ),
        ccresult AS (
            SELECT
                DISTINCT kmgz.GZCPDM, kmgz.GZMKET, kmgz.GZZQDM, NVL(zyyx.GPCODE,' ')  AS notCovered
            FROM kmgz
            LEFT JOIN zyyx ON kmgz.GZDATE = zyyx.BUSDATE AND kmgz.GZZQDM = zyyx.GPCODE AND kmgz.GZMKET = zyyx.GPMKET
        ),
        converedCcResult AS (
            SELECT * FROM ccresult WHERE GZZQDM = notCovered
        ),
        ccresultRecord AS (
            SELECT DISTINCT ccresult.GZCPDM, ccresult.GZMKET, ccresult.GZZQDM FROM ccresult
        ),
        ccSummary as(
            SELECT
                ccresultRecord.*,' ' AS gpname, NVL(converedCcResult.notCovered,' ') AS notCovered,'持仓匹配' AS matchingMode
            FROM ccresultRecord
            LEFT JOIN converedCcResult ON converedCcResult.GZMKET = ccresultRecord.GZMKET AND converedCcResult.GZZQDM = ccresultRecord.GZZQDM
        ),
        jyRecord AS (
            SELECT
                XGDATE AS GZDATE,XGCPDM AS GZCPDM,XGZQDM AS gzzqdm,XGMKET AS GZMKET
            FROM TGCORE.EVLXG
            WHERE XGDATE BETWEEN #{startDate} and #{endDate}
            AND xgcpdm = #{prdCode} AND XGSTAT = 'A' AND xgcjsl > 0
            UNION
            SELECT
                QSDATE AS GZDATE,QSCPDM AS GZCPDM,QSGQDM AS gzzqdm,QSMKET AS GZMKET
            FROM TGCORE.JYSQS
            WHERE qsdate BETWEEN #{startDate} and #{endDate}
            AND QSCPDM = #{prdCode}  AND QSMMBZ = 'B' AND QSSTAT = 'A' AND qscjsl > 0
        ),
        jydetail AS (
            SELECT
                GZDATE,GZCPDM,gzzqdm,GZMKET,NVL(zyyx.GPCODE,' ') AS notCovered
            FROM jyRecord
            LEFT JOIN zyyx ON jyRecord.GZDATE = zyyx.BUSDATE AND jyRecord.GZZQDM = zyyx.GPCODE AND jyRecord.GZMKET = zyyx.GPMKET
        ),
        jyresultRecord AS (
            SELECT DISTINCT GZCPDM,GZMKET,gzzqdm FROM jyDetail
        ),
        converedJyResult AS (
            SELECT * FROM jydetail WHERE GZZQDM = notCovered
        ),
        jySummary AS (
            SELECT jyresultRecord.*,' ' AS gpname, NVL(converedJyResult.notCovered,' ') AS notCovered,'交易匹配' AS matchingMode
                FROM jyresultRecord
            LEFT JOIN converedJyResult ON converedJyResult.GZMKET = jyresultRecord.GZMKET AND converedJyResult.GZZQDM = jyresultRecord.GZZQDM
        )
        SELECT
            nvl(ccSummary.gzcpdm,' ') as  holdingPrdCode,nvl(ccSummary.gzmket,' ') AS holdingMarket,
            nvl(ccSummary.gzzqdm,' ') AS holdingStockCode,nvl(ccSummary.gpname,' ') AS holdingStockName,
            nvl(ccSummary.notcovered,' ') AS holdingNotCovered, nvl(ccSummary.matchingmode,' ') AS holdingMatchingMode,
            nvl(jySummary.gzcpdm,' ') as tradingPrdCode,nvl(jySummary.gzmket,' ') AS tradingMarket, nvl(jySummary.gzzqdm,' ') AS tradingStockCode,
            nvl(jySummary.gpname,' ') AS tradingStockName, nvl(jySummary.notcovered,' ') AS tradingNotCovered,
            nvl(jySummary.matchingmode,' ') AS tradingMatchingMode
        FROM ccSummary
        FULL JOIN jySummary ON ccSummary.gzmket = jySummary.gzmket AND ccSummary.gzzqdm = jySummary.gzzqdm
    </select>"
src\main\resources\mapper\zyyx\ZyyxMapper.xml,listZyyxHolding,230,"    <select id=""listZyyxHolding"" resultMap=""zyyxHoldingResultMap"">
        <include refid=""subjectPrdType"" />
        kmgz AS (
            select
                GZCPDM, KMMKET AS GZMKET, GZZQDM, GZDATE,SUM(GZGZSL) AS GZGZSL from subjectPrdType,TGCORE.EVLGZ,TGCORE.MONKM
            where GZCPDM = subjectPrdType.prdCode
            AND  GZDATE >= #{startDate} AND GZDATE <![CDATA[<=]]> #{endDate}
            AND KMCPLX=subjectPrdType.subject_type
            AND KMCODE=GZKMDM and KMZQLX = 'GP' and ISFINAL='Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ'
            GROUP BY GZCPDM,GZDATE,KMMKET,GZZQDM
        ),
        ccgp as(
            SELECT
                kmgz.*, GPNAME from kmgz
            left join TGCORE.MONGP on GPDATE = kmgz.GZDATE AND GPMKET = kmgz.GZMKET AND GPCODE = kmgz.GZZQDM
        ),
        zyyx as(
            SELECT
                BUSDATE,GPCODE,GPMKET,GPNAME,TRADEDATE,SECUTYPE from TGCORE.MON_ZYYXJXT
            where BUSDATE BETWEEN #{startDate} AND #{endDate} and SECUTYPE = 'A股'
        )
        SELECT
            ccgp.GZCPDM,ccgp.GZDATE, ccgp.GZMKET, ccgp.GZZQDM, ccgp.GPNAME,ccgp.GZGZSL,NVL(zyyx.GPCODE,' ')  AS notCovered,' ' AS matchingMode
        FROM ccgp
        LEFT JOIN zyyx ON ccgp.GZDATE = zyyx.BUSDATE AND ccgp.GZZQDM = zyyx.GPCODE AND ccgp.GZMKET = zyyx.GPMKET
        ORDER BY ccgp.GZCPDM,ccgp.GZDATE,ccgp.GZZQDM
    </select>"
target\classes\mapper\Fof4RetisMapper.xml,getJJReits,57,"    <select id=""getJJReits""  resultMap=""BaseResultMap2"">
        with
        CPJJ as (select KMMKET as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = #{prdType} and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJXX as (select JJMKET,JJCODE, JJNAME,JJGLRN,JJTYPE from TGCORE.MONJJ where JJDATE=#{monDate}
        )
        select GZMKET as JJMKET,GZZQDM as JJCODE, JJNAME,JJGLRN,JJTYPE
        from CPJJ LEFT JOIN JJXX on JJMKET = GZMKET and JJCODE = GZZQDM
    </select>"
target\classes\mapper\GxBondDeclineMapper.xml,getBondInfo,9,"<select id=""getBondInfo"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.GxBondEntity"">
    WITH gz1 AS
             (SELECT GZSZZE,
                     CASE
                         WHEN KMTYPE = 'CB' THEN
                             G.GZGZJG
                         ELSE 0 END AS GZGZJG,
                     CASE
                         WHEN KMTYPE = 'CB' THEN
                             1
                         ELSE 0 END AS num,
                     G.GZZQDM,
                     M.KMMKET
              FROM TGCORE.EVLGZ g,
                   TGCORE.MONKM m
              WHERE 1 = 1
                AND GZCPDM = #{prdCode}
                AND GZDATE = #{monDate}
                AND KMCODE = GZKMDM
                AND KMCPLX = #{subjectType}
                AND KMTYPE in ('CB', 'YZ', 'LX', 'YJLX', 'JZZB01', 'JZZB02', 'JZZB03')
                AND KMZQLX in ('ZQ', 'ZCZQ')
                AND ISFINAL = 'Y'
                AND KMZQLS != 'FZ'
             ),
         gz AS (
             SELECT SUM(GZSZZE)                        AS GZSZZE,
                    CASE
                        WHEN SUM(num) = 0 THEN 0
                        else
                            SUM(GZGZJG) / sum(num) end AS GZGZJG,
                    GZZQDM,
                    KMMKET
             FROM gz1
             GROUP BY GZZQDM, KMMKET
         ),
         zq AS (
             SELECT *
             FROM TGCORE.MONZQ m2
             WHERE m2.ZQSYFW = 'P'
               AND m2.ZQSTAT = 'A'
               AND ZQDATE = #{monDate}
         )
    SELECT GZSZZE,
           GZGZJG,
           GZZQDM,
    KMMKET,
    ZQCODE,
    ZQNAME,
    ZQZQLB
    FROM gz LEFT JOIN zq
    ON KMMKET = ZQMKET
    AND GZZQDM = ZQCODE
</select>"
target\classes\mapper\GxBondDeclineMapper.xml,getNoKzzBondInfoBefore,64,"<select id=""getNoKzzBondInfoBefore"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.GxBondEntity"">
    WITH gz1 AS
    (SELECT
    GZSZZE,
    CASE WHEN KMTYPE = 'CB' THEN
    G.GZGZJG ELSE 0 END AS GZGZJG,
    CASE WHEN KMTYPE = 'CB' THEN
    1 ELSE 0 END AS num,
    G.GZZQDM,
    M.KMMKET
    FROM TGCORE.EVLGZ g ,TGCORE.MONKM m
    WHERE 1 = 1
    AND GZCPDM = #{prdCode}
    AND GZDATE = #{monDate}
    AND KMCODE = GZKMDM
    AND KMCPLX = #{subjectType}
    AND KMTYPE in ('CB', 'YZ', 'LX', 'YJLX', 'JZZB01', 'JZZB02', 'JZZB03')
    AND KMZQLX in ('ZQ', 'ZCZQ')
    AND ISFINAL = 'Y'
    AND KMZQLS != 'FZ'
    and
    <foreach collection=""keys"" item=""item"" separator="" or "" open=""("" close="")"">
        GZZQDM = #{item.zqcode} and KMMKET = #{item.kmmket}
    </foreach>
    ),
    gz AS (
    SELECT
    SUM(GZSZZE) AS GZSZZE,
    CASE WHEN SUM(num) = 0 THEN 0 else
    SUM(GZGZJG)/sum(num) end AS GZGZJG,
    GZZQDM,
    KMMKET
    FROM gz1
    GROUP BY GZZQDM,KMMKET
    ),
    zq AS (
    SELECT * FROM TGCORE.MONZQ m2
    WHERE m2.ZQSYFW = 'P'
    AND m2.ZQSTAT = 'A'
    AND ZQDATE = #{monDate}
    )
    SELECT
    GZSZZE,
    GZGZJG,
    GZZQDM,
    KMMKET,
    ZQCODE,
    ZQNAME,
    ZQZQLB
    FROM gz LEFT JOIN zq
    ON KMMKET = ZQMKET
    AND GZZQDM = ZQCODE
</select>"
target\classes\mapper\JJFofMapper.xml,sumDZJJbyGlr,31,"    <select id=""sumDZJJbyGlr""  resultMap=""CcxxEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{manger} and CPSTAT='A' and CPCPLX = #{prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfofdzjjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{monDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        CPJJ as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJCC as (select  (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' then 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET,
        GZZQDM, GZSZZE from TGCORE.EVLGZ, TGCORE.MONKM
        where GZDATE=#{monDate} AND GZCPDM IN (select CPCODE from CP) and GZKMDM = KMCODE
        and KMCPLX = #{subjectType} and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        CCHZ as (select GZMKET,GZZQDM,sum(GZSZZE) CCZE from JJCC where (GZMKET, GZZQDM) in (select GZMKET,
        GZZQDM from CPJJ) group by GZMKET,GZZQDM),
        JJXX as (select JJMKET,JJCODE, JJJZCL, JJNAME from TGCORE.MONJJ where JJDATE=#{monDate} and (JJMKET,
        JJCODE) in (select GZMKET, GZZQDM from CPJJ))
        select GZMKET, GZZQDM, CCZE, NVL(JJJZCL, 0)JJJZCL,JJNAME
        from CCHZ left join JJXX on GZMKET=JJMKET and GZZQDM=JJCODE
    </select>"
target\classes\mapper\JJFofMapper.xml,sumDzjjbyjjglr,65,"    <select id=""sumDzjjbyjjglr"" resultMap=""CcxxEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{tyglfofSelectEntry.manger} and CPSTAT='A' and CPCPLX =
        #{tyglfofSelectEntry.prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" tyglfofSelectEntry.prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfofdzjjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{tyglfofSelectEntry.chDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" tyglfofSelectEntry.prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        JJCC as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8'
        then 'B' when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM, GZSZZE
        from TGCORE.EVLGZ,TGCORE.MONKM
        where GZDATE=#{tyglfofSelectEntry.gzDate}
        AND GZCPDM in (select CPCODE from CP)
        and KMCPLX = #{tyglfofSelectEntry.subjectType}
        and GZKMDM = KMCODE
        and KMZQLX = 'JJ'
        and ISFINAL = 'Y'
        and KMTYPE='CB'
        and KMZQLS != 'FZ' ),
        CCHZ as (select sum(GZSZZE)CCZE from JJCC where GZMKET=#{tyglfofSelectEntry.instructInfo.market} and
        GZZQDM=#{tyglfofSelectEntry.instructInfo.secCode}),
        JJXX as (select JJJZCL, JJNAME from TGCORE.MONJJ where JJDATE=#{tyglfofSelectEntry.chDate} and JJMKET =
        #{tyglfofSelectEntry.instructInfo.market}
        and JJCODE=#{tyglfofSelectEntry.instructInfo.secCode} )
        select NVL(CCZE,0) as CCZE, NVL(JJJZCL, 0) as JJJZCL, NVL(JJNAME, ' ') as JJNAME from CCHZ,JJXX
    </select>"
target\classes\mapper\JJFofMapper.xml,sumFeJJbyGlr,103,"    <select id=""sumFeJJbyGlr"" resultMap=""CcxxEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{manger} and CPSTAT='A' and CPCPLX = #{prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfoffejjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{monDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        CPJJ as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJCC as (select  (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' then 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET,
        GZZQDM, GZGZSL from TGCORE.EVLGZ, TGCORE.MONKM
        where GZDATE=#{monDate} AND GZCPDM IN (select CPCODE from CP) and GZKMDM = KMCODE
        and KMCPLX = #{subjectType} and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        CCHZ as (select GZMKET,GZZQDM,sum(GZGZSL) CCZE from JJCC where (GZMKET, GZZQDM) in (select GZMKET,
        GZZQDM from CPJJ) group by GZMKET,GZZQDM),
        JJXX as (select JJMKET,JJCODE, JJZFXL, JJNAME from TGCORE.MONJJ where JJDATE=#{monDate} and (JJMKET,
        JJCODE) in (select GZMKET, GZZQDM from CPJJ))
        select GZMKET, GZZQDM, CCZE, NVL(JJZFXL, 0)JJJZCL,JJNAME
        from CCHZ left join JJXX on GZMKET=JJMKET and GZZQDM=JJCODE

    </select>"
target\classes\mapper\JJFofMapper.xml,sumFeJJByJJGlr,138,"    <select id=""sumFeJJByJJGlr"" resultMap=""CcxxEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{tyglfofSelectEntry.manger} and CPSTAT='A' and CPCPLX = #{tyglfofSelectEntry.prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" tyglfofSelectEntry.prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfoffejjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{tyglfofSelectEntry.chDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" tyglfofSelectEntry.prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        JJCC as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM, GZGZSL
        from TGCORE.EVLGZ,TGCORE.MONKM
        where GZDATE=#{tyglfofSelectEntry.gzDate}
        AND GZCPDM in (select CPCODE from CP)
        and KMCPLX = #{tyglfofSelectEntry.subjectType}
        and GZKMDM = KMCODE
        and KMZQLX	 = 'JJ'
        and ISFINAL = 'Y'
        and KMTYPE='CB'
        and KMZQLS <![CDATA[<>]]> 'FZ' ),
        CCHZ as (select sum(GZGZSL)CCZE from JJCC where GZMKET=#{tyglfofSelectEntry.instructInfo.market} and
        GZZQDM=#{tyglfofSelectEntry.instructInfo.secCode} ),
        JJXX as (select JJZFXL, JJNAME from TGCORE.MONJJ where JJDATE=#{tyglfofSelectEntry.chDate}
        and JJMKET = #{tyglfofSelectEntry.instructInfo.market}
        and JJCODE=#{tyglfofSelectEntry.instructInfo.secCode} )
        select NVL(CCZE,0) as CCZE, NVL(JJZFXL, 0) as JJJZCL, NVL(JJNAME, ' ') as JJNAME from CCHZ,JJXX

    </select>"
target\classes\mapper\JJFofMapper.xml,selectDzjjzb,175,"    <select id=""selectDzjjzb""  resultMap=""TyglfofEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{manger} and CPSTAT='A' and CPCPLX = #{prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfofdzjjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{monDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        CPJJ as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJCC as (select  (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' then 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET,
        GZZQDM, GZSZZE,GZCPDM from TGCORE.EVLGZ, TGCORE.MONKM
        where GZDATE=#{monDate} AND GZCPDM IN (select CPCODE from CP) and GZKMDM = KMCODE
        and KMCPLX = #{subjectType} and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJXX as (select JJMKET,JJCODE, JJJZCL, JJNAME from TGCORE.MONJJ where JJDATE=#{monDate} and (JJMKET,
        JJCODE) in (select GZMKET, GZZQDM from JJCC))
        select GZCPDM,(select CPSNAM from TGCORE.MONPR where CPCODE = GZCPDM) AS CPSNAM,GZZQDM,JJNAME,GZMKET,nvl(GZSZZE,0) as CCZE,nvl(JJJZCL,0) as JJJZCL
        from JJCC
        left join JJXX on GZMKET=JJMKET and GZZQDM=JJCODE
        where GZZQDM is not null and GZZQDM != ' '
        order by GZZQDM

    </select>"
target\classes\mapper\JJFofMapper.xml,selectFejjzb,211,"    <select id=""selectFejjzb"" resultMap=""TyglfofEntry"">
        with
        JJLCCP as (select CPCODE from TGCORE.MONPR where CPMNAM= #{manger} and CPSTAT='A' and CPCPLX = #{prdType} and
        (INSTR(CPSNAM, '联接')=0 and INSTR(CPLNAM, '联接')=0) ),
        <if test="" prdType == 'LC' "">
            CP as (select CPCODE from TGCORE.MON_INDEX_INFO T, TGCORE.MON_INDEX_INSTANCE Z, JJLCCP P
            where T.INDEX_ID = Z.INDEX_ID
            and  T.COMPLEX_CLASS_NAME = 'Tyglfoffejjzb'
            and Z.MON_OBJECT = CPCODE
            AND T.STATE = 'A'
            AND Z.STATE = 'A'
            and Z.USE_STATE = 'ENABLE'
            and #{monDate} between Z.START_DATE and Z.END_DATE ),
        </if>
        <if test="" prdType != 'LC' "">
            CP as (select CPCODE from JJLCCP),
        </if>
        CPJJ as (select (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' THEN 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET ,
        GZZQDM from TGCORE.EVLGZ,TGCORE.MONKM where
        GZDATE=#{monDate} AND GZCPDM=#{prdCode} and KMCPLX = #{subjectType} and GZKMDM = KMCODE
        and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and
        KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJCC as (select  (case substr(GZZHDM,5,1) when '1' then 'H' when '3' then 'S' when '4' then 'J' when '5' then 'Y' when '6' then 'K' when '8' then 'B'  when '9' then 'X' else ' ' end) as GZMKET,
        GZZQDM, GZGZSL,GZCPDM from TGCORE.EVLGZ, TGCORE.MONKM
        where GZDATE=#{monDate} AND GZCPDM IN (select CPCODE from CP) and GZKMDM = KMCODE
        and KMCPLX = #{subjectType} and KMZQLX = 'JJ' and ISFINAL = 'Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        JJXX as (select JJMKET,JJCODE, JJZFXL, JJNAME from TGCORE.MONJJ where JJDATE=#{monDate} and (JJMKET,
        JJCODE) in (select GZMKET, GZZQDM from JJCC))
        select GZCPDM,(select CPSNAM from TGCORE.MONPR where CPCODE = GZCPDM) AS CPSNAM,GZZQDM,JJNAME,GZMKET,nvl(GZGZSL,0) as CCZE,nvl(JJZFXL,0) as JJJZCL
        from JJCC
        left join JJXX on GZMKET=JJMKET and GZZQDM=JJCODE
        where GZZQDM is not null and GZZQDM != ' '
        order by GZZQDM

    </select>"
target\classes\mapper\MaxDrawdownMapper.xml,selectNetValueListByDateSpan,11,"    <select id=""selectNetValueListByDateSpan"" resultMap=""BaseResultMap"">
        SELECT GZDATE, GZCBZE FROM TGCORE.EVLGZ
        WHERE GZZHDM = '99990006' AND GZDATE BETWEEN #{startDate, javaType=java.util.Date} AND #{endDate, javaType=java.util.Date} AND GZCPDM =
        #{prdCode}
        ORDER BY GZDATE
    </select>"
target\classes\mapper\PrivateOfferNonStandardMapper.xml,getSpvGzInfo,9,"<select id=""getSpvGzInfo"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.SpvFxrEntity"">
    WITH GZ AS (
    SELECT
    G.GZSZZE,
    CASE
    KMTYPE WHEN 'JZZB01' THEN 0
    WHEN 'JZZB02' THEN 0
    WHEN 'JZZB03' THEN 0
    ELSE GZCBZE
    END GZCBZE,
    G.GZZQDM,
    CASE
    KMCPLX WHEN 'BX' THEN (CASE
    KMMKET WHEN 'G' THEN 'X'
    ELSE KMMKET
    END)
    ELSE KMMKET
    END AS KMMKET
    FROM TGCORE.MONKM m,TGCORE.EVLGZ G
    WHERE GZCPDM= #{prdCode}
    and GZDATE= #{monDate}
    and KMCODE=GZKMDM
    AND KMCPLX = #{subjectType}
    AND KMTYPE IN ('CB', 'YZ', 'JZZB01', 'JZZB02', 'JZZB03')
    AND KMZQLX = 'SPV'
    AND ISFINAL = 'Y'
    AND KMZQLS != 'FZ'
    ),
    SPV AS (
    SELECT
    *
    FROM
    TGCORE.MONSPV
    WHERE
    (ZQCODE,
    ZQCPDM) IN (
    SELECT
    ZQCODE,
    max(ZQCPDM) ZQCPDM
    FROM
    TGCORE.MONSPV
    WHERE
    ZQCPDM = #{prdCode}
    OR ZQCPDM = ' '
    GROUP BY
    ZQCODE)
    )
    SELECT
    S.ZQCODE,nvl(S.ZQNAME,' ') as ZQNAME,S.ZQFXR,GZSZZE,GZCBZE,G.GZZQDM,G.KMMKET,ZQZQLB,ZQEJLB,sfbjbzx
    FROM
    GZ G left JOIN SPV S ON
    G.KMMKET = S.ZQMKET
    AND G.GZZQDM = S.ZQCODE
</select>"
target\classes\mapper\PrivateOfferNonStandardMapper.xml,getSpvGzInfo4SQ,180,"<select id=""getSpvGzInfo4SQ"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.SpvFxrEntity"">
    WITH GZ AS (
    SELECT
    G.GZSZZE,
    CASE
    KMTYPE WHEN 'JZZB01' THEN 0
    WHEN 'JZZB02' THEN 0
    WHEN 'JZZB03' THEN 0
    ELSE GZCBZE
    END GZCBZE,
    G.GZZQDM,
    CASE
    KMCPLX WHEN 'BX' THEN (CASE
    KMMKET WHEN 'G' THEN 'X'
    ELSE KMMKET
    END)
    ELSE KMMKET
    END AS KMMKET
    FROM TGCORE.MONKM m,TGCORE.EVLGZ G
    WHERE GZCPDM= #{prdCode}
    and GZDATE= #{monDate}
    and KMCODE=GZKMDM
    AND KMCPLX = #{subjectType}
    AND KMTYPE IN ('CB', 'YZ', 'JZZB01', 'JZZB02', 'JZZB03')
    AND KMZQLX = 'SPV'
    AND ISFINAL = 'Y'
    AND KMZQLS != 'FZ'
    ),
    SPV AS (
    SELECT
    *
    FROM
    TGCORE.MONSPV
    WHERE
    (ZQCODE,
    ZQCPDM) IN (
    SELECT
    ZQCODE,
    max(ZQCPDM) ZQCPDM
    FROM
    TGCORE.MONSPV
    WHERE
    ZQCPDM = #{prdCode}
    OR ZQCPDM = ' '
    GROUP BY
    ZQCODE)
    )
    SELECT
    S.ZQCODE,nvl(S.ZQNAME,' ') as ZQNAME,S.ZQFXR,GZSZZE,GZCBZE,G.GZZQDM,G.KMMKET,ZQZQLB,ZQEJLB,sfbjbzx
    FROM
    GZ G inner join  SPV S ON
    G.KMMKET = S.ZQMKET
    AND G.GZZQDM = S.ZQCODE
        WHERE ZQZQLB = 'FBZQ'
        AND ZQEJLB = 'SYPZ'
        AND sfbjbzx = 'Y'

</select>"
target\classes\mapper\ReCalculateAssetMapper.xml,selectHoldGP,126,"	<select id=""selectHoldGP"" resultType=""java.util.Map"">
		WITH km AS(
		SELECT
		CASE
				KMCPLX WHEN 'BX' THEN (
			CASE
					KMMKET WHEN 'G' THEN 'X'
					ELSE KMMKET
			END)
				ELSE KMMKET
		END AS KMMKET,
			KMCPLX,
			KMCODE ,
			KMZQLX,
			kmzqls,
			SECTYPE3,
			KMTZFL,
			KMTYPE,
			KMKMBZ,
			KMBZXX
		FROM
			TGCORE.MONKM
		WHERE
			KMCPLX = #{subjectType}
			AND KMTYPE IN ('CB',
			'YZ')
			AND ISFINAL = 'Y'
			AND KMZQLX = 'GP'
			AND KMZQLS <![CDATA[<>]]> 'FZ'),
		kmgz AS (
		SELECT
			GZCPDM,
			GZDATE,
			GZZQDM,
			KMMKET,
			GZZHDM,
			gzzhmc,
			gzszze,
			gzgzsl
		FROM
			TGCORE.EVLGZ gz,
			km
		WHERE
			GZDATE = #{monDate}
			AND GZKMDM = KMCODE
			AND GZCPDM = #{prdcode} )
		,
		gp AS (
		SELECT
			*
		FROM
			tgcore.mongp
		WHERE
			gpdate = #{monDate}
			AND (1=0
		<foreach collection=""assetTypes"" item=""item"" index=""index"">
<!--			GP-ALL-股票 或者 GP-JCK-股票【净敞口】-->
		<if test=""item == 'GP-ALL'"">
			OR GPMKET != 'B' AND STKTYP != '存托凭证'
		</if>
		</foreach>
			) )
		SELECT
			kmgz.*,
			gp.GPNAME SECNAME,
			'股票' SECTYPE
		FROM
			kmgz,
			gp
		WHERE
			gpcode = GZZQDM
			AND gpmket = KMMKET
	</select>"
target\classes\mapper\ReCalculateAssetMapper.xml,selectHoldJJ,200,"	<select id=""selectHoldJJ"" resultType=""java.util.Map"">
		WITH km AS(
		SELECT
		CASE
				KMCPLX WHEN 'BX' THEN (
			CASE
					KMMKET WHEN 'G' THEN 'X'
					ELSE KMMKET
			END)
				ELSE KMMKET
		END AS KMMKET,
			KMCPLX,
			KMCODE ,
			KMZQLX,
			kmzqls,
			SECTYPE3,
			KMTZFL,
			KMTYPE,
			KMKMBZ,
			KMBZXX
		FROM
			TGCORE.MONKM
		WHERE
			KMCPLX = #{subjectType}
			AND KMTYPE IN ('CB',
			'YZ',
			'JZZB01',
			'JZZB02',
			'JZZB03')
			AND ISFINAL = 'Y'
			AND KMZQLX IN ('JJ')
			AND KMZQLS <![CDATA[<>]]> 'FZ' ),
		kmgz AS (
		SELECT
			GZCPDM,
			GZDATE,
			GZZQDM,
			KMMKET,
			GZZHDM,
			gzzhmc,
			gzszze,
			gzgzsl
		FROM
			TGCORE.EVLGZ gz,
			km
		WHERE
			GZDATE = #{monDate}
			AND GZKMDM = KMCODE
			AND GZCPDM = #{prdcode} )
		,
		jj AS (
		SELECT
			*
		FROM
			tgcore.monjj
		WHERE
			jjdate = #{monDate}
			AND  (1=0
		<foreach collection=""assetTypes"" item=""item"" index=""index"">
<!--			JJ-GPX-基金-股票型-->
			<if test=""item == 'JJ-GPX'"">
			OR JJTYPE='GPX'
			</if>
<!--			JJ-HHX-基金-混合型-->
			<if test=""item == 'JJ-HHX'"">
			OR JJTYPE='HHX'
			</if>
<!--			JJ-ZDZ-基金-中短债型-->
			<if test=""item == 'JJ-ZDZ'"">
			OR JJTYPE='ZDZ'
			</if>
<!--			JJ-ZQX-基金-债券型-->
			<if test=""item == 'JJ-ZQX'"">
			OR JJTYPE='ZQX'
			</if>
<!--			JJ-EJZJJJ-基金-二级债基-->
			<if test=""item == 'JJ-EJZJJJ'"">
			OR ZDJJLX='EJZJJJ'
			</if>
<!--			JJ-KZKJ-基金-可转债基金-->
			<if test=""item == 'JJ-KZKJ'"">
			OR (JJTYPE NOT IN ('JCY','ZQY','LCY','GZY','GPY','QTY','HHY','YXY','XTY','HBY','ZJY','TDY','GSY','GQY','CKY','BCY')  and (JJNAME like '%可转%' or JJNAME like '%可交%'))
			</if>
<!--			JJ-FWKZ-基金-投资范围是含可转债-->
			<if test=""item == 'JJ-FWKZ'"">
			OR JJHKZZ = 'Y'
			</if>
		</foreach>
			)
			)
		SELECT
			kmgz.*,
			jj.JJNAME SECNAME,
			'基金' SECTYPE
		FROM
			kmgz,
			jj
		WHERE
			jjcode = GZZQDM
			AND jjmket = KMMKET
	</select>"
target\classes\mapper\ReCalculateAssetMapper.xml,selectHoldYL,302,"	<select id=""selectHoldYL"" resultType=""java.util.Map"">
		WITH km AS(
		SELECT
		CASE
				KMCPLX WHEN 'BX' THEN (
			CASE
					KMMKET WHEN 'G' THEN 'X'
					ELSE KMMKET
			END)
				ELSE KMMKET
		END AS KMMKET,
			KMCPLX,
			KMCODE ,
			KMZQLX,
			kmzqls,
			SECTYPE3,
			KMTZFL,
			KMTYPE,
			KMKMBZ,
			KMBZXX
		FROM
			TGCORE.MONKM
		WHERE
			KMCPLX = #{subjectType}
			AND KMTYPE IN ('CB',
			'YZ',
			'JZZB01',
			'JZZB02',
			'JZZB03')
			AND ISFINAL = 'Y'
			AND KMZQLX IN ('YL')
			AND KMZQLS <![CDATA[<>]]> 'FZ' ),
		kmgz AS (
		SELECT
			GZCPDM,
			GZDATE,
			GZZQDM,
			KMMKET,
			GZZHDM,
			gzzhmc,
			gzszze,
			gzgzsl
		FROM
			TGCORE.EVLGZ gz,
			km
		WHERE
			GZDATE = #{monDate}
			AND GZKMDM = KMCODE
			AND GZCPDM = #{prdcode} )
		,
		jj AS (
		SELECT
			*
		FROM
			tgcore.monjj
		WHERE
			jjdate = #{monDate}
			AND (1=0
		<foreach collection=""assetTypes"" item=""item"" index=""index"">
<!--			YL-JCY-养老金-基础设施债权计划型养老金-->
			<if test=""item == 'YL-JCY'"">
			OR JJTYPE='JCY'
			</if>
<!--			YL-ZQY-养老金-债券型养老金-->
			<if test=""item == 'YL-ZQY'"">
			OR JJTYPE='ZQY'
			</if>
<!--			YL-LCY-养老金-商业银行理财产品型养老金-->
			<if test=""item == 'YL-LCY'"">
			OR JJTYPE='LCY'
			</if>
<!--			YL-GZY-养老金-股票专项型养老金-->
			<if test=""item == 'YL-GZY'"">
			OR JJTYPE='GZY'
			</if>
<!--			YL-GPY-养老金-股票型养老金-->
			<if test=""item == 'YL-GPY'"">
			OR JJTYPE='GPY'
			</if>
<!--			YL-QTY-养老金-其他型养老金-->
			<if test=""item == 'YL-QTY'"">
			OR JJTYPE='QTY'
			</if>
<!--			YL-HHY-养老金-混合型养老金-->
			<if test=""item == 'YL-HHY'"">
			OR JJTYPE='HHY'
			</if>
<!--			YL-YXY-养老金-优先股型养老金-->
			<if test=""item == 'YL-YXY'"">
			OR JJTYPE='YXY'
			</if>
<!--			YL-XTY-养老金-信托型养老金-->
			<if test=""item == 'YL-XTY'"">
			OR JJTYPE='XTY'
			</if>
<!--			YL-HBY-养老金-货币型养老金-->
			<if test=""item == 'YL-HBY'"">
			OR JJTYPE='HBY'
			</if>
<!--			YL-ZJY-养老金-债券基金型养老金-->
			<if test=""item == 'YL-ZJY'"">
			OR JJTYPE='ZJY'
			</if>
<!--			YL-TDY-养老金-特定资产管理计划型养老金-->
			<if test=""item == 'YL-TDY'"">
			OR JJTYPE='TDY'
			</if>
<!--			YL-GSY-养老金-固定收益型养老金-->
			<if test=""item == 'YL-GSY'"">
			OR JJTYPE='GSY'
			</if>
<!--			YL-GQY-养老金-股权型养老金-->
			<if test=""item == 'YL-GQY'"">
			OR JJTYPE='GQY'
			</if>
<!--			YL-CKY-养老金-存款型养老金-->
			<if test=""item == 'YL-CKY'"">
			OR JJTYPE='CKY'
			</if>
<!--			YL-BCY-养老金-保险产品型养老金-->
			<if test=""item == 'YL-BCY'"">
			OR JJTYPE='BCY'
			</if>
<!--			YL-KZKJ-养老金-名称包含可转、可交-->
			<if test=""item == 'YL-KZKJ'"">
			OR (JJTYPE IN ('JCY','ZQY','LCY','GZY','GPY','QTY','HHY','YXY','XTY','HBY','ZJY','TDY','GSY','GQY','CKY','BCY') AND (JJNAME LIKE '%可转%' OR JJNAME LIKE '%可交%'))
			</if>
		</foreach>
			)
		)
		SELECT
			kmgz.*,
			jj.JJNAME SECNAME,
			'养老金' SECTYPE
		FROM
			kmgz,
			jj
		WHERE
			jjcode = GZZQDM
			AND jjmket = KMMKET
	</select>"
target\classes\mapper\TopNPostionMapper.xml,getGzInfo,60,"<select id=""getGzInfo"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.TopNResultEntity"">
   <include refid=""km""></include>
    kmgz AS (
    SELECT
    GZCPDM,
    GZDATE,
    GZZQDM,
    gzszze,
    GZGZSL,
    CASE
    KMTYPE WHEN 'JZZB01' THEN 0
    WHEN 'JZZB02' THEN 0
    WHEN 'JZZB03' THEN 0
    ELSE GZCBZE
    END GZCBZE,
    KMMKET
    FROM
    TGCORE.EVLGZ gz,
    km
    WHERE
    GZDATE = #{monDate,jdbcType=DATE}
    AND GZKMDM = KMCODE
    AND GZCPDM = #{prdCode} )
    <include refid=""result""></include>
</select>"
target\classes\mapper\TopNPostionMapper.xml,getGzFm,111,"<select id=""getGzFm"" resultType=""java.math.BigDecimal"">
    select
    <choose>
        <when test="" topNfm == 'JZCCB' or topNfm == 'ZZCCB' "">
            gzcbze
        </when>
        <when test="" topNfm == 'JZCSZ' or topNfm == 'ZZCSZ' "">
            gzszze
        </when>
    </choose>
    FROM
    TGCORE.EVLGZ
    WHERE
    gzdate =  #{monDate,jdbcType=DATE}
    AND gzcpdm = #{prdCode}
    <choose>
        <when test="" topNfm == 'JZCCB' or topNfm == 'JZCSZ' "">
            AND gzzhdm = '99990004'
        </when>
        <otherwise>
            AND gzzhdm = '99990001'
        </otherwise>
    </choose>
</select>"
target\classes\mapper\TyfxrgpslMapper.xml,getEvlgzInfo,69,"<select id=""getEvlgzInfo"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.TyfxrgpslEntity"">
    with EVL as ( select distinct GZZQDM,KMMKET
     from TGCORE.EVLGZ,TGCORE.MONKM
     where GZCPDM = #{prdCode}
     and GZDATE = #{monDate,jdbcType=DATE}
     and GZKMDM = KMCODE
     and KMCPLX = #{subjectType}
     and KMZQLX = 'GP'
     and KMTYPE = 'CB'
     and KMZQLS &lt;> 'FZ'
     and KMCODE not in ('11020301','11021301','11023301','11024301')
     and ISFINAL = 'Y' ),
    STK as ( select GPCODE,GPMKET,GPQFXR, NVL(GPSSRQ, DATE'1900-1-1') AS GPSSRQ, GPNAME AS NAME
     from TGCORE.MONGP where GPDATE=#{monDate,jdbcType=DATE})
   select GZZQDM as CODE, KMMKET as MKET, GPQFXR as ISSUER, NVL(GPSSRQ, DATE'1900-1-1') AS GPSSRQ, NVL(NAME, ' ') AS NAME
     from EVL left join STK on GPCODE=GZZQDM and KMMKET=GPMKET
</select>"
target\classes\mapper\TyzcMapper.xml,selectJghhhEvlList,14,"    <select id=""selectJghhhEvlList"" resultMap=""JghhhResultMap"">
        WITH evl AS (
		SELECT
			GZDATE,
			GZCPDM,
			GZZQDM
		FROM
			tgcore.EVLGZ,
			tgcore.MONKM
		WHERE
			GZKMDM = KMCODE
            AND GZCPDM = #{monObject}
            AND GZDATE = #{monDate}
            AND KMCPLX = #{subjectType}
			AND KMTYPE = 'CB'
			AND KMZQLX = 'JGHHH'
			AND ISFINAL = 'Y'),
		cwhh AS (
		SELECT
			GZDATE,
			GZCPDM,
			GZZQDM,
			HYNAME,
			TO_CHAR(HYSEQN) AS HYSEQN
		FROM
			evl
		LEFT JOIN tgcore.PRDCWHH ON
			GZCPDM = HYCPDM
			AND GZZQDM = HYHYDM
			AND HYSTAT = 'A' )
		SELECT
			GZDATE,
			GZCPDM,
			GZZQDM,
			HYNAME,
			HYSEQN,
			NVL(BZJJE, 0) AS JE
		FROM
			cwhh
		LEFT JOIN tgcore.GUARANTEE_MONEY_ADJUST ON
			GZCPDM = PRDCODE
			AND GZZQDM = HYCODE
			AND GZDATE = JYDATE
			AND YWTYPE = 'HH'
			AND STATUS = 'A'
    </select>"
target\classes\mapper\complexindex\BanInvestMapper.xml,selectBanInvestBond,16,"    <select id=""selectBanInvestBond"" resultMap=""BanInvestSecurityBase"">
        with km as (select (case when KMMKET in ('H','S','Y','K') then KMMKET else 'QT' end) AS KMMKET,KMCPLX,KMCODE,KMZQLX
        from TGCORE.MONKM where KMCPLX=#{subjectType} and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y'
        and KMZQLX in ('ZQ','ZCZQ') and KMZQLS <![CDATA[<>]]> 'FZ' ),
        kmgz as (select KMZQLX, GZZQDM, KMMKET, SUM(GZSZZE) AS GZSZZE from TGCORE.EVLGZ gz, km where GZDATE=#{monDate, javaType=java.util.Date}
        and GZKMDM=KMCODE AND GZCPDM=#{prdCode} GROUP BY KMZQLX, GZZQDM, KMMKET),
        jtzq as (select JTSTRN, JTJTJH, JTZQDM, JTZQSC, JTZQJC, JTJTLX, JTJTYY
        from ${banInvestUploadDateDTO.tableName} where JTDATE=#{banInvestUploadDateDTO.uploadDate}
        and JTZQLX = 'ZQ'
        <if test=""banInvestConfigDTO.baileeList != null and banInvestConfigDTO.baileeList.size() > 0"">
            and JTSTRN in
            <foreach collection=""banInvestConfigDTO.baileeList"" open=""("" close="")"" separator="","" item=""bailee"">
                #{bailee}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.fileList != null and banInvestConfigDTO.fileList.size() > 0"">
            and JTJTJH in
            <foreach collection=""banInvestConfigDTO.fileList"" open=""("" close="")"" separator="","" item=""jh"">
                #{jh}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestTypeList != null and banInvestConfigDTO.banInvestTypeList.size() > 0"">
            and JTJTLX in
            <foreach collection=""banInvestConfigDTO.banInvestTypeList"" open=""("" close="")"" separator="","" item=""banInvestType"">
                #{banInvestType}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestReasonList != null and banInvestConfigDTO.banInvestReasonList.size() > 0"">
            and (
            <foreach collection=""banInvestConfigDTO.banInvestReasonList"" open=""("" close="")"" separator="" or "" item=""banInvestReason"">
                INSTR(JTJTYY, #{banInvestReason}) > 0
            </foreach>
            )
        </if>
        ),
        jtcczq as (select GZZQDM, KMZQLX, KMMKET, JTZQJC as GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE from kmgz, jtzq
        where GZZQDM = JTZQDM and JTZQSC = KMMKET)
        SELECT GZZQDM, KMZQLX, KMMKET, GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE FROM jtcczq
    </select>"
target\classes\mapper\complexindex\BanInvestMapper.xml,selectBanInvestFund,56,"    <select id=""selectBanInvestFund"" resultMap=""BanInvestSecurityBase"">
        with km as (select (case when KMMKET in ('H','S','Y','K') then KMMKET else 'QT' end) AS KMMKET,KMCPLX,KMCODE,KMZQLX
        from TGCORE.MONKM where KMCPLX=#{subjectType} and KMTYPE in ('CB','YZ','JZZB01','JZZB02','JZZB03') and ISFINAL='Y'
        and KMZQLX in ('JJ') and KMZQLS <![CDATA[<>]]> 'FZ' ),
        kmgz as (select KMZQLX, GZZQDM, KMMKET, SUM(GZSZZE) AS GZSZZE from TGCORE.EVLGZ gz, km where GZDATE=#{monDate, javaType=java.util.Date}
        and GZKMDM=KMCODE AND GZCPDM=#{prdCode} GROUP BY KMZQLX, GZZQDM, KMMKET),
        jtzq as (select JTSTRN, JTJTJH, JTZQDM, JTZQSC, JTZQJC, JTJTLX, JTJTYY
        from ${banInvestUploadDateDTO.tableName} where JTDATE=#{banInvestUploadDateDTO.uploadDate}
        and JTZQLX = 'JJ'
        <if test=""banInvestConfigDTO.baileeList != null and banInvestConfigDTO.baileeList.size() > 0"">
            and JTSTRN in
            <foreach collection=""banInvestConfigDTO.baileeList"" open=""("" close="")"" separator="","" item=""bailee"">
                #{bailee}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.fileList != null and banInvestConfigDTO.fileList.size() > 0"">
            and JTJTJH in
            <foreach collection=""banInvestConfigDTO.fileList"" open=""("" close="")"" separator="","" item=""jh"">
                #{jh}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestTypeList != null and banInvestConfigDTO.banInvestTypeList.size() > 0"">
            and JTJTLX in
            <foreach collection=""banInvestConfigDTO.banInvestTypeList"" open=""("" close="")"" separator="","" item=""banInvestType"">
                #{banInvestType}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestReasonList != null and banInvestConfigDTO.banInvestReasonList.size() > 0"">
            and (
            <foreach collection=""banInvestConfigDTO.banInvestReasonList"" open=""("" close="")"" separator="" or "" item=""banInvestReason"">
                INSTR(JTJTYY, #{banInvestReason}) > 0
            </foreach>
            )
        </if>
        ),
        jtccjj as (select GZZQDM, KMZQLX, KMMKET, JTZQJC as GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE from kmgz, jtzq
        where GZZQDM = JTZQDM and JTZQSC = KMMKET)
        SELECT GZZQDM, KMZQLX, KMMKET, GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE FROM jtccjj
    </select>"
target\classes\mapper\complexindex\BanInvestMapper.xml,selectBanInvestStock,96,"    <select id=""selectBanInvestStock"" resultMap=""BanInvestSecurityBase"">
        with km as (select (case when KMMKET in ('H','S','Y','K') then KMMKET else 'QT' end) AS KMMKET,KMCPLX,KMCODE,KMZQLX
        from TGCORE.MONKM where KMCPLX=#{subjectType} and KMTYPE in ('CB','YZ') and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS <![CDATA[<>]]> 'FZ' ),
        kmgz as (select KMZQLX, GZZQDM, KMMKET, SUM(GZSZZE) AS GZSZZE from TGCORE.EVLGZ gz, km where GZDATE=#{monDate, javaType=java.util.Date}
        and GZKMDM=KMCODE AND GZCPDM=#{prdCode} GROUP BY KMZQLX, GZZQDM, KMMKET),
        jtzq as (select JTSTRN, JTJTJH, JTZQDM, JTZQSC, JTZQJC, JTJTLX, JTJTYY
        from ${banInvestUploadDateDTO.tableName} where JTDATE=#{banInvestUploadDateDTO.uploadDate}
        and JTZQLX = 'GP'
        <if test=""banInvestConfigDTO.baileeList != null and banInvestConfigDTO.baileeList.size() > 0"">
            and JTSTRN in
            <foreach collection=""banInvestConfigDTO.baileeList"" open=""("" close="")"" separator="","" item=""bailee"">
                #{bailee}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.fileList != null and banInvestConfigDTO.fileList.size() > 0"">
            and JTJTJH in
            <foreach collection=""banInvestConfigDTO.fileList"" open=""("" close="")"" separator="","" item=""jh"">
                #{jh}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestTypeList != null and banInvestConfigDTO.banInvestTypeList.size() > 0"">
            and JTJTLX in
            <foreach collection=""banInvestConfigDTO.banInvestTypeList"" open=""("" close="")"" separator="","" item=""banInvestType"">
                #{banInvestType}
            </foreach>
        </if>
        <if test=""banInvestConfigDTO.banInvestReasonList != null and banInvestConfigDTO.banInvestReasonList.size() > 0"">
            and (
            <foreach collection=""banInvestConfigDTO.banInvestReasonList"" open=""("" close="")"" separator="" or "" item=""banInvestReason"">
                INSTR(JTJTYY, #{banInvestReason}) > 0
            </foreach>
            )
        </if>
        ),
        jtccgp as (select GZZQDM, KMZQLX, KMMKET, JTZQJC AS GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE from kmgz, jtzq
        where GZZQDM = JTZQDM and JTZQSC = KMMKET)
        SELECT GZZQDM, KMZQLX, KMMKET, GZZQMC, JTSTRN, JTJTJH, JTJTLX, JTJTYY, GZSZZE FROM jtccgp
    </select>"
target\classes\mapper\complexindex\StockReturnMapper.xml,insertNetValue,19,"    <insert id=""insertNetValue"">
        insert into tgcore.MON_EVL_NETVALUE (GZCPDM, GZDATE, GZZHDM, GZCBZE, GZSZZE)
        <choose>
            <when test=""prdType=='QD' or prdType=='BX'"">
                select PRDCODE,BIZDATE,ACCCODE,STADCOST, STADVAL from tgcore.EVALUATION where PRDCODE=#{prdCode, jdbcType=VARCHAR}
                and BIZDATE between #{startDate, jdbcType=DATE} and #{endDate, jdbcType=DATE} and ACCCODE = '99990004'
            </when>
            <otherwise>
                select GZCPDM,GZDATE,GZZHDM,GZCBZE,GZSZZE from tgcore.EVLGZ where GZCPDM=#{prdCode, jdbcType=VARCHAR}
                and GZDATE between #{startDate, jdbcType=DATE} and #{endDate, jdbcType=DATE} and GZZHDM = '99990004'
            </otherwise>
        </choose>
    </insert>"
target\classes\mapper\complexindex\StockReturnMapper.xml,getFloatingProfitandLoss,106,"    <select id=""getFloatingProfitandLoss"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.TheDayReturnDTO"">
        WITH KM as (SELECT KMCODE,KMBZXX,KMKMBZ from TGCORE.MONKM where KMCPLX=#{subjectType} and KMTYPE='CB' and KMZQLX='GP'
        and KMZQLS<![CDATA[<>]]>'FZ' and ISFINAL='Y' )
        <choose>
            <when test=""prdType == 'QD' or prdType == 'BX'"">
                select bizDate,secCode,'FL' as returnType, SUM(STADVAL) - SUM(STADCOST) as amount from TGCORE.EVALUATION,KM
                where KM.KMCODE = COACODE and PRDCODE=#{prdCode, jdbcType=VARCHAR} and BIZDATE=#{bizDate, jdbcType=DATE}
                and KMKMBZ='CNY' and KMBZXX<![CDATA[<>]]>'OVERSEA' group by BIZDATE, SECCODE
            </when>
            <otherwise>
                select GZDATE as bizDate, GZZQDM as secCode,'FL' as returnType, SUM(GZSZZE) - SUM(GZCBZE) as amount from
                TGCORE.EVLGZ,KM
                where KM.KMCODE = GZKMDM and GZCPDM=#{prdCode, jdbcType=VARCHAR} and GZDATE=#{bizDate, jdbcType=DATE} group by GZDATE,GZZQDM
            </otherwise>
        </choose>
    </select>"
target\classes\mapper\fundstyledrift\FundStyleCompareMapper.xml,listStockHold,20,"    <select id=""listStockHold"" resultMap=""BaseResultMap"">
        with GZ as (
            select
                GZZQDM,KMMKET,SUM(NVL(GZSZBL,0)) GZSZBL
            from TGCORE.EVLGZ,TGCORE.MONKM
            where GZCPDM = #{prdCode} and GZDATE = #{date} and GZKMDM = KMCODE
            and KMCPLX = #{subjectType} and KMZQLX = 'GP'  and KMTYPE = 'CB' and ISFINAL = 'Y' and KMZQLS != 'FZ'
            group by GZZQDM,KMMKET
        )
        select
            GZZQDM as STOCK_CODE,KMMKET as STOCK_MARKET,GPNAME as STOCK_NAME,
            GZSZBL,GPHYYJ,GPHYEJ,GPSWYJ,GPSWEJ,GPSWSJ,CITIC_ONELEVEL_TRADE,GPQFXR,'common' AS FLAG
        from GZ
        left join TGCORE.MONGP on GZZQDM = GPCODE and KMMKET = GPMKET and GPDATE = #{date}
    </select>"
target\classes\mapper\index\ZSCFGMapper.xml,getIndexStockHoldingDetail,17,"    <select id=""getIndexStockHoldingDetail"" resultMap=""BaseResultMap"">
        with STKHOLD as (select GZZQDM,KMMKET,GZSZZE
        from TGCORE.EVLGZ,TGCORE.MONKM
        where GZCPDM=#{prdCode,jdbcType=VARCHAR}
        and GZDATE=#{monDate,jdbcType=DATE}
        and GZKMDM=KMCODE
        and KMCPLX=#{subjectType,jdbcType=VARCHAR}
        and KMTYPE='CB' and KMZQLX in ('GP','ZQ','ZCZQ') and KMZQLS != 'FZ' )
        select ZSZQDM,ZSZQMC,(SELECT CSNAME FROM TGCORE.MONPM WHERE CSROOT ='MONBDZQ' AND CSFATH  = 'ZQMKET' AND CSSSON = ZSMKET ) AS ZSMKET,GZSZZE
        from STKHOLD,TGCORE.MONZS
        where GZZQDM = ZSZQDM
        and KMMKET = ZSMKET
        and ZSZSLB = #{stockIndexCode,jdbcType=VARCHAR}
        and ZSDATE = #{monDate,jdbcType=DATE}
    </select>"
target\classes\mapper\monitor\MonIndexResultMapper.xml,selectPrdGzInfo,1493,"    <select id=""selectPrdGzInfo"" resultMap=""PrdGzInfoResultMap"">
        WITH PRD AS (
            SELECT CPCODE FROM TGCORE.MONPR M WHERE (M.CPCODE,1) IN
            <foreach collection=""prdCodeList"" item=""item"" open=""("" separator="","" close="")"">
                (#{item,jdbcType=VARCHAR},1)
            </foreach>
        ),
        KZ AS (
        SELECT KZCPDM, KZDATE FROM TGCORE.EVLKZ,PRD WHERE KZCPDM = CPCODE AND KZTYPE = 'ACCFM'
        ),
        GZ AS (
        SELECT COUNT(1) AS COUNT,GZCPDM PRDCODE FROM TGCORE.EVLGZ E,PRD WHERE E.GZDATE = #{date} AND E.GZCPDM = PRD.CPCODE GROUP BY E.GZCPDM
        ),
        GZ4QD AS (
        SELECT COUNT(1) AS COUNT,PRDCODE FROM TGCORE.EVALUATION E,PRD WHERE E.BIZDATE = #{date} AND E.PRDCODE = PRD.CPCODE GROUP BY E.PRDCODE
        ),
        ALLGZ AS (
        SELECT * FROM GZ
        UNION ALL
        SELECT * FROM GZ4QD
        )
        SELECT PRD.CPCODE,KZ.KZDATE,NVL(ALLGZ.COUNT, 0) COUNT FROM PRD
        LEFT JOIN KZ ON PRD.CPCODE = KZ.KZCPDM
        LEFT JOIN ALLGZ ON PRD.CPCODE = ALLGZ.PRDCODE
    </select>"
target\classes\mapper\monitor\MonResultJudgeMapper.xml,selectHoldIncrease,56,"    <select id=""selectHoldIncrease"" resultType=""java.util.Map"">
		WITH km AS(
            SELECT
                CASE KMCPLX WHEN 'BX' THEN ( CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END AS KMMKET,
                KMCPLX, KMCODE, KMKMBZ, KMBZXX
            FROM
                TGCORE.MONKM
            WHERE
                KMCPLX = #{subjectType}
                AND KMTYPE = 'CB'
                AND ISFINAL = 'Y'
                AND KMZQLS <![CDATA[<>]]> 'FZ'
		),
		kmgz AS (
            SELECT
                GZDATE,
                GZZQDM,
                NVL(KMMKET, ' ') KMMKET,
                KMKMBZ,
                KMBZXX,
                GZZHMC,
                GZGZSL
            FROM
                TGCORE.EVLGZ
                LEFT JOIN km ON KMCODE = GZZHDM
            WHERE
                GZDATE IN (#{monDate},#{monLastWorkDay}) AND GZCPDM = #{prdCode}
                <if test=""zhdms != null and zhdms.size() > 0"">
                    AND (GZZHDM,1) IN
                    <foreach collection=""zhdms"" item=""zhdm"" open=""("" separator="","" close="")"">
                        (#{zhdm},1)
                    </foreach>
                </if>

            UNION ALL

            SELECT
                GZDATE,
                GZZQDM,
                NVL(KMMKET, ' ') KMMKET,
                KMKMBZ,
                KMBZXX,
                GZZHMC,
                GZGZSL
            FROM
                TGCORE.EVLGZ
                LEFT JOIN km ON KMCODE = GZKMDM
            WHERE
                GZDATE IN (#{monDate},#{monLastWorkDay}) AND GZCPDM = #{prdCode}
                <if test=""zhdms != null and zhdms.size() > 0"">
                    AND (GZZHDM,1) IN
                    <foreach collection=""zhdms"" item=""zhdm"" open=""("" separator="","" close="")"">
                        (#{zhdm},1)
                    </foreach>
                </if>
		),
		holdsec AS (
			SELECT GZDATE, GZZQDM, KMMKET, GZZHMC, GZGZSL
			FROM kmgz
			WHERE (GZZQDM, KMMKET) IN
            <foreach collection=""assistKeyList"" item=""item"" open=""("" separator="","" close="")"">
                (#{item.secCode},#{item.market})
            </foreach>
		),
		LA AS (
            SELECT GZZQDM, KMMKET, GZZHMC, SUM(GZGZSL) GZGZSL
            FROM holdsec
            WHERE GZDATE = #{monLastWorkDay}
            GROUP BY GZZQDM, KMMKET, GZZHMC
		),
		TD AS (
            SELECT GZZQDM, KMMKET, GZZHMC, SUM(GZGZSL) GZGZSL
            FROM holdsec
            WHERE GZDATE = #{monDate}
            GROUP BY GZZQDM, KMMKET, GZZHMC
		),
		HOD AS (
            SELECT TD.GZZQDM, TD.KMMKET, TD.GZZHMC, TD.GZGZSL TD_GZGZSL, NVL(LA.GZGZSL, 0) LA_GZGZSL
            FROM TD LEFT JOIN LA ON TD.GZZQDM = LA.GZZQDM AND TD.KMMKET = LA.KMMKET AND TD.GZZHMC = LA.GZZHMC
		)
		SELECT
			GZZQDM,
			KMMKET,
			GZZHMC,
			CAST(TD_GZGZSL AS VARCHAR(40)) AS TD_GZGZSL,
			CAST(LA_GZGZSL AS VARCHAR(40)) AS LA_GZGZSL
		FROM HOD WHERE TD_GZGZSL > LA_GZGZSL
    </select>"
target\classes\mapper\njsq\MonNjAuthMapper.xml,selectHoldSec,324,"    <select id=""selectHoldSec"" parameterType=""cmb.custody.monitor.domain.njsq.entity.MonNjAuthRequest"" resultType=""cmb.custody.monitor.domain.njsq.entity.HoldSecEntity"">
        WITH JJG AS (
        SELECT GZZQDM,KMMKET AS GZMKET,GZGZSL,GZDWCB,GZCBZE,GZSZZE
        FROM TGCORE.EVLGZ, TGCORE.MONKM
        WHERE
        GZCPDM = #{prdcode,jdbcType=VARCHAR}
        AND GZDATE = #{gzDate,jdbcType=DATE}
        <if test=""jjcode != null"">
            AND GZZQDM = #{jjcode,jdbcType=VARCHAR}
        </if>
        AND GZKMDM = KMCODE
        AND LENGTH(TRIM(GZZHDM))>8
        <if test=""market != null"">
            AND KMMKET = #{market,jdbcType=VARCHAR}
        </if>
        AND KMCPLX = #{subjectType,jdbcType=VARCHAR}
        AND KMTYPE ='CB'
        AND KMLEVL ='3'
        AND KMZQLX = 'JJ'
        AND KMZQLS <![CDATA[<>]]> 'FZ'),
        YLG AS (
        SELECT GZZQDM,KMMKET AS GZMKET,GZGZSL,GZDWCB,GZCBZE,GZSZZE
        FROM TGCORE.EVLGZ, TGCORE.MONKM
        WHERE
        GZCPDM = #{prdcode,jdbcType=VARCHAR}
        AND GZDATE = #{gzDate,jdbcType=DATE}
        <if test=""jjcode != null"">
            AND GZZQDM = #{jjcode,jdbcType=VARCHAR}
        </if>
        AND GZKMDM = KMCODE
        AND LENGTH(TRIM(GZZHDM))>8
        <if test=""market != null"">
            AND KMMKET = #{market,jdbcType=VARCHAR}
        </if>
        AND KMCPLX = #{subjectType,jdbcType=VARCHAR}
        AND KMTYPE ='CB'
        AND KMLEVL ='3'
        AND KMZQLX = 'YL'
        AND KMZQLS <![CDATA[<>]]> 'FZ'),
        GZ AS (
        SELECT GZZQDM,GZMKET,GZGZSL,GZDWCB,GZCBZE,GZSZZE FROM JJG
        UNION
        SELECT GZZQDM,GZMKET,GZGZSL,GZDWCB,GZCBZE,GZSZZE FROM YLG),
        JY AS (
        SELECT JJCODE, JJMKET, JJGLRN, JJNAME, JJTYPE
        FROM TGCORE.MONJJ
        WHERE
        JJDATE = #{jjDate,jdbcType=DATE})
        SELECT
        GZZQDM,
        NVL(GZMKET, ' ') AS GZMKET,
        CSNAME AS GZMKETNAME,
        NVL(JJNAME, ' ') AS JJNAME,
        JJTYPE,
        JJGLRN,
        GZGZSL,
        GZDWCB,
        GZCBZE,
        GZSZZE
        FROM GZ
        LEFT JOIN JY ON JJCODE = GZZQDM AND GZMKET = JJMKET
        LEFT JOIN TGCORE.MONPM ON CSROOT = 'PUBMKET' AND CSFATH = 'PUBMKET' AND CSSSON=GZMKET
    </select>"
target\classes\mapper\njsq\MonNjAuthMapper.xml,selectLastDayHoldSec,388,"    <select id=""selectLastDayHoldSec"" parameterType=""cmb.custody.monitor.domain.njsq.entity.MonNjAuthRequest"" resultType=""cmb.custody.monitor.domain.njsq.entity.HoldSecEntity"">
        WITH JJG AS (
        SELECT GZZQDM,KMMKET AS GZMKET,GZGZSL
        FROM TGCORE.EVLGZ, TGCORE.MONKM
        WHERE
        GZCPDM = #{prdcode,jdbcType=VARCHAR}
        AND GZDATE = #{gzDate,jdbcType=DATE}
        AND GZZQDM = #{jjcode,jdbcType=VARCHAR}
        AND GZKMDM = KMCODE
        AND LENGTH(TRIM(GZZHDM))>8
        <if test=""market != null"">
            AND KMMKET = #{market,jdbcType=VARCHAR}
        </if>
        AND KMCPLX = #{subjectType,jdbcType=VARCHAR}
        AND KMTYPE ='CB'
        AND KMLEVL ='3'
        AND KMZQLX = 'JJ'
        AND KMZQLS <![CDATA[<>]]> 'FZ'),
        YLG AS (
        SELECT GZZQDM,KMMKET AS GZMKET,GZGZSL
        FROM TGCORE.EVLGZ, TGCORE.MONKM
        WHERE
        GZCPDM = #{prdcode,jdbcType=VARCHAR}
        AND GZDATE = #{gzDate,jdbcType=DATE}
        AND GZZQDM = #{jjcode,jdbcType=VARCHAR}
        AND GZKMDM = KMCODE
        AND LENGTH(TRIM(GZZHDM))>8
        <if test=""market != null"">
            AND KMMKET = #{market,jdbcType=VARCHAR}
        </if>
        AND KMCPLX = #{subjectType,jdbcType=VARCHAR}
        AND KMTYPE ='CB'
        AND KMLEVL ='3'
        AND KMZQLX = 'YL'
        AND KMZQLS <![CDATA[<>]]> 'FZ'),
        GZ AS (
        SELECT GZZQDM,GZMKET,GZGZSL FROM JJG
        UNION
        SELECT GZZQDM,GZMKET,GZGZSL FROM YLG)
        SELECT
        GZZQDM,
        NVL(GZMKET, ' ') AS GZMKET,
        GZGZSL
        FROM GZ
        FETCH FIRST 1 ROWS ONLY
    </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectByPrimaryKey,73,"  <select id=""selectByPrimaryKey"" parameterType=""map"" resultMap=""BaseResultMap"">
    select
    <include refid=""Base_Column_List""/>
    from TGCORE.EVLGZ
    where GZCPDM = #{gzcpdm,jdbcType=CHAR}
      and GZDATE = #{gzdate,jdbcType=DATE}
      and GZZHDM = #{gzzhdm,jdbcType=VARCHAR}
  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,deleteByPrimaryKey,81,"  <delete id=""deleteByPrimaryKey"" parameterType=""map"">
    delete from TGCORE.EVLGZ
    where GZCPDM = #{gzcpdm,jdbcType=CHAR}
      and GZDATE = #{gzdate,jdbcType=DATE}
      and GZZHDM = #{gzzhdm,jdbcType=VARCHAR}
  </delete>"
target\classes\mapper\prd\EvlgzMapper.xml,insert,87,"  <insert id=""insert"" parameterType=""cmb.custody.monitor.infrastructure.entity.prd.EvlTable"">
    insert into TGCORE.EVLGZ (GZCPDM, GZDATE, GZZHDM, 
      GZKMDM, GZZHMC, GZZQDM, 
      GZGZSL, GZDWCB, GZCBZE, 
      GZCBBL, GZGZJG, GZSZZE, 
      GZSZBL, GZGZZZ, GZZZBL, 
      GZGZFF, GZZZKM, GZQYXX, 
      GZBZXX, CREATE_TIME, UPDATE_TIME
      )
    values (#{gzcpdm,jdbcType=CHAR}, #{gzdate,jdbcType=DATE}, #{gzzhdm,jdbcType=VARCHAR}, 
      #{gzkmdm,jdbcType=VARCHAR}, #{gzzhmc,jdbcType=VARCHAR}, #{gzzqdm,jdbcType=CHAR}, 
      #{gzgzsl,jdbcType=DECIMAL}, #{gzdwcb,jdbcType=DECIMAL}, #{gzcbze,jdbcType=DECIMAL}, 
      #{gzcbbl,jdbcType=DECIMAL}, #{gzgzjg,jdbcType=DECIMAL}, #{gzszze,jdbcType=DECIMAL}, 
      #{gzszbl,jdbcType=DECIMAL}, #{gzgzzz,jdbcType=DECIMAL}, #{gzzzbl,jdbcType=DECIMAL}, 
      #{gzgzff,jdbcType=CHAR}, #{gzzzkm,jdbcType=VARCHAR}, #{gzqyxx,jdbcType=VARCHAR}, 
      #{gzbzxx,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>"
target\classes\mapper\prd\EvlgzMapper.xml,insertSelective,105,"  <insert id=""insertSelective"" parameterType=""cmb.custody.monitor.infrastructure.entity.prd.EvlTable"">
    insert into TGCORE.EVLGZ
    <trim prefix=""("" suffix="")"" suffixOverrides="","">
      <if test=""gzcpdm != null"">
        GZCPDM,
      </if>
      <if test=""gzdate != null"">
        GZDATE,
      </if>
      <if test=""gzzhdm != null"">
        GZZHDM,
      </if>
      <if test=""gzkmdm != null"">
        GZKMDM,
      </if>
      <if test=""gzzhmc != null"">
        GZZHMC,
      </if>
      <if test=""gzzqdm != null"">
        GZZQDM,
      </if>
      <if test=""gzgzsl != null"">
        GZGZSL,
      </if>
      <if test=""gzdwcb != null"">
        GZDWCB,
      </if>
      <if test=""gzcbze != null"">
        GZCBZE,
      </if>
      <if test=""gzcbbl != null"">
        GZCBBL,
      </if>
      <if test=""gzgzjg != null"">
        GZGZJG,
      </if>
      <if test=""gzszze != null"">
        GZSZZE,
      </if>
      <if test=""gzszbl != null"">
        GZSZBL,
      </if>
      <if test=""gzgzzz != null"">
        GZGZZZ,
      </if>
      <if test=""gzzzbl != null"">
        GZZZBL,
      </if>
      <if test=""gzgzff != null"">
        GZGZFF,
      </if>
      <if test=""gzzzkm != null"">
        GZZZKM,
      </if>
      <if test=""gzqyxx != null"">
        GZQYXX,
      </if>
      <if test=""gzbzxx != null"">
        GZBZXX,
      </if>
      <if test=""createTime != null"">
        CREATE_TIME,
      </if>
      <if test=""updateTime != null"">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix=""values ("" suffix="")"" suffixOverrides="","">
      <if test=""gzcpdm != null"">
        #{gzcpdm,jdbcType=CHAR},
      </if>
      <if test=""gzdate != null"">
        #{gzdate,jdbcType=DATE},
      </if>
      <if test=""gzzhdm != null"">
        #{gzzhdm,jdbcType=VARCHAR},
      </if>
      <if test=""gzkmdm != null"">
        #{gzkmdm,jdbcType=VARCHAR},
      </if>
      <if test=""gzzhmc != null"">
        #{gzzhmc,jdbcType=VARCHAR},
      </if>
      <if test=""gzzqdm != null"">
        #{gzzqdm,jdbcType=CHAR},
      </if>
      <if test=""gzgzsl != null"">
        #{gzgzsl,jdbcType=DECIMAL},
      </if>
      <if test=""gzdwcb != null"">
        #{gzdwcb,jdbcType=DECIMAL},
      </if>
      <if test=""gzcbze != null"">
        #{gzcbze,jdbcType=DECIMAL},
      </if>
      <if test=""gzcbbl != null"">
        #{gzcbbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzjg != null"">
        #{gzgzjg,jdbcType=DECIMAL},
      </if>
      <if test=""gzszze != null"">
        #{gzszze,jdbcType=DECIMAL},
      </if>
      <if test=""gzszbl != null"">
        #{gzszbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzzz != null"">
        #{gzgzzz,jdbcType=DECIMAL},
      </if>
      <if test=""gzzzbl != null"">
        #{gzzzbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzff != null"">
        #{gzgzff,jdbcType=CHAR},
      </if>
      <if test=""gzzzkm != null"">
        #{gzzzkm,jdbcType=VARCHAR},
      </if>
      <if test=""gzqyxx != null"">
        #{gzqyxx,jdbcType=VARCHAR},
      </if>
      <if test=""gzbzxx != null"">
        #{gzbzxx,jdbcType=VARCHAR},
      </if>
      <if test=""createTime != null"">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test=""updateTime != null"">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>"
target\classes\mapper\prd\EvlgzMapper.xml,updateByPrimaryKeySelective,238,"  <update id=""updateByPrimaryKeySelective"" parameterType=""cmb.custody.monitor.infrastructure.entity.prd.EvlTable"">
    update TGCORE.EVLGZ
    <set>
      <if test=""gzkmdm != null"">
        GZKMDM = #{gzkmdm,jdbcType=VARCHAR},
      </if>
      <if test=""gzzhmc != null"">
        GZZHMC = #{gzzhmc,jdbcType=VARCHAR},
      </if>
      <if test=""gzzqdm != null"">
        GZZQDM = #{gzzqdm,jdbcType=CHAR},
      </if>
      <if test=""gzgzsl != null"">
        GZGZSL = #{gzgzsl,jdbcType=DECIMAL},
      </if>
      <if test=""gzdwcb != null"">
        GZDWCB = #{gzdwcb,jdbcType=DECIMAL},
      </if>
      <if test=""gzcbze != null"">
        GZCBZE = #{gzcbze,jdbcType=DECIMAL},
      </if>
      <if test=""gzcbbl != null"">
        GZCBBL = #{gzcbbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzjg != null"">
        GZGZJG = #{gzgzjg,jdbcType=DECIMAL},
      </if>
      <if test=""gzszze != null"">
        GZSZZE = #{gzszze,jdbcType=DECIMAL},
      </if>
      <if test=""gzszbl != null"">
        GZSZBL = #{gzszbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzzz != null"">
        GZGZZZ = #{gzgzzz,jdbcType=DECIMAL},
      </if>
      <if test=""gzzzbl != null"">
        GZZZBL = #{gzzzbl,jdbcType=DECIMAL},
      </if>
      <if test=""gzgzff != null"">
        GZGZFF = #{gzgzff,jdbcType=CHAR},
      </if>
      <if test=""gzzzkm != null"">
        GZZZKM = #{gzzzkm,jdbcType=VARCHAR},
      </if>
      <if test=""gzqyxx != null"">
        GZQYXX = #{gzqyxx,jdbcType=VARCHAR},
      </if>
      <if test=""gzbzxx != null"">
        GZBZXX = #{gzbzxx,jdbcType=VARCHAR},
      </if>
      <if test=""createTime != null"">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test=""updateTime != null"">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where GZCPDM = #{gzcpdm,jdbcType=CHAR}
      and GZDATE = #{gzdate,jdbcType=DATE}
      and GZZHDM = #{gzzhdm,jdbcType=VARCHAR}
  </update>"
target\classes\mapper\prd\EvlgzMapper.xml,updateByPrimaryKey,300,"  <update id=""updateByPrimaryKey"" parameterType=""cmb.custody.monitor.infrastructure.entity.prd.EvlTable"">
    update TGCORE.EVLGZ
    set GZKMDM = #{gzkmdm,jdbcType=VARCHAR},
      GZZHMC = #{gzzhmc,jdbcType=VARCHAR},
      GZZQDM = #{gzzqdm,jdbcType=CHAR},
      GZGZSL = #{gzgzsl,jdbcType=DECIMAL},
      GZDWCB = #{gzdwcb,jdbcType=DECIMAL},
      GZCBZE = #{gzcbze,jdbcType=DECIMAL},
      GZCBBL = #{gzcbbl,jdbcType=DECIMAL},
      GZGZJG = #{gzgzjg,jdbcType=DECIMAL},
      GZSZZE = #{gzszze,jdbcType=DECIMAL},
      GZSZBL = #{gzszbl,jdbcType=DECIMAL},
      GZGZZZ = #{gzgzzz,jdbcType=DECIMAL},
      GZZZBL = #{gzzzbl,jdbcType=DECIMAL},
      GZGZFF = #{gzgzff,jdbcType=CHAR},
      GZZZKM = #{gzzzkm,jdbcType=VARCHAR},
      GZQYXX = #{gzqyxx,jdbcType=VARCHAR},
      GZBZXX = #{gzbzxx,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where GZCPDM = #{gzcpdm,jdbcType=CHAR}
      and GZDATE = #{gzdate,jdbcType=DATE}
      and GZZHDM = #{gzzhdm,jdbcType=VARCHAR}
  </update>"
target\classes\mapper\prd\EvlgzMapper.xml,obtainGzzhdm,324,"    <select id=""obtainGzzhdm"" resultType=""java.util.Map"">
        SELECT distinct KMMKET, GZZQDM, GZZHMC
        FROM TGCORE.EVLGZ,
             TGCORE.MONKM
        WHERE GZKMDM = kmcode
          AND kmtype = 'CB'
          AND KMCPLX = #{kmcplx}
          AND GZDATE = #{date}
          AND GZCPDM = #{prdCode}
          AND KMMKET != ' '
    </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectStockHold,370,"    <select id=""selectStockHold"" resultMap=""StockEvlMap"">
      select GZZQDM, GZCBZE, GZSZZE, KMMKET from TGCORE.EVLGZ, TGCORE.MONKM
      where GZKMDM = KMCODE and KMTYPE= 'CB' and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS != 'FZ'
      and GZCPDM = #{prdCode, jdbcType=VARCHAR} AND GZDATE = #{monDate, jdbcType=DATE} and KMCPLX = #{subjectType, jdbcType=VARCHAR}
    </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectStockHoldDetail,376,"  <select id=""selectStockHoldDetail"" resultType=""cmb.custody.monitor.domain.index.complexity.entity.StockTopN"">
    WITH  STOCKLIST AS (select GZZQDM,  GZSZZE, (SELECT GPSWYJ FROM TGCORE.MONGP WHERE GPDATE = #{monDate, jdbcType=DATE} AND GPCODE = GZZQDM) AS SWYJ
 	  from TGCORE.EVLGZ, TGCORE.MONKM
      where GZKMDM = KMCODE and KMTYPE= 'CB' and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS != 'FZ'
      and GZCPDM =#{prdCode, jdbcType=VARCHAR} AND GZDATE = #{monDate, jdbcType=DATE}  and KMCPLX = #{subjectType, jdbcType=VARCHAR})

     SELECT GZZQDM,(SELECT GPNAME FROM TGCORE.MONGP WHERE GPCODE = GZZQDM AND GPDATE = #{monDate, jdbcType=DATE}) AS GPNAME, GZSZZE,SWYJ
     FROM
     STOCKLIST X
      WHERE X.SWYJ IN (SELECT SWYJ FROM
						   (SELECT SWYJ,SUM(GZSZZE) AS GZSZZE
						   FROM
						   STOCKLIST A
						      GROUP BY SWYJ) B
						     ORDER BY GZSZZE DESC
						     FETCH FIRST #{topN, jdbcType=INTEGER} ROWS ONLY)
     ORDER BY SWYJ,GZSZZE

  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectStockHoldWithCh,395,"  <select id=""selectStockHoldWithCh"" resultMap=""StockEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    with GP as (
    select GPCODE, GPMKET, GPQFXR, GPNAME from TGCORE.MONGP where GPDATE = #{monDate} ),
    CC as (
    select GZZQDM,KMMKET GZMKET,SUM(NVL(GZGZSL,0)) AS GZGZSL
    from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=#{prdCode} and GZDATE=#{monDate}
    and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX = 'GP' and KMZQLS != 'FZ' GROUP BY GZZQDM,KMMKET )
    select distinct CC.GZZQDM, CC.GZMKET,CC.GZGZSL, NVL(GPQFXR,' ') GPQFXR, NVL(GPNAME,' ') GPNAME from CC left join GP
    on CC.GZZQDM=GP.GPCODE and CC.GZMKET=GP.GPMKET
  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectJJHold,451,"  <select id=""selectJJHold"" resultMap=""JJEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    with GZ as (
    select GZZQDM, KMMKET GZMKET,SUM(NVL(GZGZSL,0)) AS GZGZSL
    from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=#{prdCode} and GZDATE=#{monDate}
    and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX = 'JJ' and KMZQLS != 'FZ' GROUP BY GZZQDM,KMMKET ),
    JJ as (select JJCODE, JJMKET, JJGLRN, JJTGRN, JJNAME from TGCORE.MONJJ where JJDATE = #{monDate})
    select distinct GZ.GZZQDM, GZ.GZMKET,GZ.GZGZSL, NVL(JJ.JJGLRN,' ') JJGLRN, NVL(JJ.JJTGRN,' ') JJTGRN,
    NVL(JJ.JJNAME,' ') JJNAME from GZ left join JJ on GZ.GZZQDM=JJ.JJCODE and GZ.GZMKET=JJ.JJMKET
  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectBondHold,495,"  <select id=""selectBondHold"" resultMap=""BondEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    with
    YZ as(select distinct 'Y' as MKET, YZZQDM as ZQDM from TGCORE.YHJZQ where YZCPDM=#{prdCode} and YZDATE between #{startDate} and #{monDate} and
    YZJYLX = 'F'),
    WX as (select distinct XGMKET as MKET, XGZQDM as ZQDM from TGCORE.EVLXG where XGCPDM = #{prdCode} and XGDATE between #{startDate} and #{monDate}
    and XGYWLB = 'WXPZ' and XGSTAT = 'A'),
    QS as (select distinct QSMKET as MKET, QSZQDM as ZQDM from TGCORE.JYSQS where QSCPDM=#{prdCode} and QSDATE between #{startDate} and #{monDate} and
    QSYWBZ = 'KZZQ'),
    JY as (select MKET, ZQDM from YZ union select MKET,ZQDM from WX union select MKET, ZQDM from QS),
    GZ as (select GZZQDM,KMMKET GZMKET,
    SUM(NVL(GZGZSL,0)) AS GZGZSL from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=#{prdCode} and GZDATE=#{monDate}
    and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS != 'FZ' GROUP BY
    GZZQDM,KMMKET),
    ZQ as (select ZQCODE,ZQMKET,ZQZQLB,ZQFXRN,ZQYSQY,ZQNAME,SCRITY from TGCORE.MONZQ where ZQSYFW = 'P' and ZQDATE = #{monDate})
    select distinct GZ.GZZQDM,GZ.GZMKET,GZ.GZGZSL, NVL(ZQ.ZQZQLB,' ') ZQZQLB,NVL(ZQ.ZQFXRN,' ') ZQFXRN,NVL(ZQ.ZQYSQY,' ') ZQYSQY,
    NVL(ZQ.ZQNAME,' ') ZQNAME, NVL(ZQ.SCRITY, ' ') AS SCRITY from GZ left join ZQ on GZ.GZZQDM=ZQ.ZQCODE and GZ.GZMKET=ZQ.ZQMKET
    where NOT EXISTS (select 1 from JY where GZMKET=MKET and GZZQDM=ZQDM)
  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectNewBondHold,564,"  <select id=""selectNewBondHold"" resultMap=""BondEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    with
    YZ as(select distinct 'Y' as MKET, YZZQDM as ZQDM from TGCORE.YHJZQ where YZCPDM=#{prdCode} and YZDATE between #{startDate} and #{monDate} and YZJYLX = 'F'),
    WX as (select distinct XGMKET as MKET, XGZQDM as ZQDM from TGCORE.EVLXG where XGCPDM = #{prdCode} and XGDATE between #{startDate} and #{monDate} and XGYWLB = 'WXPZ' and XGSTAT = 'A'),
    QS as (select distinct QSMKET as MKET, QSZQDM as ZQDM from TGCORE.JYSQS where QSCPDM=#{prdCode} and QSDATE between #{startDate} and #{monDate} and QSYWBZ = 'KZZQ'),
    JY as (select MKET, ZQDM from YZ union select MKET,ZQDM from WX union select MKET, ZQDM from QS),
    <choose>
      <when test=""prdType == 'QD' or prdType == 'QF' or prdType == 'BX'"">
        CC as (select distinct KMMKET GZMKET, SECCODE GZZQDM
        from TGCORE.EVALUATION,TGCORE.MONKM where BIZDATE=#{monDate} and PRDCODE=#{prdCode}
        and COACODE=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS != 'FZ'
        and KMKMBZ='CNY' and KMBZXX!='OVERSEA'),
      </when>
      <otherwise>
        CC as (select distinct KMMKET GZMKET, GZZQDM
        from TGCORE.EVLGZ,TGCORE.MONKM where GZDATE = #{monDate} and GZCPDM = #{prdCode}
        and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS != 'FZ'),
      </otherwise>
    </choose>
    ZQ as (select ZQMKET, ZQCODE, ZQZCXS,ZQZQLB,ZQFXRN,ZQYSQY,ZQNAME,ZQCXSD, ZQCXED, SCRITY from TGCORE.MONZQ where ZQDATE = #{monDate} and ZQSYFW =
    'P')
    select distinct CC.GZZQDM, CC.GZMKET, NVL(ZQ.ZQZCXS,' ') ZQZCXS, NVL(ZQ.ZQZQLB,' ') ZQZQLB,
    NVL(ZQ.ZQFXRN,' ') ZQFXRN, NVL(ZQ.ZQYSQY,' ') ZQYSQY, NVL(ZQ.ZQNAME,' ') ZQNAME, ZQ.ZQCXSD, ZQ.ZQCXED, NVL(ZQ.SCRITY, ' ') AS SCRITY from CC left
    join ZQ
    on GZMKET=ZQMKET and GZZQDM=ZQCODE where EXISTS
    (select 1 from JY where CC.GZMKET=MKET and CC.GZZQDM=ZQDM)
  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectHoldByProduct,591,"  <select id=""selectHoldByProduct"" resultMap=""SubjectEvlMap"" parameterType=""cmb.custody.monitor.domain.related.entity.RelatedEvlParamEntity"">
    select GZCPDM, GZDATE, GZZQDM, kmmket, KMZQLX, GZZHMC
    from TGCORE.EVLGZ, TGCORE.MONKM where gzcpdm = #{prdCode} and gzdate = #{monDate} AND kmcplx= #{subjectType}
    and KMTYPE= 'CB' and ISFINAL='Y' and KMZQLS != 'FZ' and kmcode =gzkmdm
  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectXyzHold,602,"  <select id=""selectXyzHold"" resultMap=""BondEvlMap"">
    with kmgz as (select GZZQDM,KMMKET GZMKET, GZSZZE, KMZQLX from TGCORE.EVLGZ, TGCORE.MONKM where GZCPDM = #{prdCode} and GZDATE = #{monDate} and GZKMDM = KMCODE
    and KMCPLX= #{subjectType}  and ISFINAL='Y' and KMZQLX in('ZQ','ZCZQ') and KMZQLS != 'FZ' and KMTYPE in ('CB','YZ','JZZB01','JZZB03','JZZB02','LX','YJLX'))
    select kmgz.*, ZQNAME,ZQZQLB,ZQFXRN,ZQYSQY from kmgz inner join TGCORE.MONZQ on GZMKET=ZQMKET and GZZQDM=ZQCODE
    where ZQDATE=#{monDate} and ZQSYFW='P' and ZQSTAT='A'
    <if test=""bondTypes != null and bondTypes.size() > 0"">
      and ZQZQLB in
      <foreach collection=""bondTypes"" open=""("" close="")"" separator="","" item=""item"">
        #{item}
      </foreach>
    </if>

  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectHoldBySelective,642,"  <select id=""selectHoldBySelective"" resultMap=""SubjectEvlMap"">
    select distinct GZDATE, GZCPDM, GZZQDM, KMMKET, KMZQLX,sum(GZSZZE) GZSZZE, GZGZJG FROM TGCORE.EVLGZ, TGCORE.MONKM
    where GZCPDM = #{prdCode} and GZDATE between #{startDate, jdbcType=TIMESTAMP} and #{endDate, jdbcType=TIMESTAMP} and KMCPLX = #{prdSubjectType}
    and KMTYPE = 'CB' and ISFINAL='Y' and KMZQLS != 'FZ' and GZKMDM = KMCODE
    <if test=""kmSecTypes != null and kmSecTypes.size() != 0"">
      and KMZQLX in
      <foreach collection=""kmSecTypes"" separator="","" item=""item"" open=""("" close="")"">
        #{item}
      </foreach>
    </if>
    group by GZDATE, GZCPDM, GZZQDM, KMMKET, KMZQLX, GZGZJG
    order by GZCPDM, GZZQDM, KMMKET, GZDATE
  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectPensionHold,662,"  <select id=""selectPensionHold"" resultMap=""JJEvlMap"">
    with GZ as (
    select GZZQDM, KMMKET GZMKET,SUM(NVL(GZGZSL,0)) AS GZGZSL from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM=#{prdCode} and GZDATE=#{monDate}
    and GZKMDM=KMCODE and KMCPLX=#{subjectType} and KMTYPE ='CB' and ISFINAL='Y' and KMZQLX = 'YL' and KMZQLS != 'FZ' GROUP BY GZZQDM,KMMKET ),
    JJ as (select JJCODE, JJMKET, JJGLRN, JJTGRN, JJNAME from TGCORE.MONJJ where JJDATE = #{monDate})
    select distinct GZ.GZZQDM, GZ.GZMKET,GZ.GZGZSL, NVL(JJ.JJGLRN,' ') JJGLRN, NVL(JJ.JJTGRN,' ') JJTGRN,
    NVL(JJ.JJNAME,' ') JJNAME from GZ left join JJ on GZ.GZZQDM=JJ.JJCODE and GZ.GZMKET=JJ.JJMKET
  </select>"
target\classes\mapper\prd\EvlgzMapper.xml,selectCmpSpvHold,670,"  <select id=""selectCmpSpvHold"" resultMap=""SpvEvlMap"">
    WITH GZ AS (SELECT GZZQDM, GZSZZE, GZDATE, GZZHMC, GZCPDM, KMMKET AS GZMKET, GZZHDM FROM TGCORE.EVLGZ, TGCORE.MONKM
    WHERE gzcpdm = #{prdCode} AND gzdate = #{monDate} AND KMCODE = GZKMDM AND KMCPLX = #{subjectType}
    AND ISFINAL = 'Y' AND KMTYPE IN ('CB', 'YZ') AND KMZQLX = 'SPV' AND KMZQLS NOT IN ('FZ', 'WY'))
    SELECT distinct GZ.GZZQDM, GZ.GZMKET, NVL(SPV.ZQFXR, ' ') AS ZQFXR, #{prdCode} AS PRDCODE,
    NVL(SPV.ZQNAME, ' ') AS ZQNAME, NVL(SPV.ZQZQLB, ' ') AS SPVTYPE
    FROM GZ LEFT JOIN (SELECT * FROM TGCORE.MONSPV WHERE (ZQCODE,ZQCPDM) IN (SELECT ZQCODE,max(ZQCPDM) ZQCPDM FROM TGCORE.MONSPV
    WHERE ZQCPDM=#{prdCode} OR ZQCPDM=' ' GROUP BY ZQCODE)) SPV
    ON ZQMKET = GZMKET AND ZQCODE = GZZQDM
  </select>"
target\classes\mapper\sec\FundMapper.xml,getSZZEByFundCode,486,"  <select id=""getSZZEByFundCode"" resultType=""cmb.custody.monitor.domain.index.entity.StockHoldInfo"">
    with kmgz as (select NVL(GZSZZE,0) GZSZZE, GZZQDM,CASE KMCPLX WHEN 'BX' THEN (CASE KMMKET WHEN 'G' THEN 'X' ELSE KMMKET END) ELSE KMMKET END AS
    KMMKET from TGCORE.EVLGZ,TGCORE.MONKM where GZCPDM= #{prdCode} and GZDATE= #{monDate} and GZKMDM=KMCODE and KMCPLX= #{subjectType}  and
    ISFINAL='Y' and KMZQLX in('JJ') AND KMTYPE  ='CB' and KMZQLS != 'FZ' AND GZZQDM IN
    <foreach collection=""fundCodeList"" separator="","" item=""fundCode"" open=""("" close="")"">
      #{fundCode}
    </foreach>)
    select GZZQDM AS ZSZQDM, JJNAME AS ZSZQMC, KMMKET AS ZSMKET, GZSZZE
    from kmgz left join (select JJNAME,JJCODE,JJMKET FROM TGCORE.MONJJ where JJDATE = #{monDate,jdbcType=DATE})
    on jjcode = gzzqdm and jjmket = kmmket
  </select>"
target\classes\mapper\verify\MonitorVerifyMapper.xml,selectEvaluateCount,18,"    <select id=""selectEvaluateCount"" resultType=""java.lang.Integer"">
        select count(*)
            from TGCORE.EVLGZ
        where GZDATE = #{date}
        AND   GZCPDM = #{prdCode}
        FETCH FIRST 1 ROWS ONLY
    </select>"
target\classes\mapper\verify\MonitorVerifyMapper.xml,getRecentGzDate,104,"    <select id=""getRecentGzDate"" resultType=""java.sql.Date"">
        WITH gzrq AS (SELECT GZDATE FROM tgcore.EVLGZ WHERE GZCPDM=#{prdCode}  AND GZZHDM=#{zhdm} AND GZDATE  &lt; #{gzdate}  ORDER BY GZDATE DESC )
        SELECT max(RLDATE) AS  GZDATE  FROM tgcore.PUBRL,gzrq  WHERE GZDATE = RLDATE and RLWORK='Y'
    </select>"
target\classes\mapper\zyyx\ZyyxMapper.xml,listZyyxOnlyHoldingSummary,114,"    <select id=""listZyyxOnlyHoldingSummary"" resultMap=""zyyxMonResultMap"">
        <include refid=""subjectPrdType"" />
        kmgz AS (
            select
                DISTINCT GZCPDM, KMMKET AS GZMKET, GZZQDM, GZDATE from subjectPrdType,TGCORE.EVLGZ,TGCORE.MONKM
            where GZCPDM = subjectPrdType.prdCode
            AND  GZDATE >= #{startDate} AND GZDATE <![CDATA[<=]]> #{endDate}
            and KMCPLX=subjectPrdType.subject_type
            and KMCODE=GZKMDM and KMZQLX = 'GP' and ISFINAL='Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ'
        ),
        zyyx as(
            SELECT
                BUSDATE,GPCODE,GPMKET,GPNAME,TRADEDATE,SECUTYPE from TGCORE.MON_ZYYXJXT
            where BUSDATE BETWEEN #{startDate} AND #{endDate} and SECUTYPE = 'A股'
        ),
        ccresult AS (
            SELECT
                DISTINCT kmgz.GZCPDM, kmgz.GZMKET, kmgz.GZZQDM, NVL(zyyx.GPCODE,' ')  AS notCovered
            FROM kmgz
            LEFT JOIN zyyx ON kmgz.GZDATE = zyyx.BUSDATE AND kmgz.GZZQDM = zyyx.GPCODE AND kmgz.GZMKET = zyyx.GPMKET
        ),
        converedCcResult AS (
            SELECT * FROM ccresult WHERE GZZQDM = notCovered
        ),
        ccresultRecord AS (
            SELECT DISTINCT ccresult.GZCPDM, ccresult.GZMKET, ccresult.GZZQDM FROM ccresult
        ),
        lastestGpDate as(
            SELECT max(gpdate) AS lastestGpdate FROM TGCORE.MONGP
        )
        SELECT
            ccresultRecord.*,NVL(gpname,' ') AS gpname, NVL(converedCcResult.notCovered,' ') AS notCovered,'持仓匹配' AS matchingMode
        FROM ccresultRecord
        LEFT JOIN converedCcResult ON converedCcResult.GZMKET = ccresultRecord.GZMKET AND converedCcResult.GZZQDM = ccresultRecord.GZZQDM
        LEFT JOIN (
            SELECT
                GPMKET,GPCODE,GPDATE,gpname FROM TGCORE.MONGP,lastestGpDate
            WHERE GPDATE = lastestGpDate.lastestGpdate
        ) lastestMonGP on GPMKET = ccresultRecord.GZMKET AND GPCODE = ccresultRecord.GZZQDM
    </select>"
target\classes\mapper\zyyx\ZyyxMapper.xml,listZyyxSummary,156,"    <select id=""listZyyxSummary"" resultMap=""zyyxSummaryMap"">
        <include refid=""subjectPrdType"" />
        kmgz AS (
            select
                DISTINCT GZCPDM, KMMKET AS GZMKET, GZZQDM, GZDATE from subjectPrdType,TGCORE.EVLGZ,TGCORE.MONKM
            where GZCPDM = subjectPrdType.prdCode
            AND  GZDATE >= #{startDate} AND GZDATE <![CDATA[<=]]> #{endDate}
            and KMCPLX=subjectPrdType.subject_type
            and KMCODE=GZKMDM and KMZQLX = 'GP' and ISFINAL='Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ'
        ),
        zyyx as(
            SELECT
                BUSDATE,GPCODE,GPMKET,GPNAME,TRADEDATE,SECUTYPE from TGCORE.MON_ZYYXJXT
            where BUSDATE BETWEEN #{startDate} AND #{endDate} and SECUTYPE = 'A股'
        ),
        ccresult AS (
            SELECT
                DISTINCT kmgz.GZCPDM, kmgz.GZMKET, kmgz.GZZQDM, NVL(zyyx.GPCODE,' ')  AS notCovered
            FROM kmgz
            LEFT JOIN zyyx ON kmgz.GZDATE = zyyx.BUSDATE AND kmgz.GZZQDM = zyyx.GPCODE AND kmgz.GZMKET = zyyx.GPMKET
        ),
        converedCcResult AS (
            SELECT * FROM ccresult WHERE GZZQDM = notCovered
        ),
        ccresultRecord AS (
            SELECT DISTINCT ccresult.GZCPDM, ccresult.GZMKET, ccresult.GZZQDM FROM ccresult
        ),
        ccSummary as(
            SELECT
                ccresultRecord.*,' ' AS gpname, NVL(converedCcResult.notCovered,' ') AS notCovered,'持仓匹配' AS matchingMode
            FROM ccresultRecord
            LEFT JOIN converedCcResult ON converedCcResult.GZMKET = ccresultRecord.GZMKET AND converedCcResult.GZZQDM = ccresultRecord.GZZQDM
        ),
        jyRecord AS (
            SELECT
                XGDATE AS GZDATE,XGCPDM AS GZCPDM,XGZQDM AS gzzqdm,XGMKET AS GZMKET
            FROM TGCORE.EVLXG
            WHERE XGDATE BETWEEN #{startDate} and #{endDate}
            AND xgcpdm = #{prdCode} AND XGSTAT = 'A' AND xgcjsl > 0
            UNION
            SELECT
                QSDATE AS GZDATE,QSCPDM AS GZCPDM,QSGQDM AS gzzqdm,QSMKET AS GZMKET
            FROM TGCORE.JYSQS
            WHERE qsdate BETWEEN #{startDate} and #{endDate}
            AND QSCPDM = #{prdCode}  AND QSMMBZ = 'B' AND QSSTAT = 'A' AND qscjsl > 0
        ),
        jydetail AS (
            SELECT
                GZDATE,GZCPDM,gzzqdm,GZMKET,NVL(zyyx.GPCODE,' ') AS notCovered
            FROM jyRecord
            LEFT JOIN zyyx ON jyRecord.GZDATE = zyyx.BUSDATE AND jyRecord.GZZQDM = zyyx.GPCODE AND jyRecord.GZMKET = zyyx.GPMKET
        ),
        jyresultRecord AS (
            SELECT DISTINCT GZCPDM,GZMKET,gzzqdm FROM jyDetail
        ),
        converedJyResult AS (
            SELECT * FROM jydetail WHERE GZZQDM = notCovered
        ),
        jySummary AS (
            SELECT jyresultRecord.*,' ' AS gpname, NVL(converedJyResult.notCovered,' ') AS notCovered,'交易匹配' AS matchingMode
                FROM jyresultRecord
            LEFT JOIN converedJyResult ON converedJyResult.GZMKET = jyresultRecord.GZMKET AND converedJyResult.GZZQDM = jyresultRecord.GZZQDM
        )
        SELECT
            nvl(ccSummary.gzcpdm,' ') as  holdingPrdCode,nvl(ccSummary.gzmket,' ') AS holdingMarket,
            nvl(ccSummary.gzzqdm,' ') AS holdingStockCode,nvl(ccSummary.gpname,' ') AS holdingStockName,
            nvl(ccSummary.notcovered,' ') AS holdingNotCovered, nvl(ccSummary.matchingmode,' ') AS holdingMatchingMode,
            nvl(jySummary.gzcpdm,' ') as tradingPrdCode,nvl(jySummary.gzmket,' ') AS tradingMarket, nvl(jySummary.gzzqdm,' ') AS tradingStockCode,
            nvl(jySummary.gpname,' ') AS tradingStockName, nvl(jySummary.notcovered,' ') AS tradingNotCovered,
            nvl(jySummary.matchingmode,' ') AS tradingMatchingMode
        FROM ccSummary
        FULL JOIN jySummary ON ccSummary.gzmket = jySummary.gzmket AND ccSummary.gzzqdm = jySummary.gzzqdm
    </select>"
target\classes\mapper\zyyx\ZyyxMapper.xml,listZyyxHolding,230,"    <select id=""listZyyxHolding"" resultMap=""zyyxHoldingResultMap"">
        <include refid=""subjectPrdType"" />
        kmgz AS (
            select
                GZCPDM, KMMKET AS GZMKET, GZZQDM, GZDATE,SUM(GZGZSL) AS GZGZSL from subjectPrdType,TGCORE.EVLGZ,TGCORE.MONKM
            where GZCPDM = subjectPrdType.prdCode
            AND  GZDATE >= #{startDate} AND GZDATE <![CDATA[<=]]> #{endDate}
            AND KMCPLX=subjectPrdType.subject_type
            AND KMCODE=GZKMDM and KMZQLX = 'GP' and ISFINAL='Y' and KMTYPE='CB' and KMZQLS <![CDATA[<>]]> 'FZ'
            GROUP BY GZCPDM,GZDATE,KMMKET,GZZQDM
        ),
        ccgp as(
            SELECT
                kmgz.*, GPNAME from kmgz
            left join TGCORE.MONGP on GPDATE = kmgz.GZDATE AND GPMKET = kmgz.GZMKET AND GPCODE = kmgz.GZZQDM
        ),
        zyyx as(
            SELECT
                BUSDATE,GPCODE,GPMKET,GPNAME,TRADEDATE,SECUTYPE from TGCORE.MON_ZYYXJXT
            where BUSDATE BETWEEN #{startDate} AND #{endDate} and SECUTYPE = 'A股'
        )
        SELECT
            ccgp.GZCPDM,ccgp.GZDATE, ccgp.GZMKET, ccgp.GZZQDM, ccgp.GPNAME,ccgp.GZGZSL,NVL(zyyx.GPCODE,' ')  AS notCovered,' ' AS matchingMode
        FROM ccgp
        LEFT JOIN zyyx ON ccgp.GZDATE = zyyx.BUSDATE AND ccgp.GZZQDM = zyyx.GPCODE AND ccgp.GZMKET = zyyx.GPMKET
        ORDER BY ccgp.GZCPDM,ccgp.GZDATE,ccgp.GZZQDM
    </select>"
